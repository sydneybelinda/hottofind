{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Person from \"@material-ui/icons/Person\";\nimport RemoveRedEye from \"@material-ui/icons/RemoveRedEye\";\nimport Room from \"@material-ui/icons/Room\";\nimport * as React from \"react\";\nimport Img from \"react-image\"; //import ImageExists from 'image-exists';\n\nimport Moment from \"react-moment\"; // import Button from '../components/Button';\n\nfunction Capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar styles = function styles(theme) {\n  var _imageWrap, _personIcon, _roomIcon, _ref;\n\n  return _ref = {\n    gi: {\n      paddingTop: \"15px\",\n      paddingBottom: \"15px\"\n    },\n    imageWrap: (_imageWrap = {\n      width: \"100%\",\n      paddingBottom: \"100%\",\n      position: \"relative\",\n      borderTop: \"1px solid silver\",\n      borderBottom: \"1px solid silver\",\n      overflow: \"hidden\"\n    }, _defineProperty(_imageWrap, \"width\", \"30%\"), _defineProperty(_imageWrap, \"display\", \"inline-block\"), _defineProperty(_imageWrap, \"paddingBottom\", \"30%\"), _defineProperty(_imageWrap, theme.breakpoints.up(\"sm\"), {\n      width: \"100%\",\n      display: \"block\",\n      paddingBottom: \"69%\",\n      borderTop: \"1px solid silver\",\n      borderBottom: \"1px solid silver\"\n    }), _imageWrap),\n    cat: {\n      fontSize: \"11px\",\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: \"400\",\n      lineHeight: \"1.43\",\n      letterSpacing: \"0.01071em\",\n      padding: \"16px\",\n      paddingBottom: \"2px\",\n      color: \"rgba(0, 0, 0, 0.87)\",\n      paddingTop: \"8px\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      textOverflow: \"ellipsis\"\n    },\n    date: _defineProperty({\n      paddingLeft: \"16px\",\n      paddingRight: \"16px\",\n      paddingBottom: \"8px\",\n      color: \"rgba(0, 0, 0, 0.54)\",\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: \"400\",\n      fontSize: \"10px\",\n      lineHeight: \"1.43\",\n      letterSpacing: \"0.01071em\"\n    }, theme.breakpoints.up(\"sm\"), {\n      fontSize: \"11px\"\n    }),\n    cardLeft: _defineProperty({\n      flex: \"1 100%\",\n      background: \"#ffffff\",\n      textAlign: \"right\"\n    }, theme.breakpoints.up(\"sm\"), {\n      background: \"#e6e6e6\",\n      textAlign: \"left\",\n      width: \"100%\"\n    }),\n    cardRight: {\n      flex: \"0\",\n      padding: \"16px\",\n      background: \"#efefef\"\n    },\n    cHeader: _defineProperty({\n      display: \"flex\",\n      position: \"absolute\",\n      left: \"30%\",\n      right: \"16px\"\n    }, theme.breakpoints.up(\"sm\"), {\n      position: \"relative\",\n      left: \"auto\",\n      right: \"auto\"\n    }),\n    price: {\n      fontSize: \"12px\"\n    },\n    views: {\n      color: \"black\",\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: \"400\",\n      fontSize: \"11px\",\n      lineHeight: \"1.43\",\n      letterSpacing: \"0.01071em\",\n      position: \"absolute\",\n      right: \"0\",\n      bottom: \"0\",\n      zIndex: \"99\",\n      padding: \"5px\",\n      margin: \"4px\",\n      background: \"#ffffffcc\",\n      borderRadius: \"4px\"\n    },\n    viewIcon: {\n      height: \"11px\",\n      width: \"11px\",\n      color: \"rgba(0, 0, 0, 0.54)\",\n      lineHeight: \"1.43\"\n    },\n    title: {\n      fontSize: \"16px\",\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: \"500\",\n      // lineHeight: \"1.43\",\n      letterSpacing: \"0.01071em\",\n      color: \"black\"\n    },\n    owner: {\n      // paddingLeft: '16px',\n      //  paddingBottom: '16px',\n      color: \"rgba(0, 0, 0, 0.54)\",\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: \"400\",\n      fontSize: \"11px\",\n      lineHeight: \"1.43\",\n      letterSpacing: \"0.01071em\",\n      flex: \"1\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      textOverflow: \"ellipsis\",\n      textAlign: \"left\"\n    },\n    personIcon: (_personIcon = {\n      height: \"11px\",\n      width: \"11px\",\n      color: \"rgba(0, 0, 0, 0.54)\",\n      lineHeight: \"1.43\"\n    }, _defineProperty(_personIcon, \"color\", \"rgba(0, 0, 0, 0.54)\"), _defineProperty(_personIcon, \"width\", \"11px\"), _defineProperty(_personIcon, \"height\", \"11px\"), _defineProperty(_personIcon, \"lineHeight\", \"1.43\"), _defineProperty(_personIcon, \"position\", \"relative\"), _defineProperty(_personIcon, \"top\", \"2px\"), _defineProperty(_personIcon, \"marginRight\", \"5px\"), _personIcon),\n    location: {\n      // paddingLeft: '16px',\n      //  paddingBottom: '16px',\n      color: \"rgba(0, 0, 0, 0.54)\",\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      fontWeight: \"400\",\n      fontSize: \"11px\",\n      lineHeight: \"1.43\",\n      letterSpacing: \"0.01071em\",\n      flex: \"1\",\n      textAlign: \"right\"\n    },\n    roomIcon: (_roomIcon = {\n      height: \"11px\",\n      width: \"11px\",\n      color: \"rgba(0, 0, 0, 0.54)\",\n      lineHeight: \"1.43\"\n    }, _defineProperty(_roomIcon, \"color\", \"rgba(0, 0, 0, 0.54)\"), _defineProperty(_roomIcon, \"width\", \"11px\"), _defineProperty(_roomIcon, \"height\", \"11px\"), _defineProperty(_roomIcon, \"lineHeight\", \"1.43\"), _defineProperty(_roomIcon, \"position\", \"relative\"), _defineProperty(_roomIcon, \"top\", \"2px\"), _defineProperty(_roomIcon, \"marginRight\", \"5px\"), _roomIcon),\n    cardBottom: {\n      display: \"flex\"\n    },\n    card: {\n      boxShadow: \"0 0px 26px 2px rgba(0, 0, 0, 0.14), 0 6px 12px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n    }\n  }, _defineProperty(_ref, \"price\", {\n    position: \"absolute\",\n    right: \"0\",\n    padding: \"6px\",\n    zIndex: \"99\",\n    color: \"white\",\n    background: \"#3b4f63de\",\n    borderRadius: \"4px\",\n    margin: \"4px\"\n  }), _defineProperty(_ref, \"content\", _defineProperty({\n    width: \"70%\",\n    \"float\": \"right\",\n    marginTop: \"29px\"\n  }, theme.breakpoints.up(\"sm\"), {\n    width: \"100%\",\n    \"float\": \"none\",\n    marginTop: \"0\"\n  })), _ref;\n};\n\nvar PostPreview =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostPreview, _React$Component);\n\n  function PostPreview() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostPreview);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostPreview)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleViewPost\", function (id) {\n      window.location.href = \"/post/\".concat(id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addDefaultSrc\", function (ev) {\n      ev.target.src = \"/uploadedimages/noimage.jpg\";\n    });\n\n    return _this;\n  }\n\n  _createClass(PostPreview, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var post = this.props.post;\n      var image;\n\n      if (post.files[0]) {\n        image = \"/uploadedimages/\" + post.files[0].name; // if (!fs.existsSync(image)) {\n        //  image = \"/uploadedimages/noimage.jpg\";\n        // }\n      } else image = \"/uploadedimages/noimage.jpg\"; //const src = URL + image\n\n\n      var dateToFormat = this.props.post.updatedAt;\n      return (//   <GridItem item xs={6} sm={3} className={classes.gi}>\n        __jsx(Card, {\n          className: classes.card\n        }, __jsx(\"div\", {\n          className: classes.cHeader\n        }, __jsx(\"div\", {\n          className: classes.cardLeft\n        }, __jsx(\"div\", {\n          className: classes.cat\n        }, this.props.post.catindex, \" > \", this.props.post.keyindex), __jsx(\"div\", {\n          className: classes.date\n        }, __jsx(Moment, {\n          date: dateToFormat,\n          format: \"D MMMM YY - HH:mm\"\n        })))), __jsx(CardActionArea, {\n          onClick: function onClick() {\n            return _this2._handleViewPost(post.id);\n          }\n        }, __jsx(\"div\", {\n          className: classes.imageWrap\n        }, this.props.post.price ? __jsx(\"div\", {\n          className: classes.price\n        }, \"$\", this.props.post.price) : \"\", __jsx(\"div\", {\n          className: classes.views\n        }, __jsx(RemoveRedEye, {\n          className: classes.viewIcon\n        }), \" \", this.props.post.views), __jsx(Img, {\n          className: \"img-responsive\",\n          src: [image, \"/uploadedimages/noimage.jpg\"],\n          alt: this.props.post.title,\n          style: {\n            position: \"absolute\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            width: \"100%\"\n          }\n        })), __jsx(CardContent, {\n          className: classes.content\n        }, __jsx(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h3\",\n          noWrap: true,\n          className: classes.title\n        }, post.title ? post.title : \"untitled\"), __jsx(\"div\", {\n          className: classes.cardBottom\n        }, __jsx(\"div\", {\n          className: classes.owner\n        }, __jsx(Person, {\n          className: classes.personIcon\n        }), \" \", this.props.post.owner), __jsx(\"div\", {\n          className: classes.location\n        }, __jsx(Room, {\n          className: classes.roomIcon\n        }), \" \", this.props.post.cities ? Capitalize(this.props.post.cities) : \"\")))))\n      );\n    }\n  }]);\n\n  return PostPreview;\n}(React.Component);\n\nexport default withStyles(styles)(PostPreview);","map":null,"metadata":{},"sourceType":"module"}