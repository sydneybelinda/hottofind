{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nvar useStyles = makeStyles({\n  card: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  icon: {\n    borderRadius: \"50%\",\n    width: 16,\n    height: 16,\n    boxShadow: \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\"\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\"\n    }\n  },\n  checkedIcon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 16,\n      height: 16,\n      backgroundImage: \"radial-gradient(#fff,#fff 28%,transparent 32%)\",\n      content: '\"\"'\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\"\n    }\n  },\n  locHead: {\n    marginBottom: \"15px\"\n  }\n});\n\nfunction StyledRadio(props) {\n  var classes = useStyles();\n  return __jsx(Radio, _extends({\n    className: classes.root,\n    disableRipple: true,\n    color: \"default\",\n    checkedIcon: __jsx(\"span\", {\n      className: clsx(classes.icon, classes.checkedIcon)\n    }),\n    icon: __jsx(\"span\", {\n      className: classes.icon\n    })\n  }, props));\n}\n\nexport default function LocationMenu(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(props.city),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var router = useRouter();\n  var pathname = router.pathname;\n\n  var bull = __jsx(\"span\", {\n    className: classes.bullet\n  }, \"\\u2022\");\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n    var city = event.target.value;\n    var href = \"/posts\";\n\n    if (props.catindex) {\n      href += \"/\".concat(props.catindex);\n    }\n\n    if (props.keyindex) {\n      href += \"/\".concat(props.keyindex);\n    }\n\n    if (city) {\n      href += \"?city=\".concat(city);\n    }\n\n    if (city == \"ALL CITIES\") {\n      var href = pathname + \"/\" + props.catindex + \"/\" + props.keyindex;\n    }\n\n    router.push(href);\n  };\n\n  return __jsx(Card, {\n    className: classes.card\n  }, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    className: classes.locHead\n  }, \"LOCATION\"), __jsx(FormControl, {\n    component: \"fieldset\"\n  }, __jsx(RadioGroup, {\n    defaultValue: \"ALL CITIES\",\n    \"aria-label\": \"cities\",\n    name: \"cities\",\n    value: value,\n    onChange: handleChange\n  }, __jsx(FormControlLabel, {\n    value: \"ALL CITIES\",\n    control: __jsx(StyledRadio, null),\n    label: \"ALL CITIES\",\n    key: \"ALL CITIES\"\n  }), props.cities.map(function (city) {\n    return __jsx(FormControlLabel, {\n      value: city.city.toLowerCase(),\n      control: __jsx(StyledRadio, null),\n      label: city.city,\n      key: city.city\n    });\n  })))), __jsx(CardActions, null));\n}","map":null,"metadata":{},"sourceType":"module"}