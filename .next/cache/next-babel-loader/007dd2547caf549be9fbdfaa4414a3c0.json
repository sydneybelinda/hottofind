{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\src\\\\hottofindtest\\\\components\\\\dashboard\\\\profileForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Router from \"next/router\";\nimport SimpleSelect from \"./simpleSelect\";\nimport * as Queries from \"../../utils/queries\";\nimport dynamic from \"next/dynamic\";\nimport { COUNTRYCODE } from \"../../config\"; // const UploadComponent = dynamic(() => import(\"./uploadcomponent\"), {\n//   ssr: false\n// });\n\nvar ProfileFilePond = dynamic(function () {\n  return import(\"./profileFilePond\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./profileFilePond\")];\n    },\n    modules: [\"./profileFilePond\"]\n  }\n});\n\nvar styles = function styles(theme) {\n  return {\n    \"@global\": {\n      body: {\n        backgroundColor: theme.palette.common.white\n      }\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\",\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n};\n\nvar ProfileForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileForm, _React$Component);\n\n  function ProfileForm(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileForm).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeCountry\", function (e) {\n      _this.setState({\n        cities: \"\"\n      });\n\n      _this.setState({\n        country: e.target.value\n      });\n\n      var filter = function filter(tag, arr) {\n        return arr.filter(function (ct) {\n          return ct.countrycode === tag;\n        });\n      };\n\n      var filtered = filter(e.target.value, _this.props.citydata);\n      var cts = [];\n      filtered.map(function (ct) {\n        cts.push({\n          label: ct.city,\n          value: ct.city.toLowerCase()\n        });\n      });\n\n      _this.setState({\n        citydata: cts\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeCity\", function (e) {\n      _this.setState({\n        city: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function _callee(event) {\n      var fs;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                errors: \"\"\n              });\n\n              fs = []; //var myJSON = JSON.stringify(this.ref1);\n              //console.log(`ref1: ${myJSON}`)\n\n              _this.ref1.getFiles().map(function (fileItem) {\n                return fileItem.file;\n              }).forEach(function (file) {\n                var name = file.name.split('.')[0];\n                var fileName = \"\".concat(name, \".jpg\"); //  formData.append(fieldName, file, file.name);\n                //  console.log(file.name);\n\n                fs.push({\n                  name: fileName,\n                  owner: _this.props.user.username\n                });\n              }); // this.setState(\n              //   {\n              //     uploads: fs\n              //   },\n              //   this.handleSave\n              // );\n\n\n              _this.handleSave;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSave\", function _callee2(event) {\n      var response, error, json, resperrors, _response;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                error: \"\"\n              });\n\n              _context2.prev = 2;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(Queries.submitProfile(_this.state));\n\n            case 5:\n              response = _context2.sent;\n\n              if (!(response.status === 200)) {\n                _context2.next = 10;\n                break;\n              }\n\n              Router.push('/profile');\n              _context2.next = 19;\n              break;\n\n            case 10:\n              console.log('Edit failed.'); // https://github.com/developit/unfetch#caveats\n\n              error = new Error(response.statusText);\n              error.response = response;\n              _context2.next = 15;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 15:\n              json = _context2.sent;\n              resperrors = json.errors[0].message;\n\n              _this.setState({\n                error: resperrors || error.message\n              });\n\n              throw error;\n\n            case 19:\n              _context2.next = 25;\n              break;\n\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error('You have an error in your code or there are Network issues.', _context2.t0);\n              _response = _context2.t0.response; //   this.setState({\n              //     error:  response ? response.statusText : error.message\n              //   })\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[2, 21]]);\n    });\n\n    var user = _this.props.userdata;\n    var mca = [];\n    var countries = [];\n\n    _this.props.citydata.map(function (c) {\n      if (mca.indexOf(c.countrycode) === -1) {\n        mca.push(c.countrycode);\n        countries.push({\n          label: c.country,\n          value: c.countrycode\n        });\n      }\n    });\n\n    if (user.city) {\n      var cities = [];\n\n      _this.props.citydata.map(function (ct) {\n        cities.push({\n          label: ct.city,\n          value: ct.city.toLowerCase()\n        });\n      });\n    }\n\n    _this.ref1 = React.createRef();\n    _this.state = _defineProperty({\n      username: user.username,\n      name: user.name || '',\n      email: user.email || '',\n      address1: user.address1 || '',\n      address2: user.address2 || '',\n      city: user.city || '',\n      state: user.state || '',\n      country: user.country || '',\n      postcode: user.postcode || '',\n      avatar: user.avatar || '',\n      error: '',\n      citydata: cities || [],\n      countries: countries\n    }, \"error\", '');\n    return _this;\n  } //};\n  // componentDidMount = () => {\n  // var mca = [];\n  // var countries = [];\n  // this.props.citydata.map(c => {\n  //   if (mca.indexOf(c.countrycode) === -1) {\n  //     mca.push(c.countrycode);\n  //     countries.push({ label: c.country, value: c.countrycode });\n  //   }\n  //   console.log(countries)\n  // this.setState({ countries: countries });\n  // })\n  // if (this.state.cities) {\n  // var cities = [];\n  // this.props.citydata.map(ct => {\n  //   cities.push({ label: ct.city, value: ct.city.toLowerCase() });\n  // });\n  // this.setState({ citydata: cities });\n  //}\n\n\n  _createClass(ProfileForm, [{\n    key: \"onUpdateFiles\",\n    value: function onUpdateFiles(fileItems) {\n      console.log(fileItems); // this.setState({\n      //   files: fileItems.map(fileItem => fileItem.file)\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = this.props.user;\n      var post = this.props.post || [];\n      var classes = this.props.classes;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        noValidate: true,\n        onSubmit: this.handleSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Photo\", __jsx(\"div\", {\n        style: {\n          backgroundImage: \"url('\".concat(user.avatar, \"')\"),\n          backgroundSize: 'cover',\n          backgroundPosition: 'center top',\n          maxHeight: \"490px\",\n          minHeight: \"310px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, __jsx(ProfileFilePond, {\n        onupdatefiles: this.onUpdateFiles.bind(this),\n        setRef: function setRef(ref) {\n          return _this2.ref1 = ref;\n        } //    files={this.props.post.files}\n        ,\n        handleUploadImages: this.handleUploadImages,\n        user: this.props.userdata,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Update Personal Details\")), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, __jsx(TextField, {\n        required: true,\n        id: \"name\",\n        name: \"name\",\n        label: \"Name\",\n        fullWidth: true,\n        autoComplete: \"name\",\n        value: this.state.name,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, __jsx(TextField, {\n        required: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email Address\",\n        fullWidth: true,\n        autoComplete: \"email\",\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, __jsx(TextField, {\n        required: true,\n        id: \"address1\",\n        name: \"address1\",\n        label: \"Address line 1\",\n        fullWidth: true,\n        autoComplete: \"billing address-line1\",\n        value: this.state.address1,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address1: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, __jsx(TextField, {\n        id: \"address2\",\n        name: \"address2\",\n        label: \"Address line 2\",\n        fullWidth: true,\n        autoComplete: \"address2\",\n        value: this.state.address2,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address2: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, __jsx(SimpleSelect, {\n        options: this.state.countries,\n        value: this.state.country,\n        placeholder: \"Country\",\n        name: \"country\",\n        onChange: this._handleChangeCountry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, __jsx(SimpleSelect, {\n        options: this.state.citydata,\n        value: this.state.city,\n        placeholder: \"City\",\n        name: \"city\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            city: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, __jsx(TextField, {\n        id: \"state\",\n        name: \"state\",\n        label: \"State/Province/Region\",\n        fullWidth: true,\n        value: this.state.state,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            state: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, __jsx(TextField, {\n        required: true,\n        id: \"postcode\",\n        name: \"postcode\",\n        label: \"Zip / Postal code\",\n        fullWidth: true,\n        autoComplete: \"postcode\",\n        value: this.state.postcode,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            postcode: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, __jsx(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Submit\")))), this.state.error ? __jsx(\"p\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"Error: \", this.state.error) : ''));\n    }\n  }]);\n\n  return ProfileForm;\n}(React.Component);\n\nexport default withStyles(styles)(ProfileForm);","map":{"version":3,"sources":["C:/src/hottofindtest/components/dashboard/profileForm.js"],"names":["React","useState","useEffect","Grid","Typography","TextField","Button","withStyles","Router","SimpleSelect","Queries","dynamic","COUNTRYCODE","ProfileFilePond","ssr","styles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","ProfileForm","props","e","setState","cities","country","target","value","filter","tag","arr","ct","countrycode","filtered","citydata","cts","map","push","label","city","toLowerCase","event","preventDefault","errors","fs","ref1","getFiles","fileItem","file","forEach","name","split","fileName","owner","user","username","handleSave","error","submitProfile","state","response","status","console","log","Error","statusText","json","resperrors","message","userdata","mca","countries","c","indexOf","createRef","email","address1","address2","postcode","fileItems","post","classes","backgroundImage","backgroundSize","backgroundPosition","maxHeight","minHeight","onUpdateFiles","bind","ref","handleUploadImages","_handleChangeCountry","Component"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Router from \"next/router\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport * as Queries from \"../../utils/queries\";\r\n\r\nimport dynamic from \"next/dynamic\";\r\nimport { COUNTRYCODE } from \"../../config\";\r\n\r\n// const UploadComponent = dynamic(() => import(\"./uploadcomponent\"), {\r\n//   ssr: false\r\n// });\r\n\r\nconst ProfileFilePond = dynamic(() => import(\"./profileFilePond\"), {\r\n  ssr: false\r\n});\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n});\r\n\r\nclass ProfileForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const user = this.props.userdata;\r\n\r\n    var mca = [];\r\n    var countries = [];\r\n    this.props.citydata.map(c => {\r\n      if (mca.indexOf(c.countrycode) === -1) {\r\n        mca.push(c.countrycode);\r\n        countries.push({ label: c.country, value: c.countrycode });\r\n      }\r\n\r\n    })\r\n\r\n    if (user.city) {\r\n    var cities = [];\r\n    this.props.citydata.map(ct => {\r\n      cities.push({ label: ct.city, value: ct.city.toLowerCase() });\r\n    });\r\n\r\n  \r\n    }\r\n\r\n    this.ref1 = React.createRef();\r\n\r\n    this.state = {\r\n        username: user.username, name: user.name || '', \r\n        email: user.email || '', \r\n        address1: user.address1 || '', \r\n        address2: user.address2 || '' , \r\n        city: user.city || '', \r\n        state: user.state || '', \r\n        country: user.country || '', \r\n        postcode: user.postcode || '', \r\n        avatar: user.avatar || '', error: '',\r\n        citydata: cities || [],\r\n        countries: countries,\r\n        error: ''\r\n    };\r\n  }\r\n\r\n//};\r\n // componentDidMount = () => {\r\n\r\n    // var mca = [];\r\n    // var countries = [];\r\n    // this.props.citydata.map(c => {\r\n    //   if (mca.indexOf(c.countrycode) === -1) {\r\n    //     mca.push(c.countrycode);\r\n    //     countries.push({ label: c.country, value: c.countrycode });\r\n    //   }\r\n    //   console.log(countries)\r\n    // this.setState({ countries: countries });\r\n    // })\r\n\r\n    // if (this.state.cities) {\r\n    // var cities = [];\r\n    // this.props.citydata.map(ct => {\r\n    //   cities.push({ label: ct.city, value: ct.city.toLowerCase() });\r\n    // });\r\n\r\n    // this.setState({ citydata: cities });\r\n//}\r\n \r\n  \r\n\r\n  _handleChangeCountry = e => {\r\n    this.setState({ cities: \"\" });\r\n    this.setState({ country: e.target.value });\r\n\r\n    const filter = (tag, arr) => arr.filter(ct => ct.countrycode === tag);\r\n    const filtered = filter(e.target.value, this.props.citydata);\r\n\r\n    var cts = [];\r\n    filtered.map(ct => {\r\n      cts.push({ label: ct.city, value: ct.city.toLowerCase() });\r\n    });\r\n\r\n    this.setState({ citydata: cts });\r\n  };\r\n\r\n\r\n  _handleChangeCity = e => {\r\n    this.setState({ city: e.target.value });\r\n  };\r\n\r\n\r\n  onUpdateFiles(fileItems) {\r\n    console.log(fileItems);\r\n    // this.setState({\r\n    //   files: fileItems.map(fileItem => fileItem.file)\r\n    // });\r\n  }\r\n\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ errors: \"\" });\r\n\r\n    var fs = [];\r\n\r\n    //var myJSON = JSON.stringify(this.ref1);\r\n\r\n    //console.log(`ref1: ${myJSON}`)\r\n\r\n    this.ref1\r\n      .getFiles()\r\n      .map(fileItem => fileItem.file)\r\n      .forEach(file => {\r\n        var name = file.name.split('.')[0]\r\n        var fileName = `${name}.jpg`\r\n        //  formData.append(fieldName, file, file.name);\r\n        //  console.log(file.name);\r\n        fs.push({ name: fileName, owner: this.props.user.username });\r\n      });\r\n\r\n    // this.setState(\r\n    //   {\r\n    //     uploads: fs\r\n    //   },\r\n    //   this.handleSave\r\n    // );\r\n    this.handleSave\r\n  };\r\n\r\n  handleSave = async event => {\r\n    event.preventDefault();\r\n    this.setState({ error: \"\" });\r\n\r\n\r\n    try {\r\n        let response = await Queries.submitProfile(this.state)\r\n        if (response.status === 200) {\r\n          Router.push('/profile')\r\n        } else {\r\n          console.log('Edit failed.')\r\n          // https://github.com/developit/unfetch#caveats\r\n          let error = new Error(response.statusText)\r\n          \r\n          error.response = response\r\n          const json = await response.json()\r\n          const resperrors =  json.errors[0].message\r\n     \r\n\r\n          \r\n       \r\n              this.setState({\r\n                error: resperrors || error.message\r\n              })\r\n\r\n          throw error\r\n        }\r\n      } catch (error) {\r\n        console.error(\r\n          'You have an error in your code or there are Network issues.',\r\n          error\r\n        )\r\n  \r\n        const { response } = error\r\n\r\n\r\n    \r\n        //   this.setState({\r\n        //     error:  response ? response.statusText : error.message\r\n        //   })\r\n      }\r\n\r\n\r\n\r\n  \r\n  };\r\n\r\n  render() {\r\n    const user = this.props.user;\r\n\r\n    const post = this.props.post || [];\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n<React.Fragment>\r\n\r\n<form noValidate\r\n   onSubmit={this.handleSave}\r\n  >\r\n<Grid container spacing={3}>\r\n<Grid item xs={12} sm={3}>\r\nPhoto\r\n<div style={{backgroundImage: `url('${user.avatar}')`, backgroundSize: 'cover', backgroundPosition: 'center top', maxHeight: \"490px\", minHeight: \"310px\" }}>\r\n<ProfileFilePond\r\n                  onupdatefiles={this.onUpdateFiles.bind(this) }\r\n                  setRef={ref => (this.ref1 = ref)}\r\n              //    files={this.props.post.files}\r\n                  handleUploadImages={this.handleUploadImages}\r\n                  user={this.props.userdata}\r\n                />\r\n</div>\r\n  </Grid>\r\n  <Grid item xs={12} sm={9}>\r\n  <Grid container spacing={3} >\r\n  <Grid item xs={12} sm={12}>\r\n  <Typography variant=\"h6\" gutterBottom>\r\n  Update Personal Details\r\n</Typography>\r\n</Grid>\r\n  \r\n  <Grid item xs={12} sm={6}>\r\n    <TextField\r\n      required\r\n      id=\"name\"\r\n      name=\"name\"\r\n      label=\"Name\"\r\n      fullWidth\r\n      autoComplete=\"name\"\r\n      value={this.state.name}\r\n      onChange={event =>\r\n        this.setState({ name: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n    <TextField\r\n      required\r\n      id=\"email\"\r\n      name=\"email\"\r\n      label=\"Email Address\"\r\n      fullWidth\r\n      autoComplete=\"email\"\r\n      value={this.state.email}\r\n      onChange={event =>\r\n        this.setState({ email: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n    <TextField\r\n      required\r\n      id=\"address1\"\r\n      name=\"address1\"\r\n      label=\"Address line 1\"\r\n      fullWidth\r\n      autoComplete=\"billing address-line1\"\r\n      value={this.state.address1}\r\n      onChange={event =>\r\n        this.setState({ address1: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n    <TextField\r\n      id=\"address2\"\r\n      name=\"address2\"\r\n      label=\"Address line 2\"\r\n      fullWidth\r\n      autoComplete=\"address2\"\r\n      value={this.state.address2}\r\n      onChange={event =>\r\n        this.setState({ address2: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n                  <SimpleSelect\r\n                    options={this.state.countries}\r\n                    value={this.state.country}\r\n                    placeholder=\"Country\"\r\n                    name=\"country\"\r\n                    onChange={this._handleChangeCountry}\r\n                  />\r\n                </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n                  <SimpleSelect\r\n                    options={this.state.citydata}\r\n                    value={this.state.city}\r\n                    placeholder=\"City\"\r\n                    name=\"city\"\r\n                    onChange={event =>\r\n                        this.setState({ city: event.target.value })\r\n                      }\r\n                  />\r\n                </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n    <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth\r\n      value={this.state.state}\r\n      onChange={event =>\r\n        this.setState({ state: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n    <TextField\r\n      required\r\n      id=\"postcode\"\r\n      name=\"postcode\"\r\n      label=\"Zip / Postal code\"\r\n      fullWidth\r\n      autoComplete=\"postcode\"\r\n      value={this.state.postcode}\r\n      onChange={event =>\r\n        this.setState({ postcode: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n\r\n  </Grid>\r\n  <Grid item xs={12}>\r\n  <Button\r\n      type=\"submit\"\r\n      fullWidth\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={classes.submit}\r\n    >\r\n      Submit\r\n    </Button>\r\n  </Grid>\r\n</Grid>\r\n</Grid>\r\n\r\n{this.state.error  ? \r\n    <p className=\"error\">Error: {this.state.error}</p>\r\n           : '' }\r\n  </form>\r\n</React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ProfileForm);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}