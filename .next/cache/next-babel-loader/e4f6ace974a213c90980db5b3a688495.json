{"ast":null,"code":"import { File } from '../../../../models';\nexport default (async (req, res) => {\n  if (req.method === 'POST') {\n    console.log(req.body.name);\n    const name = req.body.name;\n\n    try {\n      const file = await File.findOne({\n        where: {\n          name: name\n        }\n      });\n      file.destroy();\n      return res.status(200).json({\n        file,\n        msg: 'post deleted successfully'\n      });\n    } catch (err) {\n      return res.status(500).send(err);\n    }\n  } else {\n    res.status(400).json({\n      message: 'Not Authorised'\n    });\n  }\n});","map":{"version":3,"sources":["C:/src/hottofindtest/pages/api/dashboard/file/delete.js"],"names":["File","req","res","method","console","log","body","name","file","findOne","where","destroy","status","json","msg","err","send","message"],"mappings":"AACA,SAASA,IAAT,QAAqB,oBAArB;AAEA,gBAAgB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,CAASC,IAArB;AACA,UAAMA,IAAI,GAAGN,GAAG,CAACK,IAAJ,CAASC,IAAtB;;AAEA,QAAI;AAEF,YAAMC,IAAI,GAAG,MAAMR,IAAI,CAACS,OAAL,CAAa;AAC5BC,QAAAA,KAAK,EAAE;AAAEH,UAAAA,IAAI,EAAEA;AAAR;AADqB,OAAb,CAAnB;AAIEC,MAAAA,IAAI,CAACG,OAAL;AAGF,aAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEL,QAAAA,IAAF;AAAQM,QAAAA,GAAG,EAAE;AAAb,OAArB,CAAP;AAEC,KAXH,CAWI,OAAOC,GAAP,EAAY;AACd,aAAOb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqBD,GAArB,CAAP;AACD;AAEA,GAnBH,MAmBS;AACLb,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEI,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AAGJ,CAzBH","sourcesContent":["\r\nimport { File } from '../../../../models';\r\n\r\nexport default  async (req, res) => {\r\n    if (req.method === 'POST') {\r\n      console.log(req.body.name)\r\n      const name = req.body.name\r\n  \r\n      try {\r\n\r\n        const file = await File.findOne({\r\n            where: { name: name }\r\n          })\r\n\r\n          file.destroy()\r\n  \r\n \r\n        return res.status(200).json({ file, msg: 'post deleted successfully' });\r\n \r\n        } catch (err) {\r\n        return res.status(500).send(err);\r\n      }\r\n\r\n      } else {\r\n        res.status(400).json({ message: 'Not Authorised' })\r\n      }\r\n\r\n\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}