{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport dynamic from \"next/dynamic\";\nimport Router from \"next/router\";\nimport React from \"react\";\nimport { COUNTRYCODE } from \"../../config\";\nimport SimpleSelect from \"./simpleSelect\"; // const UploadComponent = dynamic(() => import(\"./uploadcomponent\"), {\n//   ssr: false\n// });\n\nvar FilePond = dynamic(function () {\n  return import(\"./filePond\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./filePond\")];\n    },\n    modules: [\"./filePond\"]\n  }\n});\n\nvar styles = function styles(theme) {\n  return {\n    \"@global\": {\n      body: {\n        backgroundColor: theme.palette.common.white\n      }\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\",\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n};\n\nvar PostForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostForm, _React$Component);\n\n  function PostForm(props) {\n    var _this;\n\n    _classCallCheck(this, PostForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostForm).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var mc = [];\n      var mainCats = [];\n\n      _this.props.categories.map(function (cat) {\n        if (mc.indexOf(cat.maincategory) === -1) {\n          mc.push(cat.maincategory);\n          mainCats.push({\n            label: cat.maincategory,\n            value: cat.catindex\n          });\n        }\n      });\n\n      _this.setState({\n        maincategories: mainCats\n      });\n\n      if (_this.state.keyindex) {\n        var filter = function filter(tag, arr) {\n          return arr.filter(function (cat) {\n            return cat.catindex === tag;\n          });\n        };\n\n        var filtered = filter(_this.state.catindex, _this.props.categories);\n        var subCats = [];\n        filtered.map(function (cat) {\n          subCats.push({\n            label: cat.subcategory,\n            value: cat.keyindex\n          });\n        });\n\n        _this.setState({\n          subcategories: subCats\n        });\n      }\n\n      var cities = [];\n\n      _this.props.citydata.map(function (ct) {\n        cities.push({\n          label: ct.city,\n          value: ct.city.toLowerCase()\n        });\n      });\n\n      _this.setState({\n        citydata: cities\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeCity\", function (e) {\n      _this.setState({\n        cities: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeCategory\", function (e) {\n      _this.setState({\n        keyindex: \"\"\n      });\n\n      _this.setState({\n        catindex: e.target.value\n      });\n\n      var filter = function filter(tag, arr) {\n        return arr.filter(function (cat) {\n          return cat.catindex === tag;\n        });\n      };\n\n      var filtered = filter(e.target.value, _this.props.categories);\n      var subCats = [];\n      filtered.map(function (cat) {\n        subCats.push({\n          label: cat.subcategory,\n          value: cat.keyindex\n        });\n      });\n\n      _this.setState({\n        subcategories: subCats\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeSubCategory\", function (e) {\n      _this.setState({\n        keyindex: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function _callee(event) {\n      var fs;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                error: \"\"\n              });\n\n              fs = [];\n\n              _this.ref1.getFiles().map(function (fileItem) {\n                return fileItem.file;\n              }).forEach(function (file) {\n                var name = file.name.split(\".\")[0];\n                var fileName = \"\".concat(name, \".jpg\");\n                fs.push({\n                  name: fileName,\n                  owner: _this.props.user.username\n                });\n              });\n\n              _this.setState({\n                uploads: fs\n              }, _this.handleSave);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSave\", function _callee2(event) {\n      var url, response, error, _response;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = \"/api/dashboard/post/edit\";\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: _JSON$stringify(_this.state)\n              }));\n\n            case 4:\n              response = _context2.sent;\n\n              if (!(response.status === 200)) {\n                _context2.next = 9;\n                break;\n              }\n\n              Router.push(\"/dashboard\");\n              _context2.next = 13;\n              break;\n\n            case 9:\n              console.log(\"Edit failed.\"); // https://github.com/developit/unfetch#caveats\n\n              error = new Error(response.statusText);\n              error.response = response;\n              throw error;\n\n            case 13:\n              _context2.next = 20;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error(\"You have an error in your code or there are Network issues.\", _context2.t0);\n              _response = _context2.t0.response;\n\n              _this.setState({\n                error: _response ? _response.statusText : _context2.t0.message\n              });\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 15]]);\n    });\n\n    var user = _this.props.user;\n    var post = _this.props.post || [];\n    _this.ref1 = React.createRef();\n    _this.state = {\n      id: _this.props.post ? _this.props.post.id : undefined,\n      owner: post.owner || user.username,\n      firstname: post.firstname || \"\",\n      lastname: post.lastname || \"\",\n      country: post.country || COUNTRYCODE,\n      age: post.age || \"\",\n      email: post.email || user.email,\n      avatar: post.files || \"\",\n      catindex: post.catindex || \"\",\n      keyindex: post.keyindex || \"\",\n      cities: post.cities || \"\",\n      location: post.location || \"\",\n      title: post.title || \"\",\n      phone: post.phone || \"\",\n      price: post.price || \"\",\n      description: post.description || \"\",\n      website: post.website || \"\",\n      rawcities: _this.props.citydata,\n      citydata: [],\n      countries: [],\n      currencies: [],\n      maincategories: [],\n      subcategories: [],\n      error: \"\",\n      files: post ? _this.props.post.files : [],\n      newfiles: []\n    };\n    return _this;\n  }\n\n  _createClass(PostForm, [{\n    key: \"onUpdateFiles\",\n    value: function onUpdateFiles(fileItems) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = this.props.user;\n      var post = this.props.post || [];\n      var classes = this.props.classes;\n      return __jsx(React.Fragment, null, __jsx(\"form\", {\n        noValidate: true,\n        onSubmit: this.handleSubmit\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 4\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4\n      }, \"Photo\", __jsx(\"div\", {\n        style: {\n          // backgroundImage: `url('${user.avatar}')`,\n          // backgroundSize: \"cover\",\n          // backgroundPosition: \"center top\",\n          // maxHeight: \"490px\",\n          minHeight: \"310px\"\n        }\n      }, __jsx(FilePond, {\n        onupdatefiles: this.onUpdateFiles.bind(this),\n        setRef: function setRef(ref) {\n          return _this2.ref1 = ref;\n        },\n        files: this.props.post.files,\n        handleUploadImages: this.handleUploadImages\n      }))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 3\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        gutterBottom: true\n      }, \"Ad Details\")), __jsx(Grid, {\n        item: true,\n        xs: 12\n      }, __jsx(SimpleSelect, {\n        options: this.state.maincategories,\n        value: this.state.catindex,\n        placeholder: \"Category\",\n        name: \"category\",\n        onChange: this._handleChangeCategory\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12\n      }, __jsx(SimpleSelect, {\n        options: this.state.subcategories,\n        value: this.state.keyindex,\n        placeholder: \"Subcategory\",\n        name: \"subcategory\",\n        onChange: this._handleChangeSubCategory\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12\n      }, __jsx(SimpleSelect, {\n        options: this.state.citydata,\n        value: this.state.cities,\n        placeholder: \"City\",\n        name: \"city\",\n        onChange: this._handleChangeCity\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12\n      }, __jsx(TextField, {\n        required: true,\n        id: \"title\",\n        name: \"title\",\n        label: \"Title\",\n        fullWidth: true,\n        autoComplete: \"title\",\n        value: this.state.title,\n        variant: \"outlined\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            title: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12\n      }, __jsx(TextField, {\n        id: \"price\",\n        name: \"price\",\n        label: \"Price\",\n        fullWidth: true,\n        autoComplete: \"price\",\n        value: this.state.price,\n        variant: \"outlined\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            price: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12\n      }, __jsx(TextField, {\n        id: \"description\",\n        label: \"Description\",\n        name: \"description\",\n        multiline: true,\n        fullWidth: true,\n        rows: \"10\",\n        value: this.state.description,\n        variant: \"outlined\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12\n      }, __jsx(TextField, {\n        id: \"website\",\n        name: \"website\",\n        label: \"Website URL (inc https://)\",\n        fullWidth: true,\n        autoComplete: \"Website\",\n        value: this.state.website,\n        variant: \"outlined\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            website: event.target.value\n          });\n        }\n      })))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 3\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        gutterBottom: true\n      }, \"Contact Details\")), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12\n      }, __jsx(TextField, {\n        required: true,\n        id: \"firstname\",\n        name: \"firstname\",\n        label: \"First Name\",\n        fullWidth: true,\n        autoComplete: \"firstname\",\n        value: this.state.firstname,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            firstname: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12\n      }, __jsx(TextField, {\n        required: true,\n        id: \"lastname\",\n        name: \"lastname\",\n        label: \"Last Name\",\n        fullWidth: true,\n        autoComplete: \"lastname\",\n        value: this.state.lastname,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            lastname: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12\n      }, __jsx(TextField, {\n        required: true,\n        id: \"age\",\n        name: \"age\",\n        label: \"Age\",\n        fullWidth: true,\n        autoComplete: \"age\",\n        value: this.state.age,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            age: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12\n      }, __jsx(TextField, {\n        required: true,\n        id: \"phone\",\n        name: \"phone\",\n        label: \"Phone Number\",\n        fullWidth: true,\n        autoComplete: \"phone\",\n        value: this.state.phone,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            phone: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12\n      }, __jsx(TextField, {\n        required: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email Address\",\n        fullWidth: true,\n        autoComplete: \"email\",\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12\n      }, __jsx(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit\n      }, \"Submit\"))))), this.state.error && __jsx(\"p\", {\n        className: \"error\"\n      }, \"Error: \", this.state.error)));\n    }\n  }]);\n\n  return PostForm;\n}(React.Component);\n\nexport default withStyles(styles)(PostForm);","map":null,"metadata":{},"sourceType":"module"}