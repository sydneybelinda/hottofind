{"ast":null,"code":"import { User } from \"../../../../models\";\nexport default (async (req, res) => {\n  if (req.method === \"POST\") {\n    const data = req.body;\n    console.log(data);\n\n    try {\n      const user = await User.update({\n        avatar: ''\n      }, {\n        where: {\n          username: data.username\n        }\n      });\n      return res.status(200).json({\n        user,\n        msg: \"profile pic updated successfully\"\n      });\n    } catch (err) {\n      return res.status(500).send(err);\n    }\n  } else {\n    res.status(400).json({\n      message: \"Not Authorised\"\n    });\n  }\n});","map":{"version":3,"sources":["C:/src/hottofindtest/pages/api/dashboard/profile/deleteavatar.js"],"names":["User","req","res","method","data","body","console","log","user","update","avatar","where","username","status","json","msg","err","send","message"],"mappings":"AAAA,SAASA,IAAT,QAAqB,oBAArB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAEA,QAAI;AACF,YAAMI,IAAI,GAAG,MAAMR,IAAI,CAACS,MAAL,CACjB;AACEC,QAAAA,MAAM,EAAE;AADV,OADiB,EAIjB;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAER,IAAI,CAACQ;AADV;AADT,OAJiB,CAAnB;AAWA,aAAOV,GAAG,CACPW,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEN,QAAAA,IAAF;AAAQO,QAAAA,GAAG,EAAE;AAAb,OAFD,CAAP;AAGD,KAfD,CAeE,OAAOC,GAAP,EAAY;AACZ,aAAOd,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqBD,GAArB,CAAP;AACD;AACF,GAvBD,MAuBO;AACLd,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEI,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AACF,CA3BD","sourcesContent":["import { User } from \"../../../../models\";\r\n\r\nexport default async (req, res) => {\r\n  if (req.method === \"POST\") {\r\n    const data = req.body;\r\n\r\n    console.log(data)\r\n\r\n    try {\r\n      const user = await User.update(\r\n        {\r\n          avatar: ''\r\n        },\r\n        {\r\n          where: {\r\n            username: data.username\r\n          }\r\n        }\r\n      );\r\n\r\n      return res\r\n        .status(200)\r\n        .json({ user, msg: \"profile pic updated successfully\" });\r\n    } catch (err) {\r\n      return res.status(500).send(err);\r\n    }\r\n  } else {\r\n    res.status(400).json({ message: \"Not Authorised\" });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}