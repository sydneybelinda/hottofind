{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Person from \"@material-ui/icons/Person\";\nimport RemoveRedEye from \"@material-ui/icons/RemoveRedEye\";\nimport Room from \"@material-ui/icons/Room\";\nimport * as React from \"react\";\nimport Img from \"react-image\"; //import ImageExists from 'image-exists';\n\nimport Moment from \"react-moment\"; // import Button from '../components/Button';\n\nfunction Capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nconst styles = theme => ({\n  gi: {\n    paddingTop: \"15px\",\n    paddingBottom: \"15px\"\n  },\n  imageWrap: {\n    width: \"100%\",\n    paddingBottom: \"100%\",\n    position: \"relative\",\n    borderTop: \"1px solid silver\",\n    borderBottom: \"1px solid silver\",\n    overflow: \"hidden\",\n    width: \"30%\",\n    display: \"inline-block\",\n    paddingBottom: \"30%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"100%\",\n      display: \"block\",\n      paddingBottom: \"69%\",\n      borderTop: \"1px solid silver\",\n      borderBottom: \"1px solid silver\"\n    }\n  },\n  cat: {\n    fontSize: \"11px\",\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: \"400\",\n    lineHeight: \"1.43\",\n    letterSpacing: \"0.01071em\",\n    padding: \"16px\",\n    paddingBottom: \"2px\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    paddingTop: \"8px\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\"\n  },\n  date: {\n    paddingLeft: \"16px\",\n    paddingRight: \"16px\",\n    paddingBottom: \"8px\",\n    color: \"rgba(0, 0, 0, 0.54)\",\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: \"400\",\n    fontSize: \"10px\",\n    lineHeight: \"1.43\",\n    letterSpacing: \"0.01071em\",\n    [theme.breakpoints.up(\"sm\")]: {\n      fontSize: \"11px\"\n    }\n  },\n  cardLeft: {\n    flex: \"1 100%\",\n    background: \"#ffffff\",\n    textAlign: \"right\",\n    [theme.breakpoints.up(\"sm\")]: {\n      background: \"#e6e6e6\",\n      textAlign: \"left\",\n      width: \"100%\"\n    }\n  },\n  cardRight: {\n    flex: \"0\",\n    padding: \"16px\",\n    background: \"#efefef\"\n  },\n  cHeader: {\n    display: \"flex\",\n    position: \"absolute\",\n    left: \"30%\",\n    right: \"16px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      position: \"relative\",\n      left: \"auto\",\n      right: \"auto\"\n    }\n  },\n  price: {\n    fontSize: \"12px\"\n  },\n  views: {\n    color: \"black\",\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: \"400\",\n    fontSize: \"11px\",\n    lineHeight: \"1.43\",\n    letterSpacing: \"0.01071em\",\n    position: \"absolute\",\n    right: \"0\",\n    bottom: \"0\",\n    zIndex: \"99\",\n    padding: \"5px\",\n    margin: \"4px\",\n    background: \"#ffffffcc\",\n    borderRadius: \"4px\"\n  },\n  viewIcon: {\n    height: \"11px\",\n    width: \"11px\",\n    color: \"rgba(0, 0, 0, 0.54)\",\n    lineHeight: \"1.43\"\n  },\n  title: {\n    fontSize: \"16px\",\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: \"500\",\n    // lineHeight: \"1.43\",\n    letterSpacing: \"0.01071em\",\n    color: \"black\"\n  },\n  owner: {\n    // paddingLeft: '16px',\n    //  paddingBottom: '16px',\n    color: \"rgba(0, 0, 0, 0.54)\",\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: \"400\",\n    fontSize: \"11px\",\n    lineHeight: \"1.43\",\n    letterSpacing: \"0.01071em\",\n    flex: \"1\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    textAlign: \"left\"\n  },\n  personIcon: {\n    height: \"11px\",\n    width: \"11px\",\n    color: \"rgba(0, 0, 0, 0.54)\",\n    lineHeight: \"1.43\",\n    color: \"rgba(0, 0, 0, 0.54)\",\n    width: \"11px\",\n    height: \"11px\",\n    lineHeight: \"1.43\",\n    position: \"relative\",\n    top: \"2px\",\n    marginRight: \"5px\"\n  },\n  location: {\n    // paddingLeft: '16px',\n    //  paddingBottom: '16px',\n    color: \"rgba(0, 0, 0, 0.54)\",\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: \"400\",\n    fontSize: \"11px\",\n    lineHeight: \"1.43\",\n    letterSpacing: \"0.01071em\",\n    flex: \"1\",\n    textAlign: \"right\"\n  },\n  roomIcon: {\n    height: \"11px\",\n    width: \"11px\",\n    color: \"rgba(0, 0, 0, 0.54)\",\n    lineHeight: \"1.43\",\n    color: \"rgba(0, 0, 0, 0.54)\",\n    width: \"11px\",\n    height: \"11px\",\n    lineHeight: \"1.43\",\n    position: \"relative\",\n    top: \"2px\",\n    marginRight: \"5px\"\n  },\n  cardBottom: {\n    display: \"flex\"\n  },\n  card: {\n    boxShadow: \"0 0px 26px 2px rgba(0, 0, 0, 0.14), 0 6px 12px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)\"\n  },\n  price: {\n    position: \"absolute\",\n    right: \"0\",\n    padding: \"6px\",\n    zIndex: \"99\",\n    color: \"white\",\n    background: \"#3b4f63de\",\n    borderRadius: \"4px\",\n    margin: \"4px\"\n  },\n  content: {\n    width: \"70%\",\n    float: \"right\",\n    marginTop: \"29px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"100%\",\n      float: \"none\",\n      marginTop: \"0\"\n    }\n  }\n});\n\nclass PostPreview extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"_handleViewPost\", id => {\n      window.location.href = `/post/${id}`;\n    });\n\n    _defineProperty(this, \"addDefaultSrc\", ev => {\n      ev.target.src = \"/uploadedimages/noimage.jpg\";\n      console.log(ev.target);\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      post\n    } = this.props;\n    var image;\n\n    if (post.files[0]) {\n      image = \"/uploadedimages/\" + post.files[0].name; // if (!fs.existsSync(image)) {\n      //  image = \"/uploadedimages/noimage.jpg\";\n      // }\n    } else image = \"/uploadedimages/noimage.jpg\"; //const src = URL + image\n\n\n    const dateToFormat = this.props.post.updatedAt;\n    return (//   <GridItem item xs={6} sm={3} className={classes.gi}>\n      __jsx(Card, {\n        className: classes.card\n      }, __jsx(\"div\", {\n        className: classes.cHeader\n      }, __jsx(\"div\", {\n        className: classes.cardLeft\n      }, __jsx(\"div\", {\n        className: classes.cat\n      }, this.props.post.catindex, \" > \", this.props.post.keyindex), __jsx(\"div\", {\n        className: classes.date\n      }, __jsx(Moment, {\n        date: dateToFormat,\n        format: \"D MMMM YY - HH:mm\"\n      })))), __jsx(CardActionArea, {\n        onClick: () => this._handleViewPost(post.id)\n      }, __jsx(\"div\", {\n        className: classes.imageWrap\n      }, this.props.post.price ? __jsx(\"div\", {\n        className: classes.price\n      }, \"$\", this.props.post.price) : \"\", __jsx(\"div\", {\n        className: classes.views\n      }, __jsx(RemoveRedEye, {\n        className: classes.viewIcon\n      }), \" \", this.props.post.views), __jsx(Img, {\n        className: \"img-responsive\",\n        src: [image, \"/uploadedimages/noimage.jpg\"],\n        alt: this.props.post.title,\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          transform: \"translateY(-50%)\",\n          width: \"100%\"\n        }\n      })), __jsx(CardContent, {\n        className: classes.content\n      }, __jsx(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h3\",\n        noWrap: true,\n        className: classes.title\n      }, post.title ? post.title : \"untitled\"), __jsx(\"div\", {\n        className: classes.cardBottom\n      }, __jsx(\"div\", {\n        className: classes.owner\n      }, __jsx(Person, {\n        className: classes.personIcon\n      }), \" \", this.props.post.owner), __jsx(\"div\", {\n        className: classes.location\n      }, __jsx(Room, {\n        className: classes.roomIcon\n      }), \" \", this.props.post.cities ? Capitalize(this.props.post.cities) : \"\")))))\n    );\n  }\n\n}\n\nexport default withStyles(styles)(PostPreview);","map":null,"metadata":{},"sourceType":"module"}