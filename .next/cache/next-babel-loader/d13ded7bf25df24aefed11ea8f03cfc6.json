{"ast":null,"code":"'use strict';\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst Sequelize = require('sequelize');\n\nconst basename = path.basename(__filename);\nconst env = \"production\" || 'development';\n\nconst config = require(__dirname + '/../config/config.json')[env];\n\nconst db = {};\nlet sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\ndb.User = sequelize.import(process.cwd() + '/models/user.js');\ndb.Category = sequelize.import(process.cwd() + '/models/category.js');\ndb.Post = sequelize.import(process.cwd() + '/models/post.js');\ndb.File = sequelize.import(process.cwd() + '/models/file.js');\ndb.City = sequelize.import(process.cwd() + '/models/city.js');\n\n_Object$keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;","map":null,"metadata":{},"sourceType":"script"}