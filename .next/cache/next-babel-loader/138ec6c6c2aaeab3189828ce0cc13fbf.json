{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport RemoveRedEye from \"@material-ui/icons/RemoveRedEye\";\nimport { useRouter } from \"next/router\";\nimport Moment from \"react-moment\";\nimport nl2br from \"react-nl2br\";\nimport ImageGallery from \"../../components/imageGallery\";\nimport Layout from \"../../components/layout\";\nimport PostBreadcrumbs from \"../../components/PostBreadcrumbs\";\nimport { withAuth } from \"../../utils/auth\";\nimport * as Queries from \"../../utils/queries\"; // const nl2br = require(\"react-nl2br\");\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  toolbarTitle: {\n    flex: 1\n  },\n  toolbarSecondary: {\n    justifyContent: \"space-between\",\n    overflowX: \"auto\"\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0\n  },\n  mainFeaturedPost: {\n    position: \"relative\",\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundImage: \"url(/static/images/index_hero.jpg)\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n    boxShadow: \"#64706e 4px 4px 6px\"\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  mainFeaturedPostContent: {\n    position: \"relative\",\n    padding: theme.spacing(3),\n    [theme.breakpoints.up(\"md\")]: {\n      padding: theme.spacing(6),\n      paddingRight: 0\n    }\n  },\n  mainGrid: {\n    marginTop: theme.spacing(3)\n  },\n  card: {\n    display: \"flex\"\n  },\n  cardDetails: {\n    flex: 1\n  },\n  cardMedia: {\n    width: 160\n  },\n  markdown: _objectSpread({}, theme.typography.body2, {\n    padding: theme.spacing(3, 0)\n  }),\n  sidebarAboutBox: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.grey[200]\n  },\n  sidebarSection: {\n    marginTop: theme.spacing(3)\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0)\n  },\n  truncate: {\n    width: \"250px\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\"\n  },\n  mainWrap: {\n    background: \"white\",\n    borderBottomLeftRadius: \"5px\",\n    borderBottomRightRadius: \"5px\",\n    overflow: \"hidden\",\n    padding: \"5px\",\n    borderTop: \"1px solid #e7e7e7\"\n  },\n  innerWrap: {\n    padding: \"15px\"\n  },\n  price: {\n    color: \"#001dff\",\n    fontSize: \"17px\",\n    textAlign: \"right\",\n    fontWeight: \"300\"\n  },\n  location: {\n    textTransform: \"uppercase\",\n    color: \"#a2a2a2\",\n    fontSize: \"16px\",\n    marginTop: \"5px\",\n    textAlign: \"left\"\n  },\n  views: {\n    color: \"#a2a2a2\",\n    fontSize: \"12px\",\n    marginTop: \"5px\",\n    textAlign: \"right\"\n  },\n  description: {\n    marginTop: \"15px\",\n    paddingRight: \"15px\",\n    textAlign: \"left\",\n    fontFamily: 'Lora, \"Times New Roman\", Times, Baskerville, Georgia, serif'\n  },\n  box: {\n    marginTop: \"15px\",\n    border: \"3px solid #a9878673\",\n    padding: \"15px\",\n    borderRadius: \"4px\"\n  },\n  dateupdated: {\n    marginTop: \"10px\"\n  },\n  userbox: {\n    background: \"white\",\n    marginLeft: \"15px\",\n    marginTop: \"15px\",\n    padding: \"15px\"\n  },\n  icon: {\n    width: \"50px\",\n    height: \"50px\",\n    border: \"1px solid\",\n    color: \"green\",\n    borderRadius: \"25px\",\n    padding: \"5px\"\n  },\n  viewicon: {\n    width: \"14px\",\n    height: \"14px\",\n    color: \"green\",\n    borderRadius: \"14px\"\n  },\n  contact: {\n    marginTop: \"30px\"\n  },\n  cicon: {\n    fontSize: \"16px\",\n    marginRight: \"30px\",\n    marginLeft: \"15px\",\n    color: \"#ac8988\"\n  },\n  phone: {\n    fontSize: \"16px\",\n    marginBottom: \"5px\",\n    fontWeight: \"600\",\n    color: \"black\"\n  },\n  owner: {\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    color: \"black\"\n  },\n  mainPost: {\n    width: \"100%\",\n    boxShadow: \"0 0px 26px 2px rgba(0, 0, 0, 0.14), 0 6px 12px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2);\",\n    position: \"relative\"\n  },\n  mainContainer: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: \"30px\",\n      paddingTop: \"10px\"\n    },\n    padding: \"5px\",\n    paddingTop: \"5px\",\n    background: \"#f6f6f6\"\n  },\n  sidebar: {\n    background: \"white\",\n    padding: \"15px\",\n    borderRadius: \"5px\"\n  },\n  gallery: {\n    background: \"white\",\n    //     boxShadow: '0 0px 26px 2px rgba(0, 0, 0, 0.14), 0 6px 12px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2);',\n    // position: 'relative',\n    zIndex: \"10\"\n  }\n}));\n\nfunction Post(props) {\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    post\n  } = props;\n  const createdAt = props.post.createdAt;\n  const updatedAt = props.post.updatedAt;\n\n  if (props.post.files[0]) {\n    var file = \"url(/uploadedimages/\" + props.post.files[0].name + \")\";\n  } else {\n    var file = \"url(/uploadedimages/noimage.jpg)\";\n  }\n\n  const mainImage = {\n    backgroundImage: file,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    WebkitTransition: \"all\",\n    // note the capital 'W' here\n    msTransition: \"all\",\n    // 'ms' is the only lowercase vendor prefix}\n    width: \"100%\",\n    height: \"60vh\"\n  };\n  const category = props.categories.find(e => e.catindex === props.query.catindex); //  }\n  //if(props.query.keyindex){\n\n  const subcat = props.categories.find(e => e.keyindex === props.query.keyindex);\n  return __jsx(Layout, {\n    user: props.user,\n    categories: props.categories\n  }, __jsx(PostBreadcrumbs, {\n    post: props.post,\n    categories: props.categories\n  }), __jsx(\"div\", {\n    className: classes.sections\n  }, __jsx(\"div\", {\n    className: classes.mainContainer\n  }, __jsx(\"div\", {\n    className: classes.mainPost\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.cardGrid\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 8\n  }, __jsx(\"div\", {\n    className: classes.gallery\n  }, __jsx(ImageGallery, {\n    files: props.post.files\n  })), __jsx(\"div\", {\n    className: classes.mainWrap\n  }, __jsx(\"div\", {\n    className: classes.innerWrap\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 10\n  }, __jsx(\"div\", {\n    className: classes.title\n  }, __jsx(\"h2\", null, post.title))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 2\n  }, __jsx(\"div\", {\n    className: classes.price\n  }, __jsx(\"h4\", {\n    className: classes.price\n  }, post.price ? `${post.price} ${post.currency}` : \"\"))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 10\n  }, __jsx(\"div\", {\n    className: classes.location\n  }, post.location, \" - \", post.cities, \", \", post.country)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 2\n  }, __jsx(\"div\", {\n    className: classes.views\n  }, __jsx(RemoveRedEye, {\n    className: classes.viewicon\n  }), \" \", props.post.views)), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 8\n  }, __jsx(\"p\", {\n    className: classes.description\n  }, nl2br(post.description))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(\"div\", {\n    className: classes.box\n  }, __jsx(\"div\", {\n    className: classes.datelisted\n  }, \"Date Listed: \", __jsx(Moment, {\n    date: createdAt\n  })), __jsx(\"div\", {\n    className: classes.dateupdated\n  }, \"Date updated: \", __jsx(Moment, {\n    date: updatedAt\n  })))))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 4\n  }, __jsx(\"div\", {\n    className: classes.sidebar\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12\n  }, __jsx(\"div\", {\n    className: classes.owner\n  }, __jsx(\"h4\", null, post.owner))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12\n  }, __jsx(\"div\", {\n    className: classes.email\n  }, __jsx(\"h4\", null, __jsx(\"a\", {\n    href: `mailto:${post.email}`\n  }, post.email)))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12\n  }, __jsx(\"div\", {\n    className: classes.phone\n  }, __jsx(\"h4\", null, post.phone))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12\n  }, __jsx(\"div\", {\n    className: classes.website\n  }, __jsx(\"h4\", null, __jsx(\"a\", {\n    href: post.website\n  }, post.website))))))))))));\n}\n\nPost.getInitialProps = async ({\n  query,\n  req\n}) => {\n  const id = query.id;\n  let post = await Queries.getPost(id);\n  return {\n    query,\n    post\n  };\n};\n\nexport default withAuth(Post);","map":null,"metadata":{},"sourceType":"module"}