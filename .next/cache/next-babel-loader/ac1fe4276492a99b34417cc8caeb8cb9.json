{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport Footer from \"../../components/dashboard/footer\";\nimport Header from \"../../components/dashboard/header\";\nimport Layout from \"../../components/dashboard/layout\";\nimport UserPosts from \"../../components/dashboard/userPosts\";\nimport { withAuthSync } from \"../../utils/auth\";\nimport * as Queries from \"../../utils/queries\";\nvar drawerWidth = 240;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\"\n    },\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerPaperClose: _defineProperty({\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      width: theme.spacing(7)\n    }, theme.breakpoints.up(\"sm\"), {\n      width: theme.spacing(9)\n    }),\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      minHeight: \"100vh\",\n      overflow: \"auto\"\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\"\n    },\n    fixedHeight: {\n      height: 240\n    }\n  };\n});\n\nvar Dashboard = function Dashboard(props) {\n  var meta = [];\n  meta.title = \"HotToFind - \".concat(props.user.username, \" Dashboard\");\n  meta.description = \"Free Local classified ad postings.  Buy, Sell, Trade in your city, instantly online.  Register for free\";\n  var classes = useStyles();\n  var fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return __jsx(Layout, {\n    user: props.user,\n    categories: props.cat,\n    meta: meta\n  }, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(CssBaseline, null), __jsx(Header, null), __jsx(\"main\", {\n    className: classes.content\n  }, __jsx(\"div\", {\n    className: classes.appBarSpacer\n  }), __jsx(Container, {\n    maxWidth: \"lg\",\n    className: classes.container\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Paper, {\n    className: classes.paper\n  }, __jsx(UserPosts, {\n    posts: props.posts\n  }))))), __jsx(Footer, null))));\n};\n\nDashboard.getInitialProps = function _callee(ctx) {\n  var user, posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Queries.checkUserLogin(ctx));\n\n        case 2:\n          user = _context.sent;\n\n          if (!user) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(Queries.getUserPosts(user.username));\n\n        case 6:\n          posts = _context.sent;\n          return _context.abrupt(\"return\", {\n            user: user,\n            posts: posts\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withAuthSync(Dashboard);","map":null,"metadata":{},"sourceType":"module"}