{"ast":null,"code":"var __jsx = React.createElement;\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport fetch from \"isomorphic-unfetch\";\nimport nextCookie from \"next-cookies\";\nimport Router from \"next/router\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\nimport StatTable from \"../components/statTable\";\nimport { withAuthSync } from \"../utils/auth\";\nimport getHost from \"../utils/get-host\";\nimport { URL } from '../config';\nconst meta = [];\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  toolbarTitle: {\n    flex: 1\n  },\n  toolbarSecondary: {\n    justifyContent: \"space-between\",\n    overflowX: \"auto\"\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0\n  },\n  sitename: {\n    fontSize: \"46px\",\n    lineHeight: \"40px\",\n    marginBottom: \"0\",\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: \"30px\",\n      lineHeight: \"35px\"\n    }\n  },\n  mainFeaturedPost: {\n    position: \"relative\",\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: 0,\n    backgroundImage: \"url(https://source.unsplash.com/user/erondu)\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  mainFeaturedPostContent: {\n    position: \"relative\",\n    padding: theme.spacing(3),\n    [theme.breakpoints.up(\"md\")]: {\n      padding: theme.spacing(6),\n      paddingRight: 0\n    }\n  },\n  mainGrid: {\n    marginTop: theme.spacing(3)\n  },\n  page: {\n    padding: \"20px 0\"\n  },\n  mainPic: {\n    height: \"50vh\",\n    textAlign: \"center\",\n    padding: \"20px\",\n    \"& img\": {\n      height: \"100%\",\n      width: \"auto\",\n      borderRadius: \"0.5rem\"\n    }\n  },\n  stats: {\n    paddingBottom: \"20px\",\n    maxWidth: \"800px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  }\n}));\n\nconst Profile = props => {\n  const {\n    username,\n    email,\n    name,\n    login,\n    bio,\n    avatar\n  } = props.data;\n  const classes = useStyles();\n  let avatarUrl = '';\n  console.log(avatar);\n\n  if (avatar) {\n    avatarUrl = `${URL}/uploadedimages/profile/${avatar}`;\n  } else {\n    avatarUrl = `${URL}/uploadedimages/noimage.jpg`;\n  }\n\n  console.log(avatarUrl);\n  return __jsx(Layout, {\n    user: props.user,\n    categories: props.categories\n  }, __jsx(Paper, {\n    className: classes.mainFeaturedPost\n  }, __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(\"img\", {\n    style: {\n      display: \"none\"\n    },\n    src: \"https://source.unsplash.com/user/erondu\",\n    alt: \"background\"\n  }), __jsx(\"div\", {\n    className: classes.overlay\n  }), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 6\n  }, __jsx(\"div\", {\n    className: classes.mainFeaturedPostContent\n  }, __jsx(\"h1\", {\n    className: classes.sitename\n  }, username), __jsx(\"p\", {\n    className: classes.subtext\n  }, \" \")))))), __jsx(Container, {\n    maxWidth: \"xl\",\n    className: classes.cont\n  }, __jsx(\"div\", {\n    className: classes.page\n  }, __jsx(Paper, {\n    className: classes.table,\n    variant: \"outlined\"\n  }, __jsx(\"div\", {\n    className: classes.mainPic\n  }, __jsx(\"img\", {\n    src: avatarUrl,\n    alt: name\n  })), __jsx(\"div\", {\n    className: classes.stats\n  }, __jsx(StatTable, {\n    data: props.data\n  })))))) // <Layout user={props.user} categories={props.categories} meta={meta}>\n  //    <img src={avatar} alt={name} />\n  //   <h1>{name}</h1>\n  //   <p className='lead'>{login}</p>\n  //   <p>{bio}</p>\n  //   <style jsx>{`\n  //     img {\n  //       max-width: 200px;\n  //       border-radius: 0.5rem;\n  //     }\n  //     h1 {\n  //       margin-bottom: 0;\n  //     }\n  //     .lead {\n  //       margin-top: 0;\n  //       font-size: 1.5rem;\n  //       font-weight: 300;\n  //       color: #666;\n  //     }\n  //     p {\n  //       color: #6a737d;\n  //     }\n  //   `}</style>\n  // </Layout>\n  ;\n};\n\nProfile.getInitialProps = async ctx => {\n  const {\n    token\n  } = nextCookie(ctx);\n  const apiUrl = getHost(ctx.req) + \"/api/profile\";\n\n  const redirectOnError = () => false ? Router.push(\"/login\") : ctx.res.writeHead(302, {\n    Location: \"/login\"\n  }).end();\n\n  try {\n    const response = await fetch(apiUrl, {\n      credentials: \"include\",\n      headers: {\n        // Authorization: JSON.stringify({ token })\n        Authorization: token\n      }\n    });\n\n    if (response.ok) {\n      const js = await response.json();\n      console.log(\"js\", js);\n      return js;\n    } else {\n      // https://github.com/developit/unfetch#caveats\n      return await redirectOnError();\n    }\n  } catch (error) {\n    // Implementation or Network error\n    return redirectOnError();\n  }\n};\n\nexport default withAuthSync(Profile);","map":null,"metadata":{},"sourceType":"module"}