{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\src\\\\hottofindtest\\\\components\\\\dashboard\\\\userPosts.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable no-script-url */\nimport React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from '@material-ui/core/Button';\nimport Title from \"./title\";\nimport Moment from \"react-moment\";\nimport Link from \"next/link\";\nimport config from \"../../config\";\nimport * as Queries from \"../../utils/queries\"; // Generate Order Data\n\nfunction createData(id, date, title, status, action) {\n  return {\n    id,\n    date,\n    title,\n    status,\n    action\n  };\n}\n\nconst styles = theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  new: {\n    textAlign: \"right\",\n    padding: \"15px\",\n    paddingTop: \"0\"\n  }\n});\n\nclass UserPosts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"checkStatus\", async val => {\n      let st = '';\n\n      if (val == \"Active\") {\n        st = __jsx(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Active\");\n      } else {\n        st = __jsx(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Disabled\");\n      } // this.setState({ status: st });\n\n\n      return st;\n    });\n\n    this.state = {\n      status: \"\",\n      error: \"\"\n    };\n  }\n\n  render() {\n    const rows = [];\n    const {\n      classes\n    } = this.props;\n    {\n      this.props.posts ? this.props.posts.map(post => {\n        const dateToFormat = post.updatedAt;\n        const title = post.title; // const status = this.checkStatus(post.status)\n\n        const status = '';\n\n        const action = __jsx(React.Fragment, null, __jsx(\"div\", {\n          key: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: `/dashboard/editpost/${post.id}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"edit\")), \" \", ` - `, __jsx(\"a\", {\n          href: \"#\",\n          onClick: () => Queries.deletePost(post.id),\n          value: post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"delete\")));\n\n        const date = __jsx(Moment, {\n          date: dateToFormat,\n          format: \"D/MM/YY - HH:mm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        });\n\n        rows.push(createData(post.id, date, title, status, action));\n      }) : \"\";\n    }\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Posts\"), __jsx(\"div\", {\n      className: classes.new,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: `/dashboard/newpost`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"new post\"))), __jsx(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Last Updated\"), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Title\"), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Status\"), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Action\"))), __jsx(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, rows.map(row => __jsx(TableRow, {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, row.date), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, row.title), __jsx(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, row.status), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, row.action))))));\n  }\n\n}\n\nexport default withStyles(styles)(UserPosts);","map":{"version":3,"sources":["C:/src/hottofindtest/components/dashboard/userPosts.js"],"names":["React","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Button","Title","Moment","Link","config","Queries","createData","id","date","title","status","action","styles","theme","seeMore","marginTop","spacing","new","textAlign","padding","paddingTop","UserPosts","Component","constructor","props","val","st","state","error","render","rows","classes","posts","map","post","dateToFormat","updatedAt","deletePost","push","row"],"mappings":"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","sourcesContent":["/* eslint-disable no-script-url */\r\nimport React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Title from \"./title\";\r\nimport Moment from \"react-moment\";\r\nimport Link from \"next/link\";\r\nimport config from \"../../config\";\r\nimport * as Queries from \"../../utils/queries\";\r\n\r\n// Generate Order Data\r\nfunction createData(id, date, title, status, action) {\r\n  return { id, date, title, status, action };\r\n}\r\n\r\nconst styles = theme => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  new: {\r\n    textAlign: \"right\",\r\n    padding: \"15px\",\r\n    paddingTop: \"0\"\r\n  }\r\n});\r\n\r\nclass UserPosts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      status: \"\",\r\n      error: \"\"\r\n    };\r\n  }\r\n\r\n  checkStatus = async val => {\r\n\r\n    let st = ''\r\n\r\n    if (val == \"Active\") {\r\n      st=(<Button variant=\"contained\" color=\"primary\">\r\n        Active\r\n      </Button>)\r\n    } else {\r\n      st=(<Button variant=\"contained\" color=\"primary\">\r\n      Disabled\r\n    </Button>)\r\n    }\r\n\r\n    // this.setState({ status: st });\r\n\r\n    return st\r\n\r\n  };\r\n\r\n  render() {\r\n    const rows = [];\r\n    const { classes } = this.props;\r\n\r\n    {\r\n      this.props.posts\r\n        ? this.props.posts.map(post => {\r\n            const dateToFormat = post.updatedAt;\r\n            const title = post.title;\r\n            // const status = this.checkStatus(post.status)\r\n\r\n            const status = ''\r\n            const action = (\r\n              <>\r\n                <div key={post.id}>\r\n                  <Link href={`/dashboard/editpost/${post.id}`}>\r\n                    <a>edit</a>\r\n                  </Link>{\" \"}\r\n                  {` - `}\r\n                  {/* <a href=\"#\" onClick={() => del(post.id)} value={post.id}> */}\r\n                  <a\r\n                    href=\"#\"\r\n                    onClick={() => Queries.deletePost(post.id)}\r\n                    value={post.id}\r\n                  >\r\n                    delete\r\n                  </a>\r\n                </div>\r\n              </>\r\n            );\r\n\r\n            const date = (\r\n              <Moment date={dateToFormat} format=\"D/MM/YY - HH:mm\" />\r\n            );\r\n\r\n            rows.push(createData(post.id, date, title, status, action));\r\n          })\r\n        : \"\";\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Title>Posts</Title>\r\n        <div className={classes.new}>\r\n          <Link href={`/dashboard/newpost`}>\r\n            <a>new post</a>\r\n          </Link>\r\n        </div>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Last Updated</TableCell>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell align=\"right\">Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.date}</TableCell>\r\n                <TableCell>{row.title}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                <TableCell align=\"right\">{row.action}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(UserPosts);\r\n"]},"metadata":{},"sourceType":"module"}