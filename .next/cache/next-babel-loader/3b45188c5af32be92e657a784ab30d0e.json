{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\src\\\\hottofindtest\\\\components\\\\dropdown.js\";\nvar __jsx = React.createElement;\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"next/link\";\nimport React from \"react\";\nvar useStyles = makeStyles(function (theme) {\n  var _lnk;\n\n  return {\n    root: {\n      display: \"inline-block\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      cursor: \"pointer\"\n    },\n    paper: {\n      marginRight: theme.spacing(2)\n    },\n    mItem: {\n      lineHeight: \"10px\"\n    },\n    lnk: (_lnk = {\n      fontFamily: \"'Montserrat', sans-serif\",\n      textDecoration: \"none\",\n      textTransform: \"uppercase\",\n      padding: \"0 10px\",\n      fontSize: \"12px\",\n      fontWeight: \"600\",\n      display: \"block\",\n      lineHeight: \"30px\",\n      height: \"30px\",\n      letterSpacing: \".08em\",\n      color: \"white\",\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\"\n    }, _defineProperty(_lnk, theme.breakpoints.down(\"md\"), {\n      fontSize: \"7px\"\n    }), _defineProperty(_lnk, \"textOverflow\", \"ellipsis\"), _defineProperty(_lnk, \"&:hover\", {\n      color: \"#009b9b\"\n    }), _lnk),\n    lnkb: {\n      fontFamily: \"'Montserrat', sans-serif\",\n      textDecoration: \"none\",\n      padding: \"0 10px\",\n      fontSize: \"12px\",\n      fontWeight: \"600\",\n      display: \"block\",\n      lineHeight: \"30px\",\n      height: \"30px\",\n      letterSpacing: \".12em\",\n      color: \"black\",\n      \"&:hover\": {\n        color: \"#009b9b\"\n      }\n    },\n    itm: {\n      paddingTop: \"0\",\n      paddingBottom: \"0\"\n    }\n  };\n});\nexport default function MenuListComposition(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var anchorRef = React.useRef(null);\n\n  var handleToggle = function handleToggle() {\n    setOpen(function (prevOpen) {\n      return !prevOpen;\n    });\n  };\n\n  var handleClose = function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  var prevOpen = React.useRef(open);\n  React.useEffect(function () {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.mItem,\n    onMouseEnter: handleToggle,\n    onMouseLeave: handleToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: classes.lnk,\n    ref: anchorRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, props.name), __jsx(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, function (_ref) {\n    var TransitionProps = _ref.TransitionProps,\n        placement = _ref.placement;\n    return __jsx(Grow, _extends({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), __jsx(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, __jsx(ClickAwayListener, {\n      onClickAway: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(MenuList, {\n      autoFocusItem: open,\n      id: \"menu-list-grow\",\n      onKeyDown: handleListKeyDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, __jsx(MenuItem, {\n      onClick: handleClose,\n      className: classes.itm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/posts/[catindex]\",\n      as: \"/posts/\".concat(props.url),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: classes.lnkb,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"ALL \", props.name.toUpperCase()))), props.categories ? props.categories.map(function (prop, key) {\n      if (prop.catindex == props.url) {\n        return __jsx(MenuItem, {\n          onClick: handleClose,\n          key: prop.catindex + \"-\" + prop.keyindex,\n          className: classes.itm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: \"/posts/[catindex]/[keyindex]\",\n          as: \"/posts/\".concat(props.url, \"/\").concat(prop.keyindex),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          className: classes.lnkb,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, prop.subcategory)));\n      }\n    }) : \"\"))));\n  })));\n}","map":{"version":3,"sources":["C:/src/hottofindtest/components/dropdown.js"],"names":["ClickAwayListener","Grow","MenuItem","MenuList","Paper","Popper","makeStyles","Link","React","useStyles","theme","root","display","marginLeft","marginRight","cursor","paper","spacing","mItem","lineHeight","lnk","fontFamily","textDecoration","textTransform","padding","fontSize","fontWeight","height","letterSpacing","color","overflow","whiteSpace","breakpoints","down","lnkb","itm","paddingTop","paddingBottom","MenuListComposition","props","classes","useState","open","setOpen","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","useEffect","focus","name","undefined","TransitionProps","placement","transformOrigin","url","toUpperCase","categories","map","prop","catindex","keyindex","subcategory"],"mappings":"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","sourcesContent":["import ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Link from \"next/link\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"inline-block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    cursor: \"pointer\"\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  mItem: {\r\n    lineHeight: \"10px\"\r\n  },\r\n  lnk: {\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    padding: \"0 10px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"600\",\r\n    display: \"block\",\r\n    lineHeight: \"30px\",\r\n    height: \"30px\",\r\n    letterSpacing: \".08em\",\r\n    color: \"white\",\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"7px\"\r\n    },\r\n    textOverflow: \"ellipsis\",\r\n    \"&:hover\": {\r\n      color: \"#009b9b\"\r\n    }\r\n  },\r\n  lnkb: {\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    textDecoration: \"none\",\r\n    padding: \"0 10px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"600\",\r\n    display: \"block\",\r\n    lineHeight: \"30px\",\r\n    height: \"30px\",\r\n    letterSpacing: \".12em\",\r\n    color: \"black\",\r\n    \"&:hover\": {\r\n      color: \"#009b9b\"\r\n    }\r\n  },\r\n  itm: {\r\n    paddingTop: \"0\",\r\n    paddingBottom: \"0\"\r\n  }\r\n}));\r\n\r\nexport default function MenuListComposition(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen(prevOpen => !prevOpen);\r\n  };\r\n\r\n  const handleClose = event => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className={classes.mItem}\r\n        onMouseEnter={handleToggle}\r\n        onMouseLeave={handleToggle}\r\n      >\r\n        {/* <Button\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        > */}\r\n        <a className={classes.lnk} ref={anchorRef}>\r\n          {props.name}\r\n        </a>\r\n        {/* </Button> */}\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList\r\n                    autoFocusItem={open}\r\n                    id=\"menu-list-grow\"\r\n                    onKeyDown={handleListKeyDown}\r\n                  >\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.itm}\r\n                    >\r\n                      <Link\r\n                        href={`/posts/[catindex]`}\r\n                        as={`/posts/${props.url}`}\r\n                      >\r\n                        <a className={classes.lnkb}>ALL {props.name.toUpperCase()}</a>\r\n                      </Link>\r\n                    </MenuItem>\r\n                    {props.categories\r\n                      ? props.categories.map((prop, key) => {\r\n                          if (prop.catindex == props.url) {\r\n                            return (\r\n                              <MenuItem\r\n                                onClick={handleClose}\r\n                                key={prop.catindex + \"-\" + prop.keyindex}\r\n                                className={classes.itm}\r\n                              >\r\n                                <Link\r\n                                  href={`/posts/[catindex]/[keyindex]`}\r\n                                  as={`/posts/${props.url}/${prop.keyindex}`}\r\n                                >\r\n                                  <a className={classes.lnkb}>\r\n                                    {prop.subcategory}\r\n                                  </a>\r\n                                </Link>\r\n                              </MenuItem>\r\n                            );\r\n                          }\r\n                        })\r\n                      : \"\"}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}