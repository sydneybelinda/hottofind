{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar __jsx = React.createElement;\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport React, { useState } from \"react\";\nimport { login } from \"../utils/auth\";\n\nfunction Copyright() {\n  return __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\"\n  }, \"Copyright Â© \", __jsx(Link, {\n    color: \"inherit\",\n    href: \"https://material-ui.com/\"\n  }, \"Your Website\"), \" \", new Date().getFullYear(), \".\");\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    \"@global\": {\n      body: {\n        backgroundColor: theme.palette.common.white\n      }\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\",\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(3)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n});\nexport default function SignUp() {\n  var classes = useStyles();\n\n  var _useState = useState({\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  }),\n      userData = _useState[0],\n      setUserData = _useState[1];\n\n  function handleSubmit(event) {\n    var name, email, username, password, url, response, _ref, token, error, _response;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            setUserData(_Object$assign({}, userData, {\n              error: \"\"\n            }));\n            name = userData.name;\n            email = userData.email;\n            username = userData.username;\n            password = userData.password;\n            url = \"/api/auth/signup\";\n            _context.prev = 7;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: _JSON$stringify({\n                userData: userData\n              })\n            }));\n\n          case 10:\n            response = _context.sent;\n\n            if (!(response.status === 200)) {\n              _context.next = 20;\n              break;\n            }\n\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 14:\n            _ref = _context.sent;\n            token = _ref.token;\n            _context.next = 18;\n            return _regeneratorRuntime.awrap(login({\n              token: token\n            }));\n\n          case 18:\n            _context.next = 24;\n            break;\n\n          case 20:\n            console.log(\"Login failed.\"); // https://github.com/developit/unfetch#caveats\n\n            error = new Error(response.statusText);\n            error.response = response;\n            throw error;\n\n          case 24:\n            _context.next = 31;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t0 = _context[\"catch\"](7);\n            console.error(\"You have an error in your code or there are Network issues.\", _context.t0);\n            _response = _context.t0.response;\n            setUserData(_Object$assign({}, userData, {\n              error: _response ? _response.statusText : _context.t0.message\n            }));\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[7, 26]]);\n  }\n\n  return __jsx(Container, {\n    component: \"main\",\n    maxWidth: \"xs\"\n  }, __jsx(CssBaseline, null), __jsx(\"div\", {\n    className: classes.paper\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\"\n  }, \"Sign up\"), __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    noValidate: true\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12\n  }, __jsx(TextField, {\n    autoComplete: \"name\",\n    name: \"name\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"name\",\n    label: \"Name\",\n    autoFocus: true,\n    onChange: function onChange(event) {\n      return setUserData(_Object$assign({}, userData, {\n        name: event.target.value\n      }));\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: \"Username\",\n    name: \"username\",\n    autoComplete: \"username\",\n    onChange: function onChange(event) {\n      return setUserData(_Object$assign({}, userData, {\n        username: event.target.value\n      }));\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    onChange: function onChange(event) {\n      return setUserData(_Object$assign({}, userData, {\n        email: event.target.value\n      }));\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(TextField, {\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: function onChange(event) {\n      return setUserData(_Object$assign({}, userData, {\n        password: event.target.value\n      }));\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      value: \"allowExtraEmails\",\n      color: \"primary\"\n    }),\n    label: \"I want to receive inspiration, marketing promotions and updates via email.\"\n  }))), userData.error && __jsx(\"p\", {\n    className: \"error\"\n  }, \"Error: \", userData.error), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit\n  }, \"Sign Up\"), __jsx(Grid, {\n    container: true,\n    justify: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(Link, {\n    href: \"/login\",\n    variant: \"body2\"\n  }, \"Already have an account? Sign in\"))))), __jsx(Box, {\n    mt: 5\n  }, __jsx(Copyright, null)));\n}","map":null,"metadata":{},"sourceType":"module"}