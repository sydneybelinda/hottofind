{"ast":null,"code":"import { City } from '../../../../models';\nexport default (async (req, res) => {\n  const {\n    query: {\n      countrycode\n    }\n  } = req;\n  let where = {\n    countrycode: countrycode\n  };\n\n  try {\n    const cities = await City.findAll({\n      where: where,\n      order: [['city', 'ASC']]\n    });\n\n    if (!cities) {\n      return res.status(404).send({\n        message: 'No cities found'\n      });\n    }\n\n    return res.status(200).send(cities);\n  } catch (err) {\n    console.log(err);\n    return res.status(500).send(err);\n  }\n});","map":{"version":3,"sources":["C:/src/hottofindtest/pages/api/city/get/[countrycode].js"],"names":["City","req","res","query","countrycode","where","cities","findAll","order","status","send","message","err","console","log"],"mappings":"AAAA,SAASA,IAAT,QAAqB,oBAArB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADH,MAEFH,GAFJ;AAIA,MAAII,KAAK,GAAG;AACVD,IAAAA,WAAW,EAAEA;AADH,GAAZ;;AAKA,MAAI;AACF,UAAME,MAAM,GAAG,MAAMN,IAAI,CAACO,OAAL,CAAa;AAC9BF,MAAAA,KAAK,EAAEA,KADuB;AAE9BG,MAAAA,KAAK,EAAE,CAAC,CAAC,MAAD,EAAS,KAAT,CAAD;AAFuB,KAAb,CAArB;;AAMA,QAAI,CAACF,MAAL,EAAa;AACX,aAAOJ,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,QAAAA,OAAO,EAAE;AADiB,OAArB,CAAP;AAGD;;AAED,WAAOT,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,MAArB,CAAP;AAED,GAfD,CAeE,OAAOM,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACF,WAAOV,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,GAArB,CAAP;AACD;AACF,CA7BD","sourcesContent":["import { City } from '../../../../models';\r\n\r\nexport default async (req, res) => {\r\n  const {\r\n    query: { countrycode },\r\n  } = req\r\n\r\n  let where = {\r\n    countrycode: countrycode,\r\n  }\r\n\r\n\r\n  try {\r\n    const cities = await City.findAll({\r\n        where: where,\r\n        order: [['city', 'ASC']]\r\n    });\r\n\r\n\r\n    if (!cities) {\r\n      return res.status(404).send({\r\n        message: 'No cities found',\r\n      });\r\n    }\r\n\r\n    return res.status(200).send(cities);\r\n\r\n  } catch (err) {\r\n      console.log(err)\r\n    return res.status(500).send(err);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}