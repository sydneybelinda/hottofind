{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\src\\\\hottofindtest\\\\components\\\\dashboard\\\\userPosts.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable no-script-url */\nimport React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Button from '@material-ui/core/Button';\nimport Title from \"./title\";\nimport Moment from \"react-moment\";\nimport Link from \"next/link\";\nimport config from \"../../config\";\nimport * as Queries from \"../../utils/queries\"; // Generate Order Data\n\nfunction createData(id, date, title, status, action) {\n  return {\n    id: id,\n    date: date,\n    title: title,\n    status: status,\n    action: action\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    seeMore: {\n      marginTop: theme.spacing(3)\n    },\n    \"new\": {\n      textAlign: \"right\",\n      padding: \"15px\",\n      paddingTop: \"0\"\n    }\n  };\n};\n\nvar UserPosts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserPosts, _React$Component);\n\n  function UserPosts(props) {\n    var _this;\n\n    _classCallCheck(this, UserPosts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserPosts).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkStatus\", function _callee(val) {\n      var st;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              st = '';\n\n              if (val == \"Active\") {\n                st = __jsx(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 47\n                  },\n                  __self: this\n                }, \"Active\");\n              } else {\n                st = __jsx(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 51\n                  },\n                  __self: this\n                }, \"Disabled\");\n              } // this.setState({ status: st });\n\n\n              return _context.abrupt(\"return\", st);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    });\n\n    _this.state = {\n      status: \"\",\n      error: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(UserPosts, [{\n    key: \"render\",\n    value: function render() {\n      var rows = [];\n      var classes = this.props.classes;\n      {\n        this.props.posts ? this.props.posts.map(function (post) {\n          var dateToFormat = post.updatedAt;\n          var title = post.title; // const status = this.checkStatus(post.status)\n\n          var status = '';\n\n          var action = __jsx(React.Fragment, null, __jsx(\"div\", {\n            key: post.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, __jsx(Link, {\n            href: \"/dashboard/editpost/\".concat(post.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, \"edit\")), \" \", \" - \", __jsx(\"a\", {\n            href: \"#\",\n            onClick: function onClick() {\n              return Queries.deletePost(post.id);\n            },\n            value: post.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"delete\")));\n\n          var date = __jsx(Moment, {\n            date: dateToFormat,\n            format: \"D/MM/YY - HH:mm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          });\n\n          rows.push(createData(post.id, date, title, status, action));\n        }) : \"\";\n      }\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, __jsx(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Posts\"), __jsx(\"div\", {\n        className: classes[\"new\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/dashboard/newpost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"new post\"))), __jsx(Table, {\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, __jsx(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __jsx(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Last Updated\"), __jsx(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Title\"), __jsx(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Status\"), __jsx(TableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Action\"))), __jsx(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, rows.map(function (row) {\n        return __jsx(TableRow, {\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, row.date), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, row.title), __jsx(TableCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, row.status), __jsx(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, row.action));\n      }))));\n    }\n  }]);\n\n  return UserPosts;\n}(React.Component);\n\nexport default withStyles(styles)(UserPosts);","map":{"version":3,"sources":["C:/src/hottofindtest/components/dashboard/userPosts.js"],"names":["React","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Button","Title","Moment","Link","config","Queries","createData","id","date","title","status","action","styles","theme","seeMore","marginTop","spacing","textAlign","padding","paddingTop","UserPosts","props","val","st","state","error","rows","classes","posts","map","post","dateToFormat","updatedAt","deletePost","push","row","Component"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB,C,CAEA;;AACA,SAASC,UAAT,CAAoBC,EAApB,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqD;AACnD,SAAO;AAAEJ,IAAAA,EAAE,EAAFA,EAAF;AAAMC,IAAAA,IAAI,EAAJA,IAAN;AAAYC,IAAAA,KAAK,EAALA,KAAZ;AAAmBC,IAAAA,MAAM,EAANA,MAAnB;AAA2BC,IAAAA,MAAM,EAANA;AAA3B,GAAP;AACD;;AAED,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADJ,KADc;AAIvB,WAAK;AACHC,MAAAA,SAAS,EAAE,OADR;AAEHC,MAAAA,OAAO,EAAE,MAFN;AAGHC,MAAAA,UAAU,EAAE;AAHT;AAJkB,GAAL;AAAA,CAApB;;IAWMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,kEASL,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,cAAAA,EAFQ,GAEH,EAFG;;AAIZ,kBAAID,GAAG,IAAI,QAAX,EAAqB;AACnBC,gBAAAA,EAAE,GAAE,MAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,WAAhB;AAA4B,kBAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAJ;AAGD,eAJD,MAIO;AACLA,gBAAAA,EAAE,GAAE,MAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,WAAhB;AAA4B,kBAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAJ;AAGD,eAZW,CAcZ;;;AAdY,+CAgBLA,EAhBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATK;;AAGjB,UAAKC,KAAL,GAAa;AACXd,MAAAA,MAAM,EAAE,EADG;AAEXe,MAAAA,KAAK,EAAE;AAFI,KAAb;AAHiB;AAOlB;;;;6BAsBQ;AACP,UAAMC,IAAI,GAAG,EAAb;AADO,UAECC,OAFD,GAEa,KAAKN,KAFlB,CAECM,OAFD;AAIP;AACE,aAAKN,KAAL,CAAWO,KAAX,GACI,KAAKP,KAAL,CAAWO,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,IAAI,EAAI;AAC3B,cAAMC,YAAY,GAAGD,IAAI,CAACE,SAA1B;AACA,cAAMvB,KAAK,GAAGqB,IAAI,CAACrB,KAAnB,CAF2B,CAG3B;;AAEA,cAAMC,MAAM,GAAG,EAAf;;AACA,cAAMC,MAAM,GACV,4BACE;AAAK,YAAA,GAAG,EAAEmB,IAAI,CAACvB,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,MAAC,IAAD;AAAM,YAAA,IAAI,gCAAyBuB,IAAI,CAACvB,EAA9B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAGU,GAHV,SAME;AACE,YAAA,IAAI,EAAC,GADP;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAMF,OAAO,CAAC4B,UAAR,CAAmBH,IAAI,CAACvB,EAAxB,CAAN;AAAA,aAFX;AAGE,YAAA,KAAK,EAAEuB,IAAI,CAACvB,EAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CADF,CADF;;AAmBA,cAAMC,IAAI,GACR,MAAC,MAAD;AAAQ,YAAA,IAAI,EAAEuB,YAAd;AAA4B,YAAA,MAAM,EAAC,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAIAL,UAAAA,IAAI,CAACQ,IAAL,CAAU5B,UAAU,CAACwB,IAAI,CAACvB,EAAN,EAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,MAAvB,EAA+BC,MAA/B,CAApB;AACD,SA9BD,CADJ,GAgCI,EAhCJ;AAiCD;AAED,aACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,QAAA,SAAS,EAAEgB,OAAO,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,IAAI,sBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CAFF,EAOE,MAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE,MAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CADF,CADF,EASE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACG,GAAL,CAAS,UAAAM,GAAG;AAAA,eACX,MAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,GAAG,CAAC5B,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAY4B,GAAG,CAAC3B,IAAhB,CADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAY2B,GAAG,CAAC1B,KAAhB,CAFF,EAGE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAY0B,GAAG,CAACzB,MAAhB,CAHF,EAIE,MAAC,SAAD;AAAW,UAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0ByB,GAAG,CAACxB,MAA9B,CAJF,CADW;AAAA,OAAZ,CADH,CATF,CAPF,CADF;AA8BD;;;;EApGqBlB,KAAK,CAAC2C,S;;AAsG9B,eAAe1C,UAAU,CAACkB,MAAD,CAAV,CAAmBQ,SAAnB,CAAf","sourcesContent":["/* eslint-disable no-script-url */\r\nimport React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Title from \"./title\";\r\nimport Moment from \"react-moment\";\r\nimport Link from \"next/link\";\r\nimport config from \"../../config\";\r\nimport * as Queries from \"../../utils/queries\";\r\n\r\n// Generate Order Data\r\nfunction createData(id, date, title, status, action) {\r\n  return { id, date, title, status, action };\r\n}\r\n\r\nconst styles = theme => ({\r\n  seeMore: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  new: {\r\n    textAlign: \"right\",\r\n    padding: \"15px\",\r\n    paddingTop: \"0\"\r\n  }\r\n});\r\n\r\nclass UserPosts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      status: \"\",\r\n      error: \"\"\r\n    };\r\n  }\r\n\r\n  checkStatus = async val => {\r\n\r\n    let st = ''\r\n\r\n    if (val == \"Active\") {\r\n      st=(<Button variant=\"contained\" color=\"primary\">\r\n        Active\r\n      </Button>)\r\n    } else {\r\n      st=(<Button variant=\"contained\" color=\"primary\">\r\n      Disabled\r\n    </Button>)\r\n    }\r\n\r\n    // this.setState({ status: st });\r\n\r\n    return st\r\n\r\n  };\r\n\r\n  render() {\r\n    const rows = [];\r\n    const { classes } = this.props;\r\n\r\n    {\r\n      this.props.posts\r\n        ? this.props.posts.map(post => {\r\n            const dateToFormat = post.updatedAt;\r\n            const title = post.title;\r\n            // const status = this.checkStatus(post.status)\r\n\r\n            const status = ''\r\n            const action = (\r\n              <>\r\n                <div key={post.id}>\r\n                  <Link href={`/dashboard/editpost/${post.id}`}>\r\n                    <a>edit</a>\r\n                  </Link>{\" \"}\r\n                  {` - `}\r\n                  {/* <a href=\"#\" onClick={() => del(post.id)} value={post.id}> */}\r\n                  <a\r\n                    href=\"#\"\r\n                    onClick={() => Queries.deletePost(post.id)}\r\n                    value={post.id}\r\n                  >\r\n                    delete\r\n                  </a>\r\n                </div>\r\n              </>\r\n            );\r\n\r\n            const date = (\r\n              <Moment date={dateToFormat} format=\"D/MM/YY - HH:mm\" />\r\n            );\r\n\r\n            rows.push(createData(post.id, date, title, status, action));\r\n          })\r\n        : \"\";\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Title>Posts</Title>\r\n        <div className={classes.new}>\r\n          <Link href={`/dashboard/newpost`}>\r\n            <a>new post</a>\r\n          </Link>\r\n        </div>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Last Updated</TableCell>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell align=\"right\">Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.date}</TableCell>\r\n                <TableCell>{row.title}</TableCell>\r\n                <TableCell>{row.status}</TableCell>\r\n                <TableCell align=\"right\">{row.action}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(UserPosts);\r\n"]},"metadata":{},"sourceType":"module"}