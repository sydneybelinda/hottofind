{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { API } from \"../config\";\nimport nextCookie from \"next-cookies\";\nimport fetch from \"isomorphic-unfetch\";\nexport var deletePost = function deletePost(id) {\n  var url, response, error;\n  return _regeneratorRuntime.async(function deletePost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(id);\n          url = \"/api/post/delete\";\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: _JSON$stringify({\n              id: id\n            })\n          }));\n\n        case 5:\n          response = _context.sent;\n\n          if (!(response.status === 200)) {\n            _context.next = 10;\n            break;\n          }\n\n          // Router.push('/dashboard')\n          window.location.reload();\n          _context.next = 14;\n          break;\n\n        case 10:\n          console.log(\"Delete failed.\"); // https://github.com/developit/unfetch#caveats\n\n          error = new Error(response.statusText);\n          error.response = response;\n          throw error;\n\n        case 14:\n          _context.next = 19;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](2);\n          console.error(\"You have an error in your code or there are Network issues.\", _context.t0);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 16]]);\n};\nexport var deleteFile = function deleteFile(name) {\n  var url, response, error;\n  return _regeneratorRuntime.async(function deleteFile$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(name);\n          url = \"/api/dashboard/file/delete\";\n          _context2.prev = 2;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: _JSON$stringify({\n              name: name\n            })\n          }));\n\n        case 5:\n          response = _context2.sent;\n\n          if (!(response.status === 200)) {\n            _context2.next = 10;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", {\n            status: \"Sucess\"\n          });\n\n        case 10:\n          console.log(\"Delete failed.\"); // https://github.com/developit/unfetch#caveats\n\n          error = new Error(response.statusText);\n          error.response = response;\n          throw error;\n\n        case 14:\n          _context2.next = 19;\n          break;\n\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.error(\"You have an error in your code or there are Network issues.\", _context2.t0);\n\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[2, 16]]);\n};\nexport var getUserPosts = function getUserPosts(username) {\n  var res, posts;\n  return _regeneratorRuntime.async(function getUserPosts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(API, \"/posts/byuser/\").concat(username)));\n\n        case 2:\n          res = _context3.sent;\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          posts = _context3.sent;\n          return _context3.abrupt(\"return\", posts);\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\nexport var checkUserLogin = function checkUserLogin(ctx) {\n  var _nextCookie, token, apiUrl, redirectOnError, response, js, user;\n\n  return _regeneratorRuntime.async(function checkUserLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _nextCookie = nextCookie(ctx), token = _nextCookie.token; //console.log(token)\n          //   const apiUrl = getHost(ctx.req) + \"/api/profile\";\n\n          apiUrl = \"\".concat(API, \"/profile\");\n\n          redirectOnError = function redirectOnError() {\n            return true ? Router.push(\"/login\") : ctx.res.writeHead(302, {\n              Location: \"/login\"\n            }).end();\n          };\n\n          _context4.prev = 3;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(fetch(apiUrl, {\n            credentials: \"include\",\n            headers: {\n              // Authorization: JSON.stringify({ token })\n              Authorization: token\n            }\n          }));\n\n        case 6:\n          response = _context4.sent;\n\n          if (!response.ok) {\n            _context4.next = 15;\n            break;\n          }\n\n          _context4.next = 10;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 10:\n          js = _context4.sent;\n          user = js.data;\n          return _context4.abrupt(\"return\", user);\n\n        case 15:\n          _context4.next = 17;\n          return _regeneratorRuntime.awrap(redirectOnError());\n\n        case 17:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 18:\n          _context4.next = 23;\n          break;\n\n        case 20:\n          _context4.prev = 20;\n          _context4.t0 = _context4[\"catch\"](3);\n          return _context4.abrupt(\"return\", redirectOnError());\n\n        case 23:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[3, 20]]);\n};\nexport var getPost = function getPost(id) {\n  var url, data, post;\n  return _regeneratorRuntime.async(function getPost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          url = \"\".concat(API, \"/post/id/\").concat(id);\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          data = _context5.sent;\n          _context5.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          post = _context5.sent;\n          return _context5.abrupt(\"return\", post);\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n};\nexport var getCities = function getCities(countrycode) {\n  var url, data, cities;\n  return _regeneratorRuntime.async(function getCities$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          url = \"\".concat(API, \"/city/get/\").concat(countrycode);\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          data = _context6.sent;\n          _context6.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          cities = _context6.sent;\n          return _context6.abrupt(\"return\", cities);\n\n        case 8:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  });\n};\nexport var getAllCities = function getAllCities() {\n  var url, data, cities;\n  return _regeneratorRuntime.async(function getAllCities$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          url = \"\".concat(API, \"/city/get\");\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          data = _context7.sent;\n          _context7.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          cities = _context7.sent;\n          return _context7.abrupt(\"return\", cities);\n\n        case 8:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  });\n};\nexport var getCategories = function getCategories() {\n  var url, data, categories;\n  return _regeneratorRuntime.async(function getCategories$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          url = \"\".concat(API, \"/category/get\");\n          _context8.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          data = _context8.sent;\n          _context8.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          categories = _context8.sent;\n          return _context8.abrupt(\"return\", categories);\n\n        case 8:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  });\n};\nexport var getlatest = function getlatest(c) {\n  var url, data, posts;\n  return _regeneratorRuntime.async(function getlatest$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          url = \"\".concat(API, \"/posts/latest?countrycode=\").concat(c);\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          data = _context9.sent;\n          _context9.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          posts = _context9.sent;\n          return _context9.abrupt(\"return\", posts);\n\n        case 8:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  });\n};\nexport var submitProfile = function submitProfile(e) {\n  var url, data, submit;\n  return _regeneratorRuntime.async(function submitProfile$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          url = \"\".concat(API, \"/dashboard/profile/edit\");\n          _context10.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: _JSON$stringify(e)\n          }));\n\n        case 3:\n          data = _context10.sent;\n          _context10.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          submit = _context10.sent;\n          return _context10.abrupt(\"return\", submit);\n\n        case 8:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  });\n};\nexport var uploadProfilePhoto = function uploadProfilePhoto(e) {\n  var url, data, resp, _error$json, _resp;\n\n  return _regeneratorRuntime.async(function uploadProfilePhoto$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          url = \"\".concat(API, \"/dashboard/profile/changeavatar\");\n          _context11.prev = 1;\n          _context11.next = 4;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: _JSON$stringify(e)\n          }));\n\n        case 4:\n          data = _context11.sent;\n          _context11.next = 7;\n          return _regeneratorRuntime.awrap(data);\n\n        case 7:\n          resp = _context11.sent;\n          return _context11.abrupt(\"return\", resp);\n\n        case 11:\n          _context11.prev = 11;\n          _context11.t0 = _context11[\"catch\"](1);\n          console.error(\"You have an error in your code or there are Network issues.\", _context11.t0);\n          _error$json = _context11.t0.json(), _resp = _error$json.resp;\n          return _context11.abrupt(\"return\", _resp);\n\n        case 16:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, [[1, 11]]);\n};\nexport var deleteAvatar = function deleteAvatar() {\n  var url, data, categories;\n  return _regeneratorRuntime.async(function deleteAvatar$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          url = \"\".concat(API, \"/dashboard/profile/deleteavatar\");\n          _context12.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          data = _context12.sent;\n          _context12.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          categories = _context12.sent;\n          return _context12.abrupt(\"return\", categories);\n\n        case 8:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["C:/src/hottofindtest/utils/queries.js"],"names":["API","nextCookie","fetch","deletePost","id","console","log","url","method","headers","body","response","status","window","location","reload","error","Error","statusText","deleteFile","name","getUserPosts","username","res","json","posts","checkUserLogin","ctx","token","apiUrl","redirectOnError","Router","push","writeHead","Location","end","credentials","Authorization","ok","js","user","data","getPost","post","getCities","countrycode","cities","getAllCities","getCategories","categories","getlatest","c","submitProfile","e","submit","uploadProfilePhoto","resp","deleteAvatar"],"mappings":"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","sourcesContent":["import { API } from \"../config\";\r\nimport nextCookie from \"next-cookies\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nexport const deletePost = async id => {\r\n  console.log(id);\r\n\r\n  const url = `/api/post/delete`;\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id })\r\n    });\r\n    if (response.status === 200) {\r\n      // Router.push('/dashboard')\r\n      window.location.reload();\r\n    } else {\r\n      console.log(\"Delete failed.\");\r\n      // https://github.com/developit/unfetch#caveats\r\n      let error = new Error(response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      \"You have an error in your code or there are Network issues.\",\r\n      error\r\n    );\r\n  }\r\n};\r\n\r\nexport const deleteFile = async name => {\r\n  console.log(name);\r\n\r\n  const url = `/api/dashboard/file/delete`;\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ name: name })\r\n    });\r\n    if (response.status === 200) {\r\n      // Router.push('/dashboard')\r\n      return { status: \"Sucess\" };\r\n    } else {\r\n      console.log(\"Delete failed.\");\r\n      // https://github.com/developit/unfetch#caveats\r\n      let error = new Error(response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      \"You have an error in your code or there are Network issues.\",\r\n      error\r\n    );\r\n  }\r\n};\r\n\r\nexport const getUserPosts = async username => {\r\n  const res = await fetch(`${API}/posts/byuser/${username}`);\r\n  let posts = await res.json();\r\n\r\n  return posts;\r\n};\r\n\r\nexport const checkUserLogin = async ctx => {\r\n  const { token } = nextCookie(ctx);\r\n\r\n  //console.log(token)\r\n  //   const apiUrl = getHost(ctx.req) + \"/api/profile\";\r\n\r\n  const apiUrl = `${API}/profile`;\r\n\r\n  const redirectOnError = () =>\r\n    typeof window !== \"undefined\"\r\n      ? Router.push(\"/login\")\r\n      : ctx.res.writeHead(302, { Location: \"/login\" }).end();\r\n\r\n  try {\r\n    const response = await fetch(apiUrl, {\r\n      credentials: \"include\",\r\n      headers: {\r\n        // Authorization: JSON.stringify({ token })\r\n        Authorization: token\r\n      }\r\n    });\r\n\r\n    if (response.ok) {\r\n      const js = await response.json();\r\n\r\n      const user = js.data;\r\n\r\n      return user;\r\n    } else {\r\n      return await redirectOnError();\r\n    }\r\n  } catch (error) {\r\n    // Implementation or Network error\r\n    return redirectOnError();\r\n  }\r\n};\r\n\r\nexport const getPost = async id => {\r\n  const url = `${API}/post/id/${id}`;\r\n  const data = await fetch(url);\r\n  const post = await data.json();\r\n  return post;\r\n};\r\n\r\nexport const getCities = async countrycode => {\r\n  const url = `${API}/city/get/${countrycode}`;\r\n  const data = await fetch(url);\r\n  let cities = await data.json();\r\n  return cities;\r\n};\r\n\r\nexport const getAllCities = async () => {\r\n  const url = `${API}/city/get`;\r\n  const data = await fetch(url);\r\n  let cities = await data.json();\r\n  return cities;\r\n};\r\n\r\nexport const getCategories = async () => {\r\n  const url = `${API}/category/get`;\r\n  const data = await fetch(url);\r\n  let categories = await data.json();\r\n  return categories;\r\n};\r\n\r\nexport const getlatest = async c => {\r\n  const url = `${API}/posts/latest?countrycode=${c}`;\r\n  const data = await fetch(url);\r\n  let posts = await data.json();\r\n\r\n  return posts;\r\n};\r\n\r\nexport const submitProfile = async e => {\r\n  const url = `${API}/dashboard/profile/edit`;\r\n\r\n  const data = await fetch(url, {\r\n    method: \"POST\",\r\n\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(e)\r\n  });\r\n\r\n  let submit = await data.json();\r\n  return submit;\r\n};\r\n\r\nexport const uploadProfilePhoto = async e => {\r\n  const url = `${API}/dashboard/profile/changeavatar`;\r\n\r\n  try {\r\n    const data = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(e)\r\n    });\r\n\r\n    let resp = await data;\r\n\r\n    return resp;\r\n  } catch (error) {\r\n    console.error(\r\n      \"You have an error in your code or there are Network issues.\",\r\n      error\r\n    );\r\n\r\n    const { resp } = error.json();\r\n\r\n    return resp;\r\n  }\r\n};\r\n\r\nexport const deleteAvatar = async () => {\r\n  const url = `${API}/dashboard/profile/deleteavatar`;\r\n  const data = await fetch(url);\r\n  let categories = await data.json();\r\n  return categories;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}