{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable no-script-url */\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Moment from \"react-moment\";\nimport * as Queries from \"../../utils/queries\";\nimport Title from \"./title\"; // Generate Order Data\n\nfunction createData(id, date, title, status, action) {\n  return {\n    id,\n    date,\n    title,\n    status,\n    action\n  };\n}\n\nconst styles = theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  new: {\n    textAlign: \"right\",\n    padding: \"15px\",\n    paddingTop: \"0\"\n  }\n});\n\nclass UserPosts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"checkStatus\", async val => {\n      let st = \"\";\n\n      if (val == \"Active\") {\n        st = __jsx(Button, {\n          variant: \"contained\",\n          color: \"primary\"\n        }, \"Active\");\n      } else {\n        st = __jsx(Button, {\n          variant: \"contained\",\n          color: \"primary\"\n        }, \"Disabled\");\n      } // this.setState({ status: st });\n\n\n      return st;\n    });\n\n    this.state = {\n      status: \"\",\n      error: \"\"\n    };\n  }\n\n  render() {\n    const rows = [];\n    const {\n      classes\n    } = this.props;\n    {\n      this.props.posts ? this.props.posts.map(post => {\n        const dateToFormat = post.updatedAt;\n        const title = post.title; // const status = this.checkStatus(post.status)\n\n        const status = \"\";\n\n        const action = __jsx(React.Fragment, null, __jsx(\"div\", {\n          key: post.id\n        }, __jsx(Link, {\n          href: `/dashboard/editpost/${post.id}`\n        }, __jsx(\"a\", null, \"edit\")), \" \", ` - `, __jsx(\"a\", {\n          href: \"#\",\n          onClick: () => Queries.deletePost(post.id),\n          value: post.id\n        }, \"delete\")));\n\n        const date = __jsx(Moment, {\n          date: dateToFormat,\n          format: \"D/MM/YY - HH:mm\"\n        });\n\n        rows.push(createData(post.id, date, title, status, action));\n      }) : \"\";\n    }\n    return __jsx(React.Fragment, null, __jsx(Title, null, \"Posts\"), __jsx(\"div\", {\n      className: classes.new\n    }, __jsx(Link, {\n      href: `/dashboard/newpost`\n    }, __jsx(\"a\", null, \"new post\"))), __jsx(Table, {\n      size: \"small\"\n    }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, null, \"Last Updated\"), __jsx(TableCell, null, \"Title\"), __jsx(TableCell, null, \"Status\"), __jsx(TableCell, {\n      align: \"right\"\n    }, \"Action\"))), __jsx(TableBody, null, rows.map(row => __jsx(TableRow, {\n      key: row.id\n    }, __jsx(TableCell, null, row.date), __jsx(TableCell, null, row.title), __jsx(TableCell, null, row.status), __jsx(TableCell, {\n      align: \"right\"\n    }, row.action))))));\n  }\n\n}\n\nexport default withStyles(styles)(UserPosts);","map":null,"metadata":{},"sourceType":"module"}