{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\n/* eslint-disable no-script-url */\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Moment from \"react-moment\";\nimport * as Queries from \"../../utils/queries\";\nimport Title from \"./title\"; // Generate Order Data\n\nfunction createData(id, date, title, status, action) {\n  return {\n    id: id,\n    date: date,\n    title: title,\n    status: status,\n    action: action\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    seeMore: {\n      marginTop: theme.spacing(3)\n    },\n    \"new\": {\n      textAlign: \"right\",\n      padding: \"15px\",\n      paddingTop: \"0\"\n    }\n  };\n};\n\nvar UserPosts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserPosts, _React$Component);\n\n  function UserPosts(props) {\n    var _this;\n\n    _classCallCheck(this, UserPosts);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserPosts).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkStatus\", function _callee(val) {\n      var st;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              st = \"\";\n\n              if (val == \"Active\") {\n                st = __jsx(Button, {\n                  variant: \"contained\",\n                  color: \"primary\"\n                }, \"Active\");\n              } else {\n                st = __jsx(Button, {\n                  variant: \"contained\",\n                  color: \"primary\"\n                }, \"Disabled\");\n              } // this.setState({ status: st });\n\n\n              return _context.abrupt(\"return\", st);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _this.state = {\n      status: \"\",\n      error: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(UserPosts, [{\n    key: \"render\",\n    value: function render() {\n      var rows = [];\n      var classes = this.props.classes;\n      {\n        this.props.posts ? this.props.posts.map(function (post) {\n          var dateToFormat = post.updatedAt;\n          var title = post.title; // const status = this.checkStatus(post.status)\n\n          var status = \"\";\n\n          var action = __jsx(React.Fragment, null, __jsx(\"div\", {\n            key: post.id\n          }, __jsx(Link, {\n            href: \"/dashboard/editpost/\".concat(post.id)\n          }, __jsx(\"a\", null, \"edit\")), \" \", \" - \", __jsx(\"a\", {\n            href: \"#\",\n            onClick: function onClick() {\n              return Queries.deletePost(post.id);\n            },\n            value: post.id\n          }, \"delete\")));\n\n          var date = __jsx(Moment, {\n            date: dateToFormat,\n            format: \"D/MM/YY - HH:mm\"\n          });\n\n          rows.push(createData(post.id, date, title, status, action));\n        }) : \"\";\n      }\n      return __jsx(React.Fragment, null, __jsx(Title, null, \"Posts\"), __jsx(\"div\", {\n        className: classes[\"new\"]\n      }, __jsx(Link, {\n        href: \"/dashboard/newpost\"\n      }, __jsx(\"a\", null, \"new post\"))), __jsx(Table, {\n        size: \"small\"\n      }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, null, \"Last Updated\"), __jsx(TableCell, null, \"Title\"), __jsx(TableCell, null, \"Status\"), __jsx(TableCell, {\n        align: \"right\"\n      }, \"Action\"))), __jsx(TableBody, null, rows.map(function (row) {\n        return __jsx(TableRow, {\n          key: row.id\n        }, __jsx(TableCell, null, row.date), __jsx(TableCell, null, row.title), __jsx(TableCell, null, row.status), __jsx(TableCell, {\n          align: \"right\"\n        }, row.action));\n      }))));\n    }\n  }]);\n\n  return UserPosts;\n}(React.Component);\n\nexport default withStyles(styles)(UserPosts);","map":null,"metadata":{},"sourceType":"module"}