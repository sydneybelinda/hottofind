{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Router from \"next/router\";\nimport SimpleSelect from \"./simpleSelect\";\nimport * as Queries from \"../../utils/queries\";\nimport dynamic from \"next/dynamic\";\nimport { COUNTRYCODE } from \"../../config\"; // const UploadComponent = dynamic(() => import(\"./uploadcomponent\"), {\n//   ssr: false\n// });\n\nvar ProfileFilePond = dynamic(function () {\n  return import(\"./profileFilePond\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./profileFilePond\")];\n    },\n    modules: [\"./profileFilePond\"]\n  }\n});\n\nvar styles = function styles(theme) {\n  return {\n    \"@global\": {\n      body: {\n        backgroundColor: theme.palette.common.white\n      }\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\",\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n};\n\nvar ProfileForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileForm, _React$Component);\n\n  function ProfileForm(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileForm).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeCountry\", function (e) {\n      _this.setState({\n        cities: \"\"\n      });\n\n      _this.setState({\n        country: e.target.value\n      });\n\n      var filter = function filter(tag, arr) {\n        return arr.filter(function (ct) {\n          return ct.countrycode === tag;\n        });\n      };\n\n      var filtered = filter(e.target.value, _this.props.citydata);\n      var cts = [];\n      filtered.map(function (ct) {\n        cts.push({\n          label: ct.city,\n          value: ct.city.toLowerCase()\n        });\n      });\n\n      _this.setState({\n        citydata: cts\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeCity\", function (e) {\n      _this.setState({\n        city: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function _callee(event) {\n      var fs;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                errors: \"\"\n              });\n\n              fs = []; //var myJSON = JSON.stringify(this.ref1);\n              //console.log(`ref1: ${myJSON}`)\n\n              _this.ref1.getFiles().map(function (fileItem) {\n                return fileItem.file;\n              }).forEach(function (file) {\n                var name = file.name.split('.')[0];\n                var fileName = \"\".concat(name, \".jpg\"); //  formData.append(fieldName, file, file.name);\n                //  console.log(file.name);\n\n                fs.push({\n                  name: fileName,\n                  owner: _this.props.user.username\n                });\n              }); // this.setState(\n              //   {\n              //     uploads: fs\n              //   },\n              //   this.handleSave\n              // );\n\n\n              _this.handleSave;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSave\", function _callee2(event) {\n      var response, error, json, resperrors, _response;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                error: \"\"\n              });\n\n              _context2.prev = 2;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(Queries.submitProfile(_this.state));\n\n            case 5:\n              response = _context2.sent;\n\n              if (!(response.status === 200)) {\n                _context2.next = 10;\n                break;\n              }\n\n              Router.push('/profile');\n              _context2.next = 19;\n              break;\n\n            case 10:\n              console.log('Edit failed.'); // https://github.com/developit/unfetch#caveats\n\n              error = new Error(response.statusText);\n              error.response = response;\n              _context2.next = 15;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 15:\n              json = _context2.sent;\n              resperrors = json.errors[0].message;\n\n              _this.setState({\n                error: resperrors || error.message\n              });\n\n              throw error;\n\n            case 19:\n              _context2.next = 25;\n              break;\n\n            case 21:\n              _context2.prev = 21;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error('You have an error in your code or there are Network issues.', _context2.t0);\n              _response = _context2.t0.response; //   this.setState({\n              //     error:  response ? response.statusText : error.message\n              //   })\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[2, 21]]);\n    });\n\n    var user = _this.props.userdata;\n    var mca = [];\n    var countries = [];\n\n    _this.props.citydata.map(function (c) {\n      if (mca.indexOf(c.countrycode) === -1) {\n        mca.push(c.countrycode);\n        countries.push({\n          label: c.country,\n          value: c.countrycode\n        });\n      }\n    });\n\n    if (user.city) {\n      var cities = [];\n\n      _this.props.citydata.map(function (ct) {\n        cities.push({\n          label: ct.city,\n          value: ct.city.toLowerCase()\n        });\n      });\n    }\n\n    _this.ref1 = React.createRef();\n    _this.state = _defineProperty({\n      username: user.username,\n      name: user.name || '',\n      email: user.email || '',\n      address1: user.address1 || '',\n      address2: user.address2 || '',\n      city: user.city || '',\n      state: user.state || '',\n      country: user.country || '',\n      postcode: user.postcode || '',\n      avatar: user.avatar || '',\n      error: '',\n      citydata: cities || [],\n      countries: countries\n    }, \"error\", '');\n    return _this;\n  } //};\n  // componentDidMount = () => {\n  // var mca = [];\n  // var countries = [];\n  // this.props.citydata.map(c => {\n  //   if (mca.indexOf(c.countrycode) === -1) {\n  //     mca.push(c.countrycode);\n  //     countries.push({ label: c.country, value: c.countrycode });\n  //   }\n  //   console.log(countries)\n  // this.setState({ countries: countries });\n  // })\n  // if (this.state.cities) {\n  // var cities = [];\n  // this.props.citydata.map(ct => {\n  //   cities.push({ label: ct.city, value: ct.city.toLowerCase() });\n  // });\n  // this.setState({ citydata: cities });\n  //}\n\n\n  _createClass(ProfileForm, [{\n    key: \"onUpdateFiles\",\n    value: function onUpdateFiles(fileItems) {\n      console.log(fileItems); // this.setState({\n      //   files: fileItems.map(fileItem => fileItem.file)\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = this.props.user;\n      var post = this.props.post || [];\n      var classes = this.props.classes;\n      return __jsx(React.Fragment, null, __jsx(\"form\", {\n        noValidate: true,\n        onSubmit: this.handleSave\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 3\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 3\n      }, \"Photo\", __jsx(\"div\", {\n        style: {\n          backgroundImage: \"url('\".concat(user.avatar, \"')\"),\n          backgroundSize: 'cover',\n          backgroundPosition: 'center top',\n          maxHeight: \"490px\",\n          minHeight: \"310px\"\n        }\n      }, __jsx(ProfileFilePond, {\n        onupdatefiles: this.onUpdateFiles.bind(this),\n        setRef: function setRef(ref) {\n          return _this2.ref1 = ref;\n        } //    files={this.props.post.files}\n        ,\n        handleUploadImages: this.handleUploadImages,\n        user: this.props.userdata\n      }))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 9\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 3\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        gutterBottom: true\n      }, \"Update Personal Details\")), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, __jsx(TextField, {\n        required: true,\n        id: \"name\",\n        name: \"name\",\n        label: \"Name\",\n        fullWidth: true,\n        autoComplete: \"name\",\n        value: this.state.name,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, __jsx(TextField, {\n        required: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email Address\",\n        fullWidth: true,\n        autoComplete: \"email\",\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, __jsx(TextField, {\n        required: true,\n        id: \"address1\",\n        name: \"address1\",\n        label: \"Address line 1\",\n        fullWidth: true,\n        autoComplete: \"billing address-line1\",\n        value: this.state.address1,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address1: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, __jsx(TextField, {\n        id: \"address2\",\n        name: \"address2\",\n        label: \"Address line 2\",\n        fullWidth: true,\n        autoComplete: \"address2\",\n        value: this.state.address2,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            address2: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, __jsx(SimpleSelect, {\n        options: this.state.countries,\n        value: this.state.country,\n        placeholder: \"Country\",\n        name: \"country\",\n        onChange: this._handleChangeCountry\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, __jsx(SimpleSelect, {\n        options: this.state.citydata,\n        value: this.state.city,\n        placeholder: \"City\",\n        name: \"city\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            city: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, __jsx(TextField, {\n        id: \"state\",\n        name: \"state\",\n        label: \"State/Province/Region\",\n        fullWidth: true,\n        value: this.state.state,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            state: event.target.value\n          });\n        }\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6\n      }, __jsx(TextField, {\n        required: true,\n        id: \"postcode\",\n        name: \"postcode\",\n        label: \"Zip / Postal code\",\n        fullWidth: true,\n        autoComplete: \"postcode\",\n        value: this.state.postcode,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            postcode: event.target.value\n          });\n        }\n      }))), __jsx(Grid, {\n        item: true,\n        xs: 12\n      }, __jsx(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit\n      }, \"Submit\")))), this.state.error ? __jsx(\"p\", {\n        className: \"error\"\n      }, \"Error: \", this.state.error) : ''));\n    }\n  }]);\n\n  return ProfileForm;\n}(React.Component);\n\nexport default withStyles(styles)(ProfileForm);","map":null,"metadata":{},"sourceType":"module"}