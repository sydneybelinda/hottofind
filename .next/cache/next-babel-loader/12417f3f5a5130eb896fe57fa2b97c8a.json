{"ast":null,"code":"'use strict';\n\nvar _Object$keys = require(\"@babel/runtime-corejs2/core-js/object/keys\");\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst Sequelize = require('sequelize');\n\nconst basename = path.basename(__filename);\nconst env = \"development\" || 'development';\n\nconst config = require(__dirname + '/../config/config.json')[env];\n\nconst db = {};\nlet sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\ndb.User = sequelize.import(process.cwd() + '/models/user.js');\ndb.Category = sequelize.import(process.cwd() + '/models/category.js');\ndb.Post = sequelize.import(process.cwd() + '/models/post.js');\ndb.File = sequelize.import(process.cwd() + '/models/file.js');\ndb.City = sequelize.import(process.cwd() + '/models/city.js');\n\n_Object$keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;","map":{"version":3,"sources":["C:/src/hottofindtest/models/index.js"],"names":["fs","require","path","Sequelize","basename","__filename","env","config","__dirname","db","sequelize","use_env_variable","process","database","username","password","User","import","cwd","Category","Post","File","City","forEach","modelName","associate","module","exports"],"mappings":"AAAA;;;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAjB;AACA,MAAMC,GAAG,GAAG,iBAAwB,aAApC;;AACA,MAAMC,MAAM,GAAGN,OAAO,CAACO,SAAS,GAAG,wBAAb,CAAP,CAA8CF,GAA9C,CAAf;;AACA,MAAMG,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIH,MAAM,CAACI,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIP,SAAJ,CAAcS,OAAO,CAACN,GAAR,CAAYC,MAAM,CAACI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAZ;AACD,CAFD,MAEO;AACLG,EAAAA,SAAS,GAAG,IAAIP,SAAJ,CAAcI,MAAM,CAACM,QAArB,EAA+BN,MAAM,CAACO,QAAtC,EAAgDP,MAAM,CAACQ,QAAvD,EAAiER,MAAjE,CAAZ;AACD;;AAGDE,EAAE,CAACO,IAAH,GAAUN,SAAS,CAACO,MAAV,CAAiBL,OAAO,CAACM,GAAR,KAAiB,iBAAlC,CAAV;AACAT,EAAE,CAACU,QAAH,GAAcT,SAAS,CAACO,MAAV,CAAiBL,OAAO,CAACM,GAAR,KAAiB,qBAAlC,CAAd;AACAT,EAAE,CAACW,IAAH,GAAUV,SAAS,CAACO,MAAV,CAAiBL,OAAO,CAACM,GAAR,KAAiB,iBAAlC,CAAV;AACAT,EAAE,CAACY,IAAH,GAAUX,SAAS,CAACO,MAAV,CAAiBL,OAAO,CAACM,GAAR,KAAiB,iBAAlC,CAAV;AACAT,EAAE,CAACa,IAAH,GAAUZ,SAAS,CAACO,MAAV,CAAiBL,OAAO,CAACM,GAAR,KAAiB,iBAAlC,CAAV;;AAEA,aAAYT,EAAZ,EAAgBc,OAAhB,CAAwBC,SAAS,IAAI;AACnC,MAAIf,EAAE,CAACe,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BhB,IAAAA,EAAE,CAACe,SAAD,CAAF,CAAcC,SAAd,CAAwBhB,EAAxB;AACD;AACF,CAJD;;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACN,SAAH,GAAeA,SAAf;AAGAuB,MAAM,CAACC,OAAP,GAAiBlB,EAAjB","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../config/config.json')[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\n\ndb.User = sequelize.import(process.cwd() +  '/models/user.js');\ndb.Category = sequelize.import(process.cwd() +  '/models/category.js');\ndb.Post = sequelize.import(process.cwd() +  '/models/post.js');\ndb.File = sequelize.import(process.cwd() +  '/models/file.js');\ndb.City = sequelize.import(process.cwd() +  '/models/city.js');\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\n\nmodule.exports = db;\n"]},"metadata":{},"sourceType":"script"}