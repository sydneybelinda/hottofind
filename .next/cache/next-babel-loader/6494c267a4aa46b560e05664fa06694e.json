{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from \"isomorphic-unfetch\";\nimport nextCookie from \"next-cookies\";\nimport { API } from \"../config\";\nexport var deletePost = function deletePost(id) {\n  var url, response, error;\n  return _regeneratorRuntime.async(function deletePost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"/api/post/delete\";\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: _JSON$stringify({\n              id: id\n            })\n          }));\n\n        case 4:\n          response = _context.sent;\n\n          if (!(response.status === 200)) {\n            _context.next = 9;\n            break;\n          }\n\n          // Router.push('/dashboard')\n          window.location.reload();\n          _context.next = 13;\n          break;\n\n        case 9:\n          console.log(\"Delete failed.\"); // https://github.com/developit/unfetch#caveats\n\n          error = new Error(response.statusText);\n          error.response = response;\n          throw error;\n\n        case 13:\n          _context.next = 18;\n          break;\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](1);\n          console.error(\"You have an error in your code or there are Network issues.\", _context.t0);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 15]]);\n};\nexport var deleteFile = function deleteFile(name) {\n  var url, response, error;\n  return _regeneratorRuntime.async(function deleteFile$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          url = \"/api/dashboard/file/delete\";\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: _JSON$stringify({\n              name: name\n            })\n          }));\n\n        case 4:\n          response = _context2.sent;\n\n          if (!(response.status === 200)) {\n            _context2.next = 9;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", {\n            status: \"Sucess\"\n          });\n\n        case 9:\n          console.log(\"Delete failed.\"); // https://github.com/developit/unfetch#caveats\n\n          error = new Error(response.statusText);\n          error.response = response;\n          throw error;\n\n        case 13:\n          _context2.next = 18;\n          break;\n\n        case 15:\n          _context2.prev = 15;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.error(\"You have an error in your code or there are Network issues.\", _context2.t0);\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 15]]);\n};\nexport var getUserPosts = function getUserPosts(username) {\n  var res, posts;\n  return _regeneratorRuntime.async(function getUserPosts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(API, \"/posts/byuser/\").concat(username)));\n\n        case 2:\n          res = _context3.sent;\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          posts = _context3.sent;\n          return _context3.abrupt(\"return\", posts);\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};\nexport var checkUserLogin = function checkUserLogin(ctx) {\n  var _nextCookie, token, apiUrl, redirectOnError, response, js, user;\n\n  return _regeneratorRuntime.async(function checkUserLogin$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _nextCookie = nextCookie(ctx), token = _nextCookie.token;\n          apiUrl = \"\".concat(API, \"/profile\");\n\n          redirectOnError = function redirectOnError() {\n            return true ? Router.push(\"/login\") : ctx.res.writeHead(302, {\n              Location: \"/login\"\n            }).end();\n          };\n\n          _context4.prev = 3;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(fetch(apiUrl, {\n            credentials: \"include\",\n            headers: {\n              // Authorization: JSON.stringify({ token })\n              Authorization: token\n            }\n          }));\n\n        case 6:\n          response = _context4.sent;\n\n          if (!response.ok) {\n            _context4.next = 15;\n            break;\n          }\n\n          _context4.next = 10;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 10:\n          js = _context4.sent;\n          user = js.data;\n          return _context4.abrupt(\"return\", user);\n\n        case 15:\n          _context4.next = 17;\n          return _regeneratorRuntime.awrap(redirectOnError());\n\n        case 17:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 18:\n          _context4.next = 23;\n          break;\n\n        case 20:\n          _context4.prev = 20;\n          _context4.t0 = _context4[\"catch\"](3);\n          return _context4.abrupt(\"return\", redirectOnError());\n\n        case 23:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[3, 20]]);\n};\nexport var getPost = function getPost(id) {\n  var url, data, post;\n  return _regeneratorRuntime.async(function getPost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          url = \"\".concat(API, \"/post/id/\").concat(id);\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          data = _context5.sent;\n          _context5.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          post = _context5.sent;\n          return _context5.abrupt(\"return\", post);\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  });\n};\nexport var getCities = function getCities(countrycode) {\n  var url, data, cities;\n  return _regeneratorRuntime.async(function getCities$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          url = \"\".concat(API, \"/city/get/\").concat(countrycode);\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          data = _context6.sent;\n          _context6.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          cities = _context6.sent;\n          return _context6.abrupt(\"return\", cities);\n\n        case 8:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  });\n};\nexport var getAllCities = function getAllCities() {\n  var url, data, cities;\n  return _regeneratorRuntime.async(function getAllCities$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          url = \"\".concat(API, \"/city/get\");\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          data = _context7.sent;\n          _context7.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          cities = _context7.sent;\n          return _context7.abrupt(\"return\", cities);\n\n        case 8:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  });\n};\nexport var getCategories = function getCategories() {\n  var url, data, categories;\n  return _regeneratorRuntime.async(function getCategories$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          url = \"\".concat(API, \"/category/get\");\n          _context8.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          data = _context8.sent;\n          _context8.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          categories = _context8.sent;\n          return _context8.abrupt(\"return\", categories);\n\n        case 8:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  });\n};\nexport var getlatest = function getlatest(c) {\n  var url, data, posts;\n  return _regeneratorRuntime.async(function getlatest$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          url = \"\".concat(API, \"/posts/latest?countrycode=\").concat(c);\n          _context9.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url));\n\n        case 3:\n          data = _context9.sent;\n          _context9.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          posts = _context9.sent;\n          return _context9.abrupt(\"return\", posts);\n\n        case 8:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  });\n};\nexport var submitProfile = function submitProfile(e) {\n  var url, data, submit;\n  return _regeneratorRuntime.async(function submitProfile$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          url = \"\".concat(API, \"/dashboard/profile/edit\");\n          _context10.next = 3;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: _JSON$stringify(e)\n          }));\n\n        case 3:\n          data = _context10.sent;\n          _context10.next = 6;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 6:\n          submit = _context10.sent;\n          return _context10.abrupt(\"return\", submit);\n\n        case 8:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  });\n};\nexport var uploadProfilePhoto = function uploadProfilePhoto(e) {\n  var url, data, resp, _error$json, _resp;\n\n  return _regeneratorRuntime.async(function uploadProfilePhoto$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          url = \"\".concat(API, \"/dashboard/profile/changeavatar\");\n          _context11.prev = 1;\n          _context11.next = 4;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: _JSON$stringify(e)\n          }));\n\n        case 4:\n          data = _context11.sent;\n          _context11.next = 7;\n          return _regeneratorRuntime.awrap(data);\n\n        case 7:\n          resp = _context11.sent;\n          return _context11.abrupt(\"return\", resp);\n\n        case 11:\n          _context11.prev = 11;\n          _context11.t0 = _context11[\"catch\"](1);\n          console.error(\"You have an error in your code or there are Network issues.\", _context11.t0);\n          _error$json = _context11.t0.json(), _resp = _error$json.resp;\n          return _context11.abrupt(\"return\", _resp);\n\n        case 16:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, [[1, 11]]);\n};\nexport var deleteAvatar = function deleteAvatar(e) {\n  var url, data, resp, _error$json2, _resp2;\n\n  return _regeneratorRuntime.async(function deleteAvatar$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          url = \"\".concat(API, \"/dashboard/profile/deleteavatar\");\n          _context12.prev = 1;\n          _context12.next = 4;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: _JSON$stringify(e)\n          }));\n\n        case 4:\n          data = _context12.sent;\n          _context12.next = 7;\n          return _regeneratorRuntime.awrap(data);\n\n        case 7:\n          resp = _context12.sent;\n          return _context12.abrupt(\"return\", resp);\n\n        case 11:\n          _context12.prev = 11;\n          _context12.t0 = _context12[\"catch\"](1);\n          console.error(\"You have an error in your code or there are Network issues.\", _context12.t0);\n          _error$json2 = _context12.t0.json(), _resp2 = _error$json2.resp;\n          return _context12.abrupt(\"return\", _resp2);\n\n        case 16:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, [[1, 11]]);\n};","map":null,"metadata":{},"sourceType":"module"}