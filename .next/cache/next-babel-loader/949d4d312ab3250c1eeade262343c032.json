{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\src\\\\hottofindtest\\\\components\\\\dashboard\\\\postForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Router from \"next/router\";\nimport SimpleSelect from \"./simpleSelect\";\nimport dynamic from \"next/dynamic\";\nimport { COUNTRYCODE } from \"../../config\"; // const UploadComponent = dynamic(() => import(\"./uploadcomponent\"), {\n//   ssr: false\n// });\n\nvar FilePond = dynamic(function () {\n  return import(\"./filePond\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"./filePond\")];\n    },\n    modules: [\"./filePond\"]\n  }\n});\n\nvar styles = function styles(theme) {\n  return {\n    \"@global\": {\n      body: {\n        backgroundColor: theme.palette.common.white\n      }\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: \"100%\",\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n};\n\nvar PostForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostForm, _React$Component);\n\n  function PostForm(props) {\n    var _this;\n\n    _classCallCheck(this, PostForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostForm).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var mc = [];\n      var mainCats = [];\n\n      _this.props.categories.map(function (cat) {\n        if (mc.indexOf(cat.maincategory) === -1) {\n          mc.push(cat.maincategory);\n          mainCats.push({\n            label: cat.maincategory,\n            value: cat.catindex\n          });\n        }\n      });\n\n      _this.setState({\n        maincategories: mainCats\n      });\n\n      if (_this.state.keyindex) {\n        var filter = function filter(tag, arr) {\n          return arr.filter(function (cat) {\n            return cat.catindex === tag;\n          });\n        };\n\n        var filtered = filter(_this.state.catindex, _this.props.categories);\n        var subCats = [];\n        filtered.map(function (cat) {\n          subCats.push({\n            label: cat.subcategory,\n            value: cat.keyindex\n          });\n        });\n\n        _this.setState({\n          subcategories: subCats\n        });\n      }\n\n      var cities = [];\n\n      _this.props.citydata.map(function (ct) {\n        cities.push({\n          label: ct.city,\n          value: ct.city.toLowerCase()\n        });\n      });\n\n      _this.setState({\n        citydata: cities\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeCity\", function (e) {\n      _this.setState({\n        cities: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeCategory\", function (e) {\n      _this.setState({\n        keyindex: \"\"\n      });\n\n      _this.setState({\n        catindex: e.target.value\n      });\n\n      var filter = function filter(tag, arr) {\n        return arr.filter(function (cat) {\n          return cat.catindex === tag;\n        });\n      };\n\n      var filtered = filter(e.target.value, _this.props.categories);\n      var subCats = [];\n      filtered.map(function (cat) {\n        subCats.push({\n          label: cat.subcategory,\n          value: cat.keyindex\n        });\n      });\n\n      _this.setState({\n        subcategories: subCats\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChangeSubCategory\", function (e) {\n      _this.setState({\n        keyindex: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function _callee(event) {\n      var fs;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              _this.setState({\n                error: \"\"\n              });\n\n              fs = []; //var myJSON = JSON.stringify(this.ref1);\n              //console.log(`ref1: ${myJSON}`)\n\n              _this.ref1.getFiles().map(function (fileItem) {\n                return fileItem.file;\n              }).forEach(function (file) {\n                var name = file.name.split('.')[0];\n                var fileName = \"\".concat(name, \".jpg\"); //  formData.append(fieldName, file, file.name);\n                //  console.log(file.name);\n\n                fs.push({\n                  name: fileName,\n                  owner: _this.props.user.username\n                });\n              });\n\n              _this.setState({\n                uploads: fs\n              }, _this.handleSave);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSave\", function _callee2(event) {\n      var url, response, error, _response;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              url = \"/api/dashboard/post/edit\";\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: _JSON$stringify(_this.state)\n              }));\n\n            case 4:\n              response = _context2.sent;\n\n              if (!(response.status === 200)) {\n                _context2.next = 9;\n                break;\n              }\n\n              Router.push(\"/dashboard\");\n              _context2.next = 13;\n              break;\n\n            case 9:\n              console.log(\"Edit failed.\"); // https://github.com/developit/unfetch#caveats\n\n              error = new Error(response.statusText);\n              error.response = response;\n              throw error;\n\n            case 13:\n              _context2.next = 20;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error(\"You have an error in your code or there are Network issues.\", _context2.t0);\n              _response = _context2.t0.response;\n\n              _this.setState({\n                error: _response ? _response.statusText : _context2.t0.message\n              });\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 15]]);\n    });\n\n    var user = _this.props.user;\n    var post = _this.props.post || [];\n    _this.ref1 = React.createRef();\n    _this.state = {\n      id: _this.props.post ? _this.props.post.id : undefined,\n      owner: post.owner || user.username,\n      firstname: post.firstname || \"\",\n      lastname: post.lastname || \"\",\n      country: post.country || COUNTRYCODE,\n      age: post.age || \"\",\n      email: post.email || user.email,\n      avatar: post.files || \"\",\n      catindex: post.catindex || \"\",\n      keyindex: post.keyindex || \"\",\n      cities: post.cities || \"\",\n      location: post.location || \"\",\n      title: post.title || \"\",\n      phone: post.phone || \"\",\n      price: post.price || \"\",\n      description: post.description || \"\",\n      website: post.website || \"\",\n      rawcities: _this.props.citydata,\n      citydata: [],\n      countries: [],\n      currencies: [],\n      maincategories: [],\n      subcategories: [],\n      error: \"\",\n      files: post ? _this.props.post.files : [],\n      newfiles: []\n    };\n    return _this;\n  }\n\n  _createClass(PostForm, [{\n    key: \"onUpdateFiles\",\n    value: function onUpdateFiles(fileItems) {\n      console.log(fileItems); // this.setState({\n      //   files: fileItems.map(fileItem => fileItem.file)\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = this.props.user;\n      var post = this.props.post || [];\n      var classes = this.props.classes;\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        noValidate: true,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Photo\", __jsx(\"div\", {\n        style: {\n          // backgroundImage: `url('${user.avatar}')`,\n          // backgroundSize: \"cover\",\n          // backgroundPosition: \"center top\",\n          // maxHeight: \"490px\",\n          minHeight: \"310px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, __jsx(FilePond, {\n        onupdatefiles: this.onUpdateFiles.bind(this),\n        setRef: function setRef(ref) {\n          return _this2.ref1 = ref;\n        },\n        files: this.props.post.files,\n        handleUploadImages: this.handleUploadImages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Ad Details\")), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, __jsx(SimpleSelect, {\n        options: this.state.maincategories,\n        value: this.state.catindex,\n        placeholder: \"Category\",\n        name: \"category\",\n        onChange: this._handleChangeCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, __jsx(SimpleSelect, {\n        options: this.state.subcategories,\n        value: this.state.keyindex,\n        placeholder: \"Subcategory\",\n        name: \"subcategory\",\n        onChange: this._handleChangeSubCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, __jsx(SimpleSelect, {\n        options: this.state.citydata,\n        value: this.state.cities,\n        placeholder: \"City\",\n        name: \"city\",\n        onChange: this._handleChangeCity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, __jsx(TextField, {\n        required: true,\n        id: \"title\",\n        name: \"title\",\n        label: \"Title\",\n        fullWidth: true,\n        autoComplete: \"title\",\n        value: this.state.title,\n        variant: \"outlined\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            title: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, __jsx(TextField, {\n        id: \"price\",\n        name: \"price\",\n        label: \"Price\",\n        fullWidth: true,\n        autoComplete: \"price\",\n        value: this.state.price,\n        variant: \"outlined\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            price: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, __jsx(TextField, {\n        id: \"description\",\n        label: \"Description\",\n        name: \"description\",\n        multiline: true,\n        fullWidth: true,\n        rows: \"10\",\n        value: this.state.description,\n        variant: \"outlined\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, __jsx(TextField, {\n        id: \"website\",\n        name: \"website\",\n        label: \"Website URL (inc https://)\",\n        fullWidth: true,\n        autoComplete: \"Website\",\n        value: this.state.website,\n        variant: \"outlined\",\n        onChange: function onChange(event) {\n          return _this2.setState({\n            website: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      })))), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, __jsx(Grid, {\n        container: true,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, __jsx(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"Contact Details\")), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, __jsx(TextField, {\n        required: true,\n        id: \"firstname\",\n        name: \"firstname\",\n        label: \"First Name\",\n        fullWidth: true,\n        autoComplete: \"firstname\",\n        value: this.state.firstname,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            firstname: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, __jsx(TextField, {\n        required: true,\n        id: \"lastname\",\n        name: \"lastname\",\n        label: \"Last Name\",\n        fullWidth: true,\n        autoComplete: \"lastname\",\n        value: this.state.lastname,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            lastname: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, __jsx(TextField, {\n        required: true,\n        id: \"age\",\n        name: \"age\",\n        label: \"Age\",\n        fullWidth: true,\n        autoComplete: \"age\",\n        value: this.state.age,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            age: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, __jsx(TextField, {\n        required: true,\n        id: \"phone\",\n        name: \"phone\",\n        label: \"Phone Number\",\n        fullWidth: true,\n        autoComplete: \"phone\",\n        value: this.state.phone,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            phone: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, __jsx(TextField, {\n        required: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email Address\",\n        fullWidth: true,\n        autoComplete: \"email\",\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      })), __jsx(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, __jsx(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"Submit\"))))), this.state.error && __jsx(\"p\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"Error: \", this.state.error)));\n    }\n  }]);\n\n  return PostForm;\n}(React.Component);\n\nexport default withStyles(styles)(PostForm);","map":{"version":3,"sources":["C:/src/hottofindtest/components/dashboard/postForm.js"],"names":["React","useState","useEffect","Grid","Typography","TextField","Button","withStyles","Router","SimpleSelect","dynamic","COUNTRYCODE","FilePond","ssr","styles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","PostForm","props","mc","mainCats","categories","map","cat","indexOf","maincategory","push","label","value","catindex","setState","maincategories","state","keyindex","filter","tag","arr","filtered","subCats","subcategory","subcategories","cities","citydata","ct","city","toLowerCase","e","target","event","preventDefault","error","fs","ref1","getFiles","fileItem","file","forEach","name","split","fileName","owner","user","username","uploads","handleSave","url","fetch","method","headers","response","status","console","log","Error","statusText","message","post","createRef","id","undefined","firstname","lastname","country","age","email","files","location","title","phone","price","description","website","rawcities","countries","currencies","newfiles","fileItems","classes","handleSubmit","minHeight","onUpdateFiles","bind","ref","handleUploadImages","_handleChangeCategory","_handleChangeSubCategory","_handleChangeCity","Component"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Router from \"next/router\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\n\r\nimport dynamic from \"next/dynamic\";\r\nimport { COUNTRYCODE } from \"../../config\";\r\n\r\n// const UploadComponent = dynamic(() => import(\"./uploadcomponent\"), {\r\n//   ssr: false\r\n// });\r\n\r\nconst FilePond = dynamic(() => import(\"./filePond\"), {\r\n  ssr: false\r\n});\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n});\r\n\r\nclass PostForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const user = this.props.user;\r\n\r\n    const post = this.props.post || [];\r\n\r\n    this.ref1 = React.createRef();\r\n\r\n    this.state = {\r\n      id: this.props.post ? this.props.post.id : undefined,\r\n      owner: post.owner || user.username,\r\n      firstname: post.firstname || \"\",\r\n      lastname: post.lastname || \"\",\r\n      country: post.country || COUNTRYCODE,\r\n      age: post.age || \"\",\r\n      email: post.email || user.email,\r\n      avatar: post.files || \"\",\r\n      catindex: post.catindex || \"\",\r\n      keyindex: post.keyindex || \"\",\r\n      cities: post.cities || \"\",\r\n      location: post.location || \"\",\r\n      title: post.title || \"\",\r\n      phone: post.phone || \"\",\r\n      price: post.price || \"\",\r\n      description: post.description || \"\",\r\n      website: post.website || \"\",\r\n      rawcities: this.props.citydata,\r\n      citydata: [],\r\n      countries: [],\r\n      currencies: [],\r\n      maincategories: [],\r\n      subcategories: [],\r\n      error: \"\",\r\n      files: post ? this.props.post.files : [],\r\n      newfiles: []\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    var mc = [];\r\n    var mainCats = [];\r\n    this.props.categories.map(cat => {\r\n      if (mc.indexOf(cat.maincategory) === -1) {\r\n        mc.push(cat.maincategory);\r\n        mainCats.push({ label: cat.maincategory, value: cat.catindex });\r\n      }\r\n    });\r\n    this.setState({ maincategories: mainCats });\r\n\r\n    if (this.state.keyindex) {\r\n      const filter = (tag, arr) => arr.filter(cat => cat.catindex === tag);\r\n      const filtered = filter(this.state.catindex, this.props.categories);\r\n\r\n      var subCats = [];\r\n      filtered.map(cat => {\r\n        subCats.push({ label: cat.subcategory, value: cat.keyindex });\r\n      });\r\n\r\n      this.setState({ subcategories: subCats });\r\n    }\r\n    \r\n\r\n    var cities = [];\r\n    this.props.citydata.map(ct => {\r\n      cities.push({ label: ct.city, value: ct.city.toLowerCase() });\r\n    });\r\n\r\n    this.setState({ citydata: cities });\r\n  };\r\n\r\n  _handleChangeCity = e => {\r\n    this.setState({ cities: e.target.value });\r\n  };\r\n\r\n  _handleChangeCategory = e => {\r\n    this.setState({ keyindex: \"\" });\r\n    this.setState({ catindex: e.target.value });\r\n\r\n    const filter = (tag, arr) => arr.filter(cat => cat.catindex === tag);\r\n    const filtered = filter(e.target.value, this.props.categories);\r\n\r\n    var subCats = [];\r\n    filtered.map(cat => {\r\n      subCats.push({ label: cat.subcategory, value: cat.keyindex });\r\n    });\r\n\r\n    this.setState({ subcategories: subCats });\r\n  };\r\n\r\n  _handleChangeSubCategory = e => {\r\n    this.setState({ keyindex: e.target.value });\r\n  };\r\n\r\n  onUpdateFiles(fileItems) {\r\n    console.log(fileItems);\r\n    // this.setState({\r\n    //   files: fileItems.map(fileItem => fileItem.file)\r\n    // });\r\n  }\r\n\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ error: \"\" });\r\n\r\n    var fs = [];\r\n\r\n    //var myJSON = JSON.stringify(this.ref1);\r\n\r\n    //console.log(`ref1: ${myJSON}`)\r\n\r\n    this.ref1\r\n      .getFiles()\r\n      .map(fileItem => fileItem.file)\r\n      .forEach(file => {\r\n        var name = file.name.split('.')[0]\r\n        var fileName = `${name}.jpg`\r\n        //  formData.append(fieldName, file, file.name);\r\n        //  console.log(file.name);\r\n        fs.push({ name: fileName, owner: this.props.user.username });\r\n      });\r\n\r\n    this.setState(\r\n      {\r\n        uploads: fs\r\n      },\r\n      this.handleSave\r\n    );\r\n  };\r\n\r\n  handleSave = async event => {\r\n    const url = \"/api/dashboard/post/edit\";\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(this.state)\r\n      });\r\n      if (response.status === 200) {\r\n        Router.push(\"/dashboard\");\r\n      } else {\r\n        console.log(\"Edit failed.\");\r\n        // https://github.com/developit/unfetch#caveats\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        \"You have an error in your code or there are Network issues.\",\r\n        error\r\n      );\r\n\r\n      const { response } = error;\r\n\r\n      this.setState({ error: response ? response.statusText : error.message });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const user = this.props.user;\r\n\r\n    const post = this.props.post || [];\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <form noValidate onSubmit={this.handleSubmit}>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} sm={4}>\r\n              Photo\r\n              <div\r\n                style={{\r\n                  // backgroundImage: `url('${user.avatar}')`,\r\n                  // backgroundSize: \"cover\",\r\n                  // backgroundPosition: \"center top\",\r\n                  // maxHeight: \"490px\",\r\n                  minHeight: \"310px\"\r\n                }}\r\n              >\r\n                {/* <UploadComponent user={user} /> */}\r\n                <FilePond\r\n                  onupdatefiles={this.onUpdateFiles.bind(this) }\r\n                  setRef={ref => (this.ref1 = ref)}\r\n                  files={this.props.post.files}\r\n                  handleUploadImages={this.handleUploadImages}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Ad Details\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <SimpleSelect\r\n                    options={this.state.maincategories}\r\n                    value={this.state.catindex}\r\n                    placeholder=\"Category\"\r\n                    name=\"category\"\r\n                    onChange={this._handleChangeCategory}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <SimpleSelect\r\n                    options={this.state.subcategories}\r\n                    value={this.state.keyindex}\r\n                    placeholder=\"Subcategory\"\r\n                    name=\"subcategory\"\r\n                    onChange={this._handleChangeSubCategory}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <SimpleSelect\r\n                    options={this.state.citydata}\r\n                    value={this.state.cities}\r\n                    placeholder=\"City\"\r\n                    name=\"city\"\r\n                    onChange={this._handleChangeCity}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    label=\"Title\"\r\n                    fullWidth\r\n                    autoComplete=\"title\"\r\n                    value={this.state.title}\r\n                    variant=\"outlined\"\r\n                    onChange={event =>\r\n                      this.setState({ title: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"price\"\r\n                    name=\"price\"\r\n                    label=\"Price\"\r\n                    fullWidth\r\n                    autoComplete=\"price\"\r\n                    value={this.state.price}\r\n                    variant=\"outlined\"\r\n                    onChange={event =>\r\n                      this.setState({ price: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    id=\"description\"\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                    multiline\r\n                    fullWidth\r\n                    rows=\"10\"\r\n                    value={this.state.description}\r\n                    variant=\"outlined\"\r\n                    onChange={event =>\r\n                      this.setState({ description: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    id=\"website\"\r\n                    name=\"website\"\r\n                    label=\"Website URL (inc https://)\"\r\n                    fullWidth\r\n                    autoComplete=\"Website\"\r\n                    value={this.state.website}\r\n                    variant=\"outlined\"\r\n                    onChange={event =>\r\n                      this.setState({ website: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Contact Details\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    label=\"First Name\"\r\n                    fullWidth\r\n                    autoComplete=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={event =>\r\n                      this.setState({ firstname: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    label=\"Last Name\"\r\n                    fullWidth\r\n                    autoComplete=\"lastname\"\r\n                    value={this.state.lastname}\r\n                    onChange={event =>\r\n                      this.setState({ lastname: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"age\"\r\n                    name=\"age\"\r\n                    label=\"Age\"\r\n                    fullWidth\r\n                    autoComplete=\"age\"\r\n                    value={this.state.age}\r\n                    onChange={event =>\r\n                      this.setState({ age: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    label=\"Phone Number\"\r\n                    fullWidth\r\n                    autoComplete=\"phone\"\r\n                    value={this.state.phone}\r\n                    onChange={event =>\r\n                      this.setState({ phone: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email Address\"\r\n                    fullWidth\r\n                    autoComplete=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={event =>\r\n                      this.setState({ email: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          \r\n\r\n          </Grid>\r\n          {this.state.error && (\r\n            <p className=\"error\">Error: {this.state.error}</p>\r\n          )}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PostForm);\r\n"]},"metadata":{},"sourceType":"module"}