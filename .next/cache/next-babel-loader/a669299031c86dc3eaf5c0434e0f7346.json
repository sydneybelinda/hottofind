{"ast":null,"code":"var _jsxFileName = \"C:\\\\src\\\\hottofindtest\\\\components\\\\statTable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: \"100%\"\n  }\n});\n\nfunction createData(name, stat) {\n  return {\n    name,\n    stat\n  };\n}\n\nexport default function SimpleTable(props) {\n  const classes = useStyles();\n  const rows = [createData('Name:', props.data.name), createData('Username:', props.data.username), createData('Email:', props.data.email), createData('Address 1:', props.data.address1), createData('Address 2:', props.data.address2), createData('City:', props.data.city), createData('State:', props.data.state), createData('Postcode:', props.data.postcode), createData('Country:', props.data.country), createData('Member Since:', props.data.createdAt)];\n  return __jsx(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, rows.map(row => __jsx(TableRow, {\n    key: row.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, row.name), __jsx(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, row.stat))))));\n}","map":{"version":3,"sources":["C:/src/hottofindtest/components/statTable.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","createData","name","stat","SimpleTable","props","classes","rows","data","username","email","address1","address2","city","state","postcode","country","createdAt","map","row"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AAC3BS,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AADoB,CAAD,CAA5B;;AAMA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AAC9B,SAAO;AAAED,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AACD;;AAID,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AAEA,QAAMS,IAAI,GAAG,CACXN,UAAU,CAAC,OAAD,EAAUI,KAAK,CAACG,IAAN,CAAWN,IAArB,CADC,EAEXD,UAAU,CAAC,WAAD,EAAcI,KAAK,CAACG,IAAN,CAAWC,QAAzB,CAFC,EAGXR,UAAU,CAAC,QAAD,EAAWI,KAAK,CAACG,IAAN,CAAWE,KAAtB,CAHC,EAIXT,UAAU,CAAC,YAAD,EAAeI,KAAK,CAACG,IAAN,CAAWG,QAA1B,CAJC,EAKXV,UAAU,CAAC,YAAD,EAAeI,KAAK,CAACG,IAAN,CAAWI,QAA1B,CALC,EAMXX,UAAU,CAAC,OAAD,EAAUI,KAAK,CAACG,IAAN,CAAWK,IAArB,CANC,EAOXZ,UAAU,CAAC,QAAD,EAAWI,KAAK,CAACG,IAAN,CAAWM,KAAtB,CAPC,EAQXb,UAAU,CAAC,WAAD,EAAcI,KAAK,CAACG,IAAN,CAAWO,QAAzB,CARC,EASXd,UAAU,CAAC,UAAD,EAAaI,KAAK,CAACG,IAAN,CAAWQ,OAAxB,CATC,EAUXf,UAAU,CAAC,eAAD,EAAkBI,KAAK,CAACG,IAAN,CAAWS,SAA7B,CAVC,CAAb;AAaA,SACE,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAEpB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAES,OAAO,CAACP,KAA1B;AAAiC,kBAAW,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,IAAI,CAACW,GAAL,CAASC,GAAG,IACX,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAG,CAACjB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,IAArB;AAA0B,IAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,GAAG,CAACjB,IADP,CADF,EAIE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BiB,GAAG,CAAChB,IAA9B,CAJF,CADD,CADH,CAVF,CADF,CADF;AA0BD","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: \"100%\",\r\n  },\r\n});\r\n\r\nfunction createData(name, stat) {\r\n  return { name, stat };\r\n}\r\n\r\n\r\n\r\nexport default function SimpleTable(props) {\r\n  const classes = useStyles();\r\n\r\n  const rows = [\r\n    createData('Name:', props.data.name),\r\n    createData('Username:', props.data.username),\r\n    createData('Email:', props.data.email),\r\n    createData('Address 1:', props.data.address1),\r\n    createData('Address 2:', props.data.address2),\r\n    createData('City:', props.data.city),\r\n    createData('State:', props.data.state),\r\n    createData('Postcode:', props.data.postcode),\r\n    createData('Country:', props.data.country),\r\n    createData('Member Since:', props.data.createdAt),\r\n  ];\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        {/* <TableHead>\r\n          <TableRow>\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead> */}\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.stat}</TableCell>\r\n\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}