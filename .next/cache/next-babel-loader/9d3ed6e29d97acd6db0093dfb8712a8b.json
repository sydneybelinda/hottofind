{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\src\\\\hottofindtest\\\\components\\\\dashboard\\\\postForm.js\";\nvar __jsx = React.createElement;\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport dynamic from \"next/dynamic\";\nimport Router from \"next/router\";\nimport React from \"react\";\nimport { COUNTRYCODE } from \"../../config\";\nimport SimpleSelect from \"./simpleSelect\"; // const UploadComponent = dynamic(() => import(\"./uploadcomponent\"), {\n//   ssr: false\n// });\n\nconst FilePond = dynamic(() => import(\"./filePond\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./filePond\")],\n    modules: [\"./filePond\"]\n  }\n});\n\nconst styles = theme => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass PostForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      var mc = [];\n      var mainCats = [];\n      this.props.categories.map(cat => {\n        if (mc.indexOf(cat.maincategory) === -1) {\n          mc.push(cat.maincategory);\n          mainCats.push({\n            label: cat.maincategory,\n            value: cat.catindex\n          });\n        }\n      });\n      this.setState({\n        maincategories: mainCats\n      });\n\n      if (this.state.keyindex) {\n        const filter = (tag, arr) => arr.filter(cat => cat.catindex === tag);\n\n        const filtered = filter(this.state.catindex, this.props.categories);\n        var subCats = [];\n        filtered.map(cat => {\n          subCats.push({\n            label: cat.subcategory,\n            value: cat.keyindex\n          });\n        });\n        this.setState({\n          subcategories: subCats\n        });\n      }\n\n      var cities = [];\n      this.props.citydata.map(ct => {\n        cities.push({\n          label: ct.city,\n          value: ct.city.toLowerCase()\n        });\n      });\n      this.setState({\n        citydata: cities\n      });\n    });\n\n    _defineProperty(this, \"_handleChangeCity\", e => {\n      this.setState({\n        cities: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"_handleChangeCategory\", e => {\n      this.setState({\n        keyindex: \"\"\n      });\n      this.setState({\n        catindex: e.target.value\n      });\n\n      const filter = (tag, arr) => arr.filter(cat => cat.catindex === tag);\n\n      const filtered = filter(e.target.value, this.props.categories);\n      var subCats = [];\n      filtered.map(cat => {\n        subCats.push({\n          label: cat.subcategory,\n          value: cat.keyindex\n        });\n      });\n      this.setState({\n        subcategories: subCats\n      });\n    });\n\n    _defineProperty(this, \"_handleChangeSubCategory\", e => {\n      this.setState({\n        keyindex: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        error: \"\"\n      });\n      var fs = [];\n      this.ref1.getFiles().map(fileItem => fileItem.file).forEach(file => {\n        var name = file.name.split(\".\")[0];\n        var fileName = `${name}.jpg`;\n        fs.push({\n          name: fileName,\n          owner: this.props.user.username\n        });\n      });\n      this.setState({\n        uploads: fs\n      }, this.handleSave);\n    });\n\n    _defineProperty(this, \"handleSave\", async event => {\n      const url = \"/api/dashboard/post/edit\";\n\n      try {\n        const response = await fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: _JSON$stringify(this.state)\n        });\n\n        if (response.status === 200) {\n          Router.push(\"/dashboard\");\n        } else {\n          console.log(\"Edit failed.\"); // https://github.com/developit/unfetch#caveats\n\n          let error = new Error(response.statusText);\n          error.response = response;\n          throw error;\n        }\n      } catch (error) {\n        console.error(\"You have an error in your code or there are Network issues.\", error);\n        const {\n          response\n        } = error;\n        this.setState({\n          error: response ? response.statusText : error.message\n        });\n      }\n    });\n\n    const user = this.props.user;\n    const post = this.props.post || [];\n    this.ref1 = React.createRef();\n    this.state = {\n      id: this.props.post ? this.props.post.id : undefined,\n      owner: post.owner || user.username,\n      firstname: post.firstname || \"\",\n      lastname: post.lastname || \"\",\n      country: post.country || COUNTRYCODE,\n      age: post.age || \"\",\n      email: post.email || user.email,\n      avatar: post.files || \"\",\n      catindex: post.catindex || \"\",\n      keyindex: post.keyindex || \"\",\n      cities: post.cities || \"\",\n      location: post.location || \"\",\n      title: post.title || \"\",\n      phone: post.phone || \"\",\n      price: post.price || \"\",\n      description: post.description || \"\",\n      website: post.website || \"\",\n      rawcities: this.props.citydata,\n      citydata: [],\n      countries: [],\n      currencies: [],\n      maincategories: [],\n      subcategories: [],\n      error: \"\",\n      files: post ? this.props.post.files : [],\n      newfiles: []\n    };\n  }\n\n  onUpdateFiles(fileItems) {}\n\n  render() {\n    const user = this.props.user;\n    const post = this.props.post || [];\n    const {\n      classes\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Photo\", __jsx(\"div\", {\n      style: {\n        // backgroundImage: `url('${user.avatar}')`,\n        // backgroundSize: \"cover\",\n        // backgroundPosition: \"center top\",\n        // maxHeight: \"490px\",\n        minHeight: \"310px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, __jsx(FilePond, {\n      onupdatefiles: this.onUpdateFiles.bind(this),\n      setRef: ref => this.ref1 = ref,\n      files: this.props.post.files,\n      handleUploadImages: this.handleUploadImages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Ad Details\")), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, __jsx(SimpleSelect, {\n      options: this.state.maincategories,\n      value: this.state.catindex,\n      placeholder: \"Category\",\n      name: \"category\",\n      onChange: this._handleChangeCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, __jsx(SimpleSelect, {\n      options: this.state.subcategories,\n      value: this.state.keyindex,\n      placeholder: \"Subcategory\",\n      name: \"subcategory\",\n      onChange: this._handleChangeSubCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, __jsx(SimpleSelect, {\n      options: this.state.citydata,\n      value: this.state.cities,\n      placeholder: \"City\",\n      name: \"city\",\n      onChange: this._handleChangeCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, __jsx(TextField, {\n      required: true,\n      id: \"title\",\n      name: \"title\",\n      label: \"Title\",\n      fullWidth: true,\n      autoComplete: \"title\",\n      value: this.state.title,\n      variant: \"outlined\",\n      onChange: event => this.setState({\n        title: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"price\",\n      name: \"price\",\n      label: \"Price\",\n      fullWidth: true,\n      autoComplete: \"price\",\n      value: this.state.price,\n      variant: \"outlined\",\n      onChange: event => this.setState({\n        price: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"description\",\n      label: \"Description\",\n      name: \"description\",\n      multiline: true,\n      fullWidth: true,\n      rows: \"10\",\n      value: this.state.description,\n      variant: \"outlined\",\n      onChange: event => this.setState({\n        description: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"website\",\n      name: \"website\",\n      label: \"Website URL (inc https://)\",\n      fullWidth: true,\n      autoComplete: \"Website\",\n      value: this.state.website,\n      variant: \"outlined\",\n      onChange: event => this.setState({\n        website: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Contact Details\")), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, __jsx(TextField, {\n      required: true,\n      id: \"firstname\",\n      name: \"firstname\",\n      label: \"First Name\",\n      fullWidth: true,\n      autoComplete: \"firstname\",\n      value: this.state.firstname,\n      onChange: event => this.setState({\n        firstname: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, __jsx(TextField, {\n      required: true,\n      id: \"lastname\",\n      name: \"lastname\",\n      label: \"Last Name\",\n      fullWidth: true,\n      autoComplete: \"lastname\",\n      value: this.state.lastname,\n      onChange: event => this.setState({\n        lastname: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, __jsx(TextField, {\n      required: true,\n      id: \"age\",\n      name: \"age\",\n      label: \"Age\",\n      fullWidth: true,\n      autoComplete: \"age\",\n      value: this.state.age,\n      onChange: event => this.setState({\n        age: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, __jsx(TextField, {\n      required: true,\n      id: \"phone\",\n      name: \"phone\",\n      label: \"Phone Number\",\n      fullWidth: true,\n      autoComplete: \"phone\",\n      value: this.state.phone,\n      onChange: event => this.setState({\n        phone: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, __jsx(TextField, {\n      required: true,\n      id: \"email\",\n      name: \"email\",\n      label: \"Email Address\",\n      fullWidth: true,\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, __jsx(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"Submit\"))))), this.state.error && __jsx(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, \"Error: \", this.state.error)));\n  }\n\n}\n\nexport default withStyles(styles)(PostForm);","map":{"version":3,"sources":["C:/src/hottofindtest/components/dashboard/postForm.js"],"names":["Button","Grid","withStyles","TextField","Typography","dynamic","Router","React","COUNTRYCODE","SimpleSelect","FilePond","ssr","styles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","PostForm","Component","constructor","props","mc","mainCats","categories","map","cat","indexOf","maincategory","push","label","value","catindex","setState","maincategories","state","keyindex","filter","tag","arr","filtered","subCats","subcategory","subcategories","cities","citydata","ct","city","toLowerCase","e","target","event","preventDefault","error","fs","ref1","getFiles","fileItem","file","forEach","name","split","fileName","owner","user","username","uploads","handleSave","url","response","fetch","method","headers","status","console","log","Error","statusText","message","post","createRef","id","undefined","firstname","lastname","country","age","email","files","location","title","phone","price","description","website","rawcities","countries","currencies","newfiles","onUpdateFiles","fileItems","render","classes","handleSubmit","minHeight","bind","ref","handleUploadImages","_handleChangeCategory","_handleChangeSubCategory","_handleChangeCity"],"mappings":"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","sourcesContent":["import Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport dynamic from \"next/dynamic\";\r\nimport Router from \"next/router\";\r\nimport React from \"react\";\r\nimport { COUNTRYCODE } from \"../../config\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\n\r\n\r\n// const UploadComponent = dynamic(() => import(\"./uploadcomponent\"), {\r\n//   ssr: false\r\n// });\r\n\r\nconst FilePond = dynamic(() => import(\"./filePond\"), {\r\n  ssr: false\r\n});\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n});\r\n\r\nclass PostForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const user = this.props.user;\r\n\r\n    const post = this.props.post || [];\r\n\r\n    this.ref1 = React.createRef();\r\n\r\n    this.state = {\r\n      id: this.props.post ? this.props.post.id : undefined,\r\n      owner: post.owner || user.username,\r\n      firstname: post.firstname || \"\",\r\n      lastname: post.lastname || \"\",\r\n      country: post.country || COUNTRYCODE,\r\n      age: post.age || \"\",\r\n      email: post.email || user.email,\r\n      avatar: post.files || \"\",\r\n      catindex: post.catindex || \"\",\r\n      keyindex: post.keyindex || \"\",\r\n      cities: post.cities || \"\",\r\n      location: post.location || \"\",\r\n      title: post.title || \"\",\r\n      phone: post.phone || \"\",\r\n      price: post.price || \"\",\r\n      description: post.description || \"\",\r\n      website: post.website || \"\",\r\n      rawcities: this.props.citydata,\r\n      citydata: [],\r\n      countries: [],\r\n      currencies: [],\r\n      maincategories: [],\r\n      subcategories: [],\r\n      error: \"\",\r\n      files: post ? this.props.post.files : [],\r\n      newfiles: []\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    var mc = [];\r\n    var mainCats = [];\r\n    this.props.categories.map(cat => {\r\n      if (mc.indexOf(cat.maincategory) === -1) {\r\n        mc.push(cat.maincategory);\r\n        mainCats.push({ label: cat.maincategory, value: cat.catindex });\r\n      }\r\n    });\r\n    this.setState({ maincategories: mainCats });\r\n\r\n    if (this.state.keyindex) {\r\n      const filter = (tag, arr) => arr.filter(cat => cat.catindex === tag);\r\n      const filtered = filter(this.state.catindex, this.props.categories);\r\n\r\n      var subCats = [];\r\n      filtered.map(cat => {\r\n        subCats.push({ label: cat.subcategory, value: cat.keyindex });\r\n      });\r\n\r\n      this.setState({ subcategories: subCats });\r\n    }\r\n\r\n    var cities = [];\r\n    this.props.citydata.map(ct => {\r\n      cities.push({ label: ct.city, value: ct.city.toLowerCase() });\r\n    });\r\n\r\n    this.setState({ citydata: cities });\r\n  };\r\n\r\n  _handleChangeCity = e => {\r\n    this.setState({ cities: e.target.value });\r\n  };\r\n\r\n  _handleChangeCategory = e => {\r\n    this.setState({ keyindex: \"\" });\r\n    this.setState({ catindex: e.target.value });\r\n\r\n    const filter = (tag, arr) => arr.filter(cat => cat.catindex === tag);\r\n    const filtered = filter(e.target.value, this.props.categories);\r\n\r\n    var subCats = [];\r\n    filtered.map(cat => {\r\n      subCats.push({ label: cat.subcategory, value: cat.keyindex });\r\n    });\r\n\r\n    this.setState({ subcategories: subCats });\r\n  };\r\n\r\n  _handleChangeSubCategory = e => {\r\n    this.setState({ keyindex: e.target.value });\r\n  };\r\n\r\n  onUpdateFiles(fileItems) {}\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ error: \"\" });\r\n\r\n    var fs = [];\r\n\r\n    this.ref1\r\n      .getFiles()\r\n      .map(fileItem => fileItem.file)\r\n      .forEach(file => {\r\n        var name = file.name.split(\".\")[0];\r\n        var fileName = `${name}.jpg`;\r\n        fs.push({ name: fileName, owner: this.props.user.username });\r\n      });\r\n\r\n    this.setState(\r\n      {\r\n        uploads: fs\r\n      },\r\n      this.handleSave\r\n    );\r\n  };\r\n\r\n  handleSave = async event => {\r\n    const url = \"/api/dashboard/post/edit\";\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"POST\",\r\n\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(this.state)\r\n      });\r\n      if (response.status === 200) {\r\n        Router.push(\"/dashboard\");\r\n      } else {\r\n        console.log(\"Edit failed.\");\r\n        // https://github.com/developit/unfetch#caveats\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      console.error(\r\n        \"You have an error in your code or there are Network issues.\",\r\n        error\r\n      );\r\n\r\n      const { response } = error;\r\n\r\n      this.setState({ error: response ? response.statusText : error.message });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const user = this.props.user;\r\n\r\n    const post = this.props.post || [];\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <form noValidate onSubmit={this.handleSubmit}>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12} sm={4}>\r\n              Photo\r\n              <div\r\n                style={{\r\n                  // backgroundImage: `url('${user.avatar}')`,\r\n                  // backgroundSize: \"cover\",\r\n                  // backgroundPosition: \"center top\",\r\n                  // maxHeight: \"490px\",\r\n                  minHeight: \"310px\"\r\n                }}\r\n              >\r\n                {/* <UploadComponent user={user} /> */}\r\n                <FilePond\r\n                  onupdatefiles={this.onUpdateFiles.bind(this)}\r\n                  setRef={ref => (this.ref1 = ref)}\r\n                  files={this.props.post.files}\r\n                  handleUploadImages={this.handleUploadImages}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Ad Details\r\n                  </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <SimpleSelect\r\n                    options={this.state.maincategories}\r\n                    value={this.state.catindex}\r\n                    placeholder=\"Category\"\r\n                    name=\"category\"\r\n                    onChange={this._handleChangeCategory}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <SimpleSelect\r\n                    options={this.state.subcategories}\r\n                    value={this.state.keyindex}\r\n                    placeholder=\"Subcategory\"\r\n                    name=\"subcategory\"\r\n                    onChange={this._handleChangeSubCategory}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <SimpleSelect\r\n                    options={this.state.citydata}\r\n                    value={this.state.cities}\r\n                    placeholder=\"City\"\r\n                    name=\"city\"\r\n                    onChange={this._handleChangeCity}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    label=\"Title\"\r\n                    fullWidth\r\n                    autoComplete=\"title\"\r\n                    value={this.state.title}\r\n                    variant=\"outlined\"\r\n                    onChange={event =>\r\n                      this.setState({ title: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"price\"\r\n                    name=\"price\"\r\n                    label=\"Price\"\r\n                    fullWidth\r\n                    autoComplete=\"price\"\r\n                    value={this.state.price}\r\n                    variant=\"outlined\"\r\n                    onChange={event =>\r\n                      this.setState({ price: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    id=\"description\"\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                    multiline\r\n                    fullWidth\r\n                    rows=\"10\"\r\n                    value={this.state.description}\r\n                    variant=\"outlined\"\r\n                    onChange={event =>\r\n                      this.setState({ description: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    id=\"website\"\r\n                    name=\"website\"\r\n                    label=\"Website URL (inc https://)\"\r\n                    fullWidth\r\n                    autoComplete=\"Website\"\r\n                    value={this.state.website}\r\n                    variant=\"outlined\"\r\n                    onChange={event =>\r\n                      this.setState({ website: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Contact Details\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    label=\"First Name\"\r\n                    fullWidth\r\n                    autoComplete=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={event =>\r\n                      this.setState({ firstname: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    label=\"Last Name\"\r\n                    fullWidth\r\n                    autoComplete=\"lastname\"\r\n                    value={this.state.lastname}\r\n                    onChange={event =>\r\n                      this.setState({ lastname: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"age\"\r\n                    name=\"age\"\r\n                    label=\"Age\"\r\n                    fullWidth\r\n                    autoComplete=\"age\"\r\n                    value={this.state.age}\r\n                    onChange={event =>\r\n                      this.setState({ age: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    label=\"Phone Number\"\r\n                    fullWidth\r\n                    autoComplete=\"phone\"\r\n                    value={this.state.phone}\r\n                    onChange={event =>\r\n                      this.setState({ phone: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    required\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email Address\"\r\n                    fullWidth\r\n                    autoComplete=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={event =>\r\n                      this.setState({ email: event.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {this.state.error && (\r\n            <p className=\"error\">Error: {this.state.error}</p>\r\n          )}\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PostForm);\r\n"]},"metadata":{},"sourceType":"module"}