{"ast":null,"code":"import jwt from \"jsonwebtoken\";\nimport { PRIVATEKEY } from \"../../config\";\nimport { User } from \"../../models\";\nexport default (async (req, res) => {\n  if (!(\"authorization\" in req.headers)) {//    return res.status(401).send('Authorization header missing')\n  }\n\n  const auth = await req.headers.authorization;\n  const decoded = jwt.verify(auth, PRIVATEKEY);\n\n  try {\n    const getUser = async obj => {\n      return await User.findOne({\n        where: obj\n      });\n    };\n\n    let data = await getUser({\n      id: decoded.id\n    });\n\n    if (data) {\n      return res.status(200).json({\n        data\n      });\n    } else {\n      const error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  } catch (error) {\n    const {\n      response\n    } = error;\n    return response ? res.status(response.status).json({\n      message: response.statusText\n    }) : res.status(400).json({\n      message: error.message\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}