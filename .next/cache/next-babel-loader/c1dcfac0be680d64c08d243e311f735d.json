{"ast":null,"code":"import { Post, File } from \"../../../../models\";\n\nasync function addFile(id, name, owner) {\n  const addFile = await File.create({\n    postId: id,\n    name: name,\n    owner: owner\n  });\n  return addFile;\n}\n\nexport default (async (req, res) => {\n  if (req.method === \"POST\") {\n    const data = req.body;\n    const files = req.body.uploads;\n    console.log(files);\n\n    if (data.id) {\n      try {\n        const post = await Post.findOne({\n          where: {\n            id: data.id,\n            owner: data.owner\n          }\n        });\n\n        if (!post) {\n          return res.status(404).send({\n            message: \"404 on post update\"\n          });\n        }\n\n        const updatedPost = await post.update({\n          title: data.title,\n          description: data.description,\n          //  userId: req.user.id,\n          catindex: data.catindex,\n          keyindex: data.keyindex,\n          country: data.country,\n          cities: data.city,\n          currency: data.currency,\n          price: data.price,\n          location: data.location,\n          owner: data.owner,\n          website: data.website,\n          twitter: data.twitter,\n          facebook: data.facebook,\n          status: data.status,\n          email: data.email,\n          phone: data.phone,\n          firstname: data.firstname,\n          lastname: data.lastname,\n          files: files\n        }, {\n          include: [{\n            model: File,\n            as: \"files\"\n          }]\n        });\n        files.map(async f => {\n          console.log(f);\n          const file = await File.findOne({\n            where: {\n              name: f.name\n            }\n          });\n\n          if (!file) {\n            addFile(post.id, f.name, f.owner);\n          }\n        });\n        return res.status(200).send(updatedPost);\n      } catch (err) {\n        console.log(err);\n        return res.status(500).send(err);\n      }\n    } else {\n      var resultId = \"\";\n\n      try {\n        const post = await Post.create({\n          title: data.title,\n          description: data.description,\n          catindex: data.catindex,\n          keyindex: data.keyindex,\n          country: data.country,\n          age: data.age,\n          cities: data.cities,\n          //   currency: data.currency.value,\n          price: data.price,\n          location: data.location,\n          owner: data.owner,\n          website: data.website,\n          twitter: data.twitter,\n          facebook: data.facebook,\n          status: data.status,\n          email: data.email,\n          phone: data.phone,\n          firstname: data.firstname,\n          lastname: data.lastname,\n          status: \"Active\",\n          files: files\n        }, {\n          include: [{\n            model: File,\n            as: \"files\"\n          }]\n        });\n        return res.status(200).send(post);\n      } catch (err) {\n        console.log(err);\n        return res.status(500).send(err);\n      }\n    }\n  } else {\n    res.status(400).json({\n      message: \"Not Authorised\"\n    });\n  }\n});","map":{"version":3,"sources":["C:/src/hottofindtest/pages/api/dashboard/post/edit.js"],"names":["Post","File","addFile","id","name","owner","create","postId","req","res","method","data","body","files","uploads","console","log","post","findOne","where","status","send","message","updatedPost","update","title","description","catindex","keyindex","country","cities","city","currency","price","location","website","twitter","facebook","email","phone","firstname","lastname","include","model","as","map","f","file","err","resultId","age","json"],"mappings":"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","sourcesContent":["import { Post, File } from \"../../../../models\";\r\n\r\n\r\nasync function addFile(id, name, owner){\r\n  const addFile = await File.create(\r\n    {\r\n      postId: id,\r\n      name: name,\r\n      owner: owner\r\n    },\r\n  );  \r\n\r\n  return addFile\r\n}\r\n\r\nexport default async (req, res) => {\r\n  if (req.method === \"POST\") {\r\n    const data = req.body;\r\n\r\n    const files = req.body.uploads;\r\n\r\n    console.log(files)\r\n\r\n    if (data.id) {\r\n      try {\r\n        const post = await Post.findOne({\r\n          where: {\r\n            id: data.id,\r\n            owner: data.owner\r\n          }\r\n        });\r\n\r\n        if (!post) {\r\n          return res.status(404).send({\r\n            message: \"404 on post update\"\r\n          });\r\n        }\r\n\r\n        \r\n\r\n        const updatedPost = await post.update(\r\n          {\r\n            title: data.title,\r\n            description: data.description,\r\n          //  userId: req.user.id,\r\n            catindex: data.catindex,\r\n            keyindex: data.keyindex,\r\n            country: data.country,\r\n            cities: data.city,\r\n            currency: data.currency,\r\n            price: data.price,\r\n            location: data.location,\r\n            owner: data.owner,\r\n            website: data.website,\r\n            twitter: data.twitter,\r\n            facebook: data.facebook,\r\n            status: data.status,\r\n            email: data.email,\r\n            phone: data.phone,\r\n            firstname: data.firstname,\r\n            lastname: data.lastname,\r\n            files: files\r\n          },\r\n          {\r\n            include: [{ model: File, as: \"files\" }]\r\n          }\r\n        );\r\n\r\n        files.map(async (f) => {\r\n            console.log(f)\r\n          const file = await File.findOne({\r\n            where: {\r\n              name: f.name\r\n            }\r\n          });\r\n  \r\n          if (!file) {\r\n\r\n\r\n          addFile(post.id,f.name,f.owner)\r\n        }})\r\n        \r\n  \r\n\r\n        return res.status(200).send(updatedPost);\r\n      } catch (err) {\r\n        console.log(err);\r\n        return res.status(500).send(err);\r\n      }\r\n    } else {\r\n      var resultId = \"\";\r\n\r\n      try {\r\n        const post = await Post.create(\r\n          {\r\n            title: data.title,\r\n            description: data.description,\r\n            catindex: data.catindex,\r\n            keyindex: data.keyindex,\r\n            country: data.country,\r\n            age: data.age,\r\n            cities: data.cities,\r\n            //   currency: data.currency.value,\r\n            price: data.price,\r\n            location: data.location,\r\n            owner: data.owner,\r\n            website: data.website,\r\n            twitter: data.twitter,\r\n            facebook: data.facebook,\r\n            status: data.status,\r\n            email: data.email,\r\n            phone: data.phone,\r\n            firstname: data.firstname,\r\n            lastname: data.lastname,\r\n            status: \"Active\",\r\n           files: files,\r\n          },\r\n          {\r\n            include: [{ model: File, as: \"files\" }]\r\n          }\r\n        );\r\n\r\n        return res.status(200).send(post);\r\n      } catch (err) {\r\n        console.log(err);\r\n        return res.status(500).send(err);\r\n      }\r\n    }\r\n  } else {\r\n    res.status(400).json({ message: \"Not Authorised\" });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}