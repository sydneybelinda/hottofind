{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\src\\\\hottofindtest\\\\components\\\\dropdown.js\";\nvar __jsx = React.createElement;\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"next/link\";\nimport React from \"react\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"inline-block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    cursor: \"pointer\"\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  },\n  mItem: {\n    lineHeight: \"10px\"\n  },\n  lnk: {\n    fontFamily: \"'Montserrat', sans-serif\",\n    textDecoration: \"none\",\n    textTransform: \"uppercase\",\n    padding: \"0 10px\",\n    fontSize: \"12px\",\n    fontWeight: \"600\",\n    display: \"block\",\n    lineHeight: \"30px\",\n    height: \"30px\",\n    letterSpacing: \".08em\",\n    color: \"white\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: \"7px\"\n    },\n    textOverflow: \"ellipsis\",\n    \"&:hover\": {\n      color: \"#009b9b\"\n    }\n  },\n  lnkb: {\n    fontFamily: \"'Montserrat', sans-serif\",\n    textDecoration: \"none\",\n    padding: \"0 10px\",\n    fontSize: \"12px\",\n    fontWeight: \"600\",\n    display: \"block\",\n    lineHeight: \"30px\",\n    height: \"30px\",\n    letterSpacing: \".12em\",\n    color: \"black\",\n    \"&:hover\": {\n      color: \"#009b9b\"\n    }\n  },\n  itm: {\n    paddingTop: \"0\",\n    paddingBottom: \"0\"\n  }\n}));\nexport default function MenuListComposition(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.mItem,\n    onMouseEnter: handleToggle,\n    onMouseLeave: handleToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: classes.lnk,\n    ref: anchorRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, props.name), __jsx(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, ({\n    TransitionProps,\n    placement\n  }) => __jsx(Grow, _extends({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), __jsx(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(ClickAwayListener, {\n    onClickAway: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(MenuList, {\n    autoFocusItem: open,\n    id: \"menu-list-grow\",\n    onKeyDown: handleListKeyDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(MenuItem, {\n    onClick: handleClose,\n    className: classes.itm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `/posts/[catindex]`,\n    as: `/posts/${props.url}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: classes.lnkb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"ALL \", props.name.toUpperCase()))), props.categories ? props.categories.map((prop, key) => {\n    if (prop.catindex == props.url) {\n      return __jsx(MenuItem, {\n        onClick: handleClose,\n        key: prop.catindex + \"-\" + prop.keyindex,\n        className: classes.itm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: `/posts/[catindex]/[keyindex]`,\n        as: `/posts/${props.url}/${prop.keyindex}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: classes.lnkb,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, prop.subcategory)));\n    }\n  }) : \"\")))))));\n}","map":{"version":3,"sources":["C:/src/hottofindtest/components/dropdown.js"],"names":["ClickAwayListener","Grow","MenuItem","MenuList","Paper","Popper","makeStyles","Link","React","useStyles","theme","root","display","marginLeft","marginRight","cursor","paper","spacing","mItem","lineHeight","lnk","fontFamily","textDecoration","textTransform","padding","fontSize","fontWeight","height","letterSpacing","color","overflow","whiteSpace","breakpoints","down","textOverflow","lnkb","itm","paddingTop","paddingBottom","MenuListComposition","props","classes","open","setOpen","useState","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","useEffect","focus","name","undefined","TransitionProps","placement","transformOrigin","url","toUpperCase","categories","map","prop","catindex","keyindex","subcategory"],"mappings":"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","sourcesContent":["import ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Link from \"next/link\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"inline-block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    cursor: \"pointer\"\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  mItem: {\r\n    lineHeight: \"10px\"\r\n  },\r\n  lnk: {\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    padding: \"0 10px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"600\",\r\n    display: \"block\",\r\n    lineHeight: \"30px\",\r\n    height: \"30px\",\r\n    letterSpacing: \".08em\",\r\n    color: \"white\",\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"7px\"\r\n    },\r\n    textOverflow: \"ellipsis\",\r\n    \"&:hover\": {\r\n      color: \"#009b9b\"\r\n    }\r\n  },\r\n  lnkb: {\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    textDecoration: \"none\",\r\n    padding: \"0 10px\",\r\n    fontSize: \"12px\",\r\n    fontWeight: \"600\",\r\n    display: \"block\",\r\n    lineHeight: \"30px\",\r\n    height: \"30px\",\r\n    letterSpacing: \".12em\",\r\n    color: \"black\",\r\n    \"&:hover\": {\r\n      color: \"#009b9b\"\r\n    }\r\n  },\r\n  itm: {\r\n    paddingTop: \"0\",\r\n    paddingBottom: \"0\"\r\n  }\r\n}));\r\n\r\nexport default function MenuListComposition(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen(prevOpen => !prevOpen);\r\n  };\r\n\r\n  const handleClose = event => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        className={classes.mItem}\r\n        onMouseEnter={handleToggle}\r\n        onMouseLeave={handleToggle}\r\n      >\r\n        {/* <Button\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        > */}\r\n        <a className={classes.lnk} ref={anchorRef}>\r\n          {props.name}\r\n        </a>\r\n        {/* </Button> */}\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\"\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList\r\n                    autoFocusItem={open}\r\n                    id=\"menu-list-grow\"\r\n                    onKeyDown={handleListKeyDown}\r\n                  >\r\n                    <MenuItem\r\n                      onClick={handleClose}\r\n                      className={classes.itm}\r\n                    >\r\n                      <Link\r\n                        href={`/posts/[catindex]`}\r\n                        as={`/posts/${props.url}`}\r\n                      >\r\n                        <a className={classes.lnkb}>ALL {props.name.toUpperCase()}</a>\r\n                      </Link>\r\n                    </MenuItem>\r\n                    {props.categories\r\n                      ? props.categories.map((prop, key) => {\r\n                          if (prop.catindex == props.url) {\r\n                            return (\r\n                              <MenuItem\r\n                                onClick={handleClose}\r\n                                key={prop.catindex + \"-\" + prop.keyindex}\r\n                                className={classes.itm}\r\n                              >\r\n                                <Link\r\n                                  href={`/posts/[catindex]/[keyindex]`}\r\n                                  as={`/posts/${props.url}/${prop.keyindex}`}\r\n                                >\r\n                                  <a className={classes.lnkb}>\r\n                                    {prop.subcategory}\r\n                                  </a>\r\n                                </Link>\r\n                              </MenuItem>\r\n                            );\r\n                          }\r\n                        })\r\n                      : \"\"}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}