{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport Avatar from '@material-ui/core/Avatar';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport { deepPurple } from '@material-ui/core/colors';\nimport Divider from '@material-ui/core/Divider'; // import Context from \"../../context\";\n\nimport Link from \"@material-ui/core/Link\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport React from \"react\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      backgroundColor: theme.palette.background.paper\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n      fontSize: \"15px\",\n      letterSpacing: \".12em\",\n      color: \"#0b0b0b\",\n      fontFamily: \"'Montserrat', sans-serif !important\"\n    },\n    cats: {\n      fontFamily: \"'Montserrat', sans-serif\",\n      flex: \"1 1 auto\",\n      color: \"#000\",\n      fontSize: \"16px\",\n      textTransform: 'uppercase',\n      paddingTop: '6px !important',\n      paddingBottom: '6px !important'\n    },\n    lcats: {\n      fontFamily: \"'Montserrat', sans-serif\",\n      flex: \"1 1 auto\",\n      color: \"#000\",\n      fontSize: \"16px\",\n      textTransform: 'uppercase',\n      paddingTop: '6px !important',\n      paddingBottom: '6px !important',\n      display: 'inline-block',\n      width: '50%'\n    },\n    rcats: {\n      fontFamily: \"'Montserrat', sans-serif\",\n      flex: \"1 1 auto\",\n      color: \"#000\",\n      fontSize: \"16px\",\n      textTransform: 'uppercase',\n      paddingTop: '6px !important',\n      paddingBottom: '6px !important',\n      display: 'inline-block',\n      width: '50%',\n      textAlign: 'right'\n    },\n    fright: {\n      \"float\": \"right\"\n    },\n    subcat: {\n      fontFamily: \"'Montserrat', sans-serif\",\n      fontSize: \"15px\",\n      letterSpacing: \".12em\",\n      color: \"#717171\"\n    },\n    exicon: {\n      color: \"#009b9b\"\n    },\n    purpleAvatar: {\n      margin: 10,\n      color: '#fff',\n      backgroundColor: deepPurple[500]\n    } // login: {\n    //   float: \"right\"\n    // },\n    // register: {\n    //   float: \"right\"\n    // }\n\n  };\n});\n\nfunction NestedList(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      accountOpen = _React$useState2[0],\n      setAccountOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      employmentOpen = _React$useState4[0],\n      setEmploymentOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      localOpen = _React$useState6[0],\n      setLocalOpen = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      communityOpen = _React$useState8[0],\n      setCommunityOpen = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      tradeOpen = _React$useState10[0],\n      setTradeOpen = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      rentingOpen = _React$useState12[0],\n      setRentingOpen = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      sellingOpen = _React$useState14[0],\n      setSellingOpen = _React$useState14[1];\n\n  var _React$useState15 = React.useState(false),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      servicesOpen = _React$useState16[0],\n      setServicesOpen = _React$useState16[1];\n\n  var _React$useState17 = React.useState(false),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      automotiveOpen = _React$useState18[0],\n      setAutomotiveOpen = _React$useState18[1];\n\n  var _React$useState19 = React.useState(false),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      adultOpen = _React$useState20[0],\n      setAdultOpen = _React$useState20[1]; // const cats = categories()\n  // const context = React.useContext(Context);\n\n\n  var categories = props.categories;\n\n  var handleAccountClick = function handleAccountClick() {\n    setAccountOpen(!accountOpen);\n  };\n\n  var handleEmploymentClick = function handleEmploymentClick() {\n    setEmploymentOpen(!employmentOpen);\n  };\n\n  var handleLocalClick = function handleLocalClick() {\n    setLocalOpen(!localOpen);\n  };\n\n  var handleCommunityClick = function handleCommunityClick() {\n    setCommunityOpen(!communityOpen);\n  };\n\n  var handleTradeClick = function handleTradeClick() {\n    setTradeOpen(!tradeOpen);\n  };\n\n  var handleRentingClick = function handleRentingClick() {\n    setRentingOpen(!rentingOpen);\n  };\n\n  var handleSellingClick = function handleSellingClick() {\n    setSellingOpen(!sellingOpen);\n  };\n\n  var handleServicesClick = function handleServicesClick() {\n    setServicesOpen(!servicesOpen);\n  };\n\n  var handleAutomotiveClick = function handleAutomotiveClick() {\n    setAutomotiveOpen(!automotiveOpen);\n  };\n\n  var handleAdultClick = function handleAdultClick() {\n    setAdultOpen(!adultOpen);\n  }; // console.log(props)\n\n\n  return __jsx(List, {\n    component: \"nav\",\n    \"aria-labelledby\": \"nested-list-subheader\",\n    subheader: __jsx(ListSubheader, {\n      component: \"div\",\n      id: \"nested-list-subheader\"\n    }, \"Menu\"),\n    className: classes.root\n  }, props.user ? __jsx(React.Fragment, null, __jsx(ListItem, {\n    button: true,\n    onClick: handleAccountClick,\n    className: classes.cats\n  }, __jsx(\"div\", {\n    className: classes.cats\n  }, __jsx(Avatar, {\n    className: classes.purpleAvatar\n  }, \"OP\")), accountOpen ? __jsx(ExpandLess, {\n    className: classes.exicon\n  }) : __jsx(ExpandMore, {\n    className: classes.exicon\n  })), __jsx(Collapse, {\n    \"in\": accountOpen,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, __jsx(\"div\", {\n    className: classes.menuItem\n  }, __jsx(Link, {\n    href: \"/dashboard\"\n  }, __jsx(ListItem, {\n    button: true,\n    className: classes.nested\n  }, __jsx(\"div\", {\n    className: classes.subcat\n  }, \"Dashboard\")))), __jsx(\"div\", {\n    className: classes.menuItem\n  }, __jsx(Link, {\n    href: \"/logout\"\n  }, __jsx(ListItem, {\n    button: true,\n    className: classes.nested\n  }, __jsx(\"div\", {\n    className: classes.subcat\n  }, \"Logout\"))))))) : __jsx(React.Fragment, null, __jsx(ListItem, {\n    button: true,\n    className: classes.lcats\n  }, __jsx(Link, {\n    href: \"/login\"\n  }, __jsx(\"div\", null, \"Login\"))), __jsx(ListItem, {\n    button: true,\n    className: classes.rcats\n  }, __jsx(Link, {\n    href: \"/register\"\n  }, __jsx(\"div\", null, \"Register\")))), __jsx(Divider, null), __jsx(ListItem, {\n    button: true,\n    onClick: handleEmploymentClick,\n    className: classes.cats\n  }, __jsx(\"div\", {\n    className: classes.cats\n  }, \"Employment\"), employmentOpen ? __jsx(ExpandLess, {\n    className: classes.exicon\n  }) : __jsx(ExpandMore, {\n    className: classes.exicon\n  })), __jsx(Collapse, {\n    \"in\": employmentOpen,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, categories ? categories.map(function (prop, key) {\n    if (prop.catindex == \"employment\") {\n      return __jsx(\"div\", {\n        className: classes.menuItem,\n        key: prop.catindex + \"-\" + prop.keyindex\n      }, __jsx(Link, {\n        href: \"/posts/employment/\" + prop.keyindex\n      }, \" \", __jsx(ListItem, {\n        button: true,\n        className: classes.nested\n      }, __jsx(\"div\", {\n        className: classes.subcat\n      }, prop.subcategory))));\n    }\n  }) : \"\")), __jsx(ListItem, {\n    button: true,\n    onClick: handleLocalClick,\n    className: classes.cats\n  }, __jsx(\"div\", {\n    className: classes.cats\n  }, \"Local\"), localOpen ? __jsx(ExpandLess, {\n    className: classes.exicon\n  }) : __jsx(ExpandMore, {\n    className: classes.exicon\n  })), __jsx(Collapse, {\n    \"in\": localOpen,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, categories ? categories.map(function (prop, key) {\n    if (prop.catindex == \"local-places\") {\n      return __jsx(\"div\", {\n        className: classes.menuItem,\n        key: prop.catindex + \"-\" + prop.keyindex\n      }, __jsx(Link, {\n        href: \"/posts/local-places/\" + prop.keyindex\n      }, \" \", __jsx(ListItem, {\n        button: true,\n        className: classes.nested\n      }, __jsx(\"div\", {\n        className: classes.subcat\n      }, prop.subcategory))));\n    }\n  }) : \"\")), __jsx(ListItem, {\n    button: true,\n    onClick: handleCommunityClick,\n    className: classes.cats\n  }, __jsx(\"div\", {\n    className: classes.cats\n  }, \"Community\"), communityOpen ? __jsx(ExpandLess, {\n    className: classes.exicon\n  }) : __jsx(ExpandMore, {\n    className: classes.exicon\n  })), __jsx(Collapse, {\n    \"in\": communityOpen,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, categories ? categories.map(function (prop, key) {\n    if (prop.catindex == \"community\") {\n      return __jsx(\"div\", {\n        className: classes.menuItem,\n        key: prop.catindex + \"-\" + prop.keyindex\n      }, __jsx(Link, {\n        href: \"/posts/community/\" + prop.keyindex\n      }, \" \", __jsx(ListItem, {\n        button: true,\n        className: classes.nested\n      }, __jsx(\"div\", {\n        className: classes.subcat\n      }, prop.subcategory))));\n    }\n  }) : \"\")), __jsx(ListItem, {\n    button: true,\n    onClick: handleTradeClick,\n    className: classes.cats\n  }, __jsx(\"div\", {\n    className: classes.cats\n  }, \"Trade\"), tradeOpen ? __jsx(ExpandLess, {\n    className: classes.exicon\n  }) : __jsx(ExpandMore, {\n    className: classes.exicon\n  })), __jsx(Collapse, {\n    \"in\": tradeOpen,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, categories ? categories.map(function (prop, key) {\n    if (prop.catindex == \"buy-sell-trade\") {\n      return __jsx(\"div\", {\n        className: classes.menuItem,\n        key: prop.catindex + \"-\" + prop.keyindex\n      }, __jsx(Link, {\n        href: \"/posts/buy-sell-trade/\" + prop.keyindex\n      }, \" \", __jsx(ListItem, {\n        button: true,\n        className: classes.nested\n      }, __jsx(\"div\", {\n        className: classes.subcat\n      }, prop.subcategory))));\n    }\n  }) : \"\")), __jsx(ListItem, {\n    button: true,\n    onClick: handleRentingClick,\n    className: classes.cats\n  }, __jsx(\"div\", {\n    className: classes.cats\n  }, \"Real Estate Renting\"), rentingOpen ? __jsx(ExpandLess, {\n    className: classes.exicon\n  }) : __jsx(ExpandMore, {\n    className: classes.exicon\n  })), __jsx(Collapse, {\n    \"in\": rentingOpen,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, categories ? categories.map(function (prop, key) {\n    if (prop.catindex == \"real-estate-renting\") {\n      return __jsx(\"div\", {\n        className: classes.menuItem,\n        key: prop.catindex + \"-\" + prop.keyindex\n      }, __jsx(Link, {\n        href: \"/posts/real-estate-renting/\" + prop.keyindex\n      }, \" \", __jsx(ListItem, {\n        button: true,\n        className: classes.nested\n      }, __jsx(\"div\", {\n        className: classes.subcat\n      }, prop.subcategory))));\n    }\n  }) : \"\")), __jsx(ListItem, {\n    button: true,\n    onClick: handleSellingClick,\n    className: classes.cats\n  }, __jsx(\"div\", {\n    className: classes.cats\n  }, \"Real Estate Selling\"), sellingOpen ? __jsx(ExpandLess, {\n    className: classes.exicon\n  }) : __jsx(ExpandMore, {\n    className: classes.exicon\n  })), __jsx(Collapse, {\n    \"in\": sellingOpen,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, categories ? categories.map(function (prop, key) {\n    if (prop.catindex == \"real-estate-selling\") {\n      return __jsx(\"div\", {\n        className: classes.menuItem,\n        key: prop.catindex + \"-\" + prop.keyindex\n      }, __jsx(Link, {\n        href: \"/posts/real-estate-selling/\" + prop.keyindex\n      }, \" \", __jsx(ListItem, {\n        button: true,\n        className: classes.nested\n      }, __jsx(\"div\", {\n        className: classes.subcat\n      }, prop.subcategory))));\n    }\n  }) : \"\")), __jsx(ListItem, {\n    button: true,\n    onClick: handleServicesClick,\n    className: classes.cats\n  }, __jsx(\"div\", {\n    className: classes.cats\n  }, \"Services\"), servicesOpen ? __jsx(ExpandLess, {\n    className: classes.exicon\n  }) : __jsx(ExpandMore, {\n    className: classes.exicon\n  })), __jsx(Collapse, {\n    \"in\": servicesOpen,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, categories ? categories.map(function (prop, key) {\n    if (prop.catindex == \"services\") {\n      return __jsx(\"div\", {\n        className: classes.menuItem,\n        key: prop.catindex + \"-\" + prop.keyindex\n      }, __jsx(Link, {\n        href: \"/posts/services/\" + prop.keyindex\n      }, \" \", __jsx(ListItem, {\n        button: true,\n        className: classes.nested\n      }, __jsx(\"div\", {\n        className: classes.subcat\n      }, prop.subcategory))));\n    }\n  }) : \"\")), __jsx(ListItem, {\n    button: true,\n    onClick: handleAutomotiveClick,\n    className: classes.cats\n  }, __jsx(\"div\", {\n    className: classes.cats\n  }, \"Automotive\"), automotiveOpen ? __jsx(ExpandLess, {\n    className: classes.exicon\n  }) : __jsx(ExpandMore, {\n    className: classes.exicon\n  })), __jsx(Collapse, {\n    \"in\": automotiveOpen,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, categories ? categories.map(function (prop, key) {\n    if (prop.catindex == \"automotive\") {\n      return __jsx(\"div\", {\n        className: classes.menuItem,\n        key: prop.catindex + \"-\" + prop.keyindex\n      }, __jsx(Link, {\n        href: \"/posts/automotive/\" + prop.keyindex\n      }, \" \", __jsx(ListItem, {\n        button: true,\n        className: classes.nested\n      }, __jsx(\"div\", {\n        className: classes.subcat\n      }, prop.subcategory))));\n    }\n  }) : \"\")), __jsx(ListItem, {\n    button: true,\n    onClick: handleAdultClick,\n    className: classes.cats\n  }, __jsx(\"div\", {\n    className: classes.cats\n  }, \"Adult\"), adultOpen ? __jsx(ExpandLess, {\n    className: classes.exicon\n  }) : __jsx(ExpandMore, {\n    className: classes.exicon\n  })), __jsx(Collapse, {\n    \"in\": adultOpen,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, categories ? categories.map(function (prop, key) {\n    if (prop.catindex == \"adult\") {\n      return __jsx(\"div\", {\n        className: classes.menuItem,\n        key: prop.catindex + \"-\" + prop.keyindex\n      }, __jsx(Link, {\n        href: \"/posts/adult/\" + prop.keyindex\n      }, \" \", __jsx(ListItem, {\n        button: true,\n        className: classes.nested\n      }, __jsx(\"div\", {\n        className: classes.subcat\n      }, prop.subcategory))));\n    }\n  }) : \"\")));\n}\n\nexport default NestedList;","map":null,"metadata":{},"sourceType":"module"}