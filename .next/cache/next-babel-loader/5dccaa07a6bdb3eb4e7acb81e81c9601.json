{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\src\\\\hottofindtest\\\\pages\\\\posts\\\\[...slug].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRouter } from \"next/router\";\nimport Container from \"@material-ui/core/Container\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useState } from 'react';\nimport Layout from \"../../components/layout\";\nimport PostAccordian from \"../../components/postAccordian\";\nimport Breadcrumbs from \"../../components/breadcrumbs\";\nimport PostPreview from \"../../components/postPreview\";\nimport LocationMenu from \"../../components/LocationMenu\";\nimport { withAuth } from \"../../utils/auth\";\nimport config from \"../config\";\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  toolbarTitle: {\n    flex: 1\n  },\n  toolbarSecondary: {\n    justifyContent: \"space-between\",\n    overflowX: \"auto\"\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0\n  },\n  sitename: {\n    fontSize: \"46px\",\n    lineHeight: \"40px\",\n    marginBottom: \"0\",\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: \"30px\",\n      lineHeight: \"35px\"\n    }\n  },\n  mainFeaturedPost: {\n    position: \"relative\",\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: 0,\n    backgroundImage: \"url(https://source.unsplash.com/user/erondu)\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\"\n  },\n  overlay: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  mainFeaturedPostContent: {\n    position: \"relative\",\n    padding: theme.spacing(3),\n    [theme.breakpoints.up(\"md\")]: {\n      padding: theme.spacing(6),\n      paddingRight: 0\n    }\n  },\n  mainGrid: {\n    marginTop: theme.spacing(3)\n  },\n  card: {\n    display: \"flex\"\n  },\n  cardDetails: {\n    flex: 1\n  },\n  subtext: {\n    fontFamily: 'Lora, \"Times New Roman\", Times, Baskerville, Georgia, serif',\n    fontSize: \"18px\",\n    minHeight: \"25.6px\",\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: \"12px\"\n    },\n    margin: 0,\n    marginLeft: \"3px\"\n  },\n  cardMedia: {\n    width: 160\n  },\n  hot: {\n    color: \"#00ffe7\"\n  },\n  markdown: _objectSpread({}, theme.typography.body2, {\n    padding: theme.spacing(3, 0)\n  }),\n  sidebarAboutBox: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.grey[200]\n  },\n  sidebarSection: {\n    marginTop: theme.spacing(3)\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0)\n  },\n  mainCat: {\n    fontWeight: \"400\"\n  },\n  gitem: {\n    padding: \"2px !important\",\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: \"16px !important\"\n    }\n  },\n  grid: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\"\n    }\n  },\n  left: {\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    },\n    display: \"none\",\n    width: \"350px\",\n    flex: \"none\"\n  },\n  right: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 'calc(100% - 350px)'\n    },\n    width: '100%'\n  },\n  cont: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  city: {\n    textTransform: \"capitalize\"\n  },\n  pagination: {\n    marginTop: '30px',\n    marginBottom: '50px',\n    textAlign: 'right',\n    borderTop: '1px solid silver',\n    padding: '5px'\n  }\n}));\n\nfunction Posts(props) {\n  const {\n    config\n  } = useContext(ContextProvider);\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    next: true,\n    previous: true\n  });\n  const classes = useStyles();\n  const acount = props.page * 100;\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n\n  const capitalize = s => {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };\n\n  const catindex = slug[0];\n  const keyindex = slug[1];\n  const category = props.categories.find(e => e.catindex === catindex); //  }\n  //if(props.query.keyindex){\n\n  const subcat = props.categories.find(e => e.keyindex === keyindex);\n  var pLock = router.pathname;\n\n  if (catindex) {\n    pLock += `/${catindex}`;\n  }\n\n  if (keyindex) {\n    pLock += `/${keyindex}`;\n  }\n\n  if (props.city) {\n    pLock += `?city=${props.city}`;\n  } // if(keyindex){\n  //  pLock = `/${catindex}/${keyindex}`\n  // } else {\n  //    pLock = `/${catindex}`\n  // }\n  // var cty;\n  // if (props.city){\n  //   cty = `&city=${props.city}`\n  // }\n\n\n  if (category) {\n    var cat = category.maincategory;\n  } else {\n    var cat = \"All Posts\";\n  }\n\n  var sub = `All Posts in ${config.COUNTRYCODE}`;\n  return __jsx(Layout, {\n    user: props.user,\n    categories: props.categories,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.mainFeaturedPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, __jsx(Container, {\n    maxWidth: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    style: {\n      display: \"none\"\n    },\n    src: \"https://source.unsplash.com/user/erondu\",\n    alt: \"background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.overlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }), __jsx(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.mainFeaturedPostContent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: classes.sitename,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \" \", subcat ? __jsx(\"span\", {\n    className: classes.hot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, subcat.subcategory) : __jsx(\"span\", {\n    className: classes.hot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, cat), props.city ? __jsx(\"span\", {\n    className: classes.city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \" \", \" \", \" \", capitalize(props.city)) : ''), subcat ? __jsx(\"p\", {\n    className: classes.subtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, category.maincategory) : __jsx(\"p\", {\n    className: classes.subtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, \" \")))))), __jsx(Breadcrumbs, {\n    query: props.query,\n    categories: props.categories,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }), __jsx(Container, {\n    maxWidth: \"xl\",\n    className: classes.cont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.left,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.filter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, __jsx(LocationMenu, {\n    cities: props.cities,\n    catindex: catindex,\n    keyindex: keyindex,\n    city: props.city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }))), __jsx(\"div\", {\n    className: classes.right,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    className: classes.grid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, __jsx(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  })), props.posts.rows ? props.posts.rows.map(post => __jsx(Grid, {\n    className: classes.gitem,\n    item: true,\n    key: post.id,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, __jsx(PostPreview, {\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }))) : ''), __jsx(\"div\", {\n    className: classes.pagination,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, props.page > 1 ? __jsx(Link, {\n    href: `/posts${pLock}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, \"First page\")) : '', props.page > 1 ? __jsx(\"button\", {\n    onClick: () => router.push(`${pLock}&page=${props.page - 1}`),\n    disabled: props.page <= 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, \"PREV\") : '', props.posts.count > acount ? __jsx(\"button\", {\n    onClick: () => router.push(`${pLock}&page=${props.page + 1}`),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, \"NEXT\") : ''))));\n}\n\nPosts.getInitialProps = async ({\n  query\n}) => {\n  // const res = await fetch('http://localhost:3000/api/posts/latest');\n  const {\n    API,\n    COUNTRYCODE\n  } = config;\n  const {\n    city,\n    page = 1\n  } = query; //   let page = 1\n  //  if(query.page){\n  //   page = query.page\n  //  } \n\n  let url = `${API}/getposts?countrycode=${COUNTRYCODE}`;\n\n  if (query.catindex) {\n    url += `&catindex=${query.catindex}`;\n  }\n\n  if (query.keyindex) {\n    url += `&keyindex=${query.keyindex}`;\n  }\n\n  if (city) {\n    url += `&city=${city}`;\n  }\n\n  if (page) {\n    url += `&page=${page}`;\n  }\n\n  const res = await fetch(url);\n  let data = await res.json();\n  const urlb = `${API}/getcities/${COUNTRYCODE}`;\n  const resb = await fetch(urlb);\n  let cities = await resb.json();\n  return {\n    posts: data,\n    cities: cities,\n    page: _parseInt(page, 10),\n    city: city,\n    query: query\n  };\n};\n\nexport default withAuth(Posts); // const Posts = () => {\n//   const router = useRouter();\n//   const { slug } = router.query;\n//   console.log(slug);\n//   return (\n//     <Layout>\n//       <p>\n//         {/* Category: {slug[0]}, Sub: {slug[1]} */}\n//       </p>\n//     </Layout>\n//   );\n// };\n// export default Posts;","map":{"version":3,"sources":["C:/src/hottofindtest/pages/posts/[...slug].js"],"names":["useRouter","Container","Divider","Grid","Link","Paper","makeStyles","Typography","React","useState","Layout","PostAccordian","Breadcrumbs","PostPreview","LocationMenu","withAuth","config","useStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","sitename","fontSize","lineHeight","marginBottom","breakpoints","down","mainFeaturedPost","position","backgroundColor","grey","color","common","white","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","mainFeaturedPostContent","up","paddingRight","mainGrid","marginTop","card","display","cardDetails","subtext","fontFamily","minHeight","margin","marginLeft","cardMedia","width","hot","markdown","typography","body2","sidebarAboutBox","sidebarSection","footer","background","paper","mainCat","fontWeight","gitem","grid","paddingLeft","cont","flexDirection","city","textTransform","pagination","textAlign","borderTop","Posts","props","useContext","ContextProvider","data","setData","next","previous","classes","acount","page","router","slug","query","capitalize","s","charAt","toUpperCase","slice","catindex","keyindex","category","categories","find","e","subcat","pLock","pathname","cat","maincategory","sub","COUNTRYCODE","user","subcategory","filter","cities","posts","rows","map","post","id","push","count","getInitialProps","API","url","res","fetch","json","urlb","resb"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useState } from 'react';\r\nimport Layout from \"../../components/layout\";\r\nimport PostAccordian from \"../../components/postAccordian\";\r\nimport Breadcrumbs from \"../../components/breadcrumbs\";\r\nimport PostPreview from \"../../components/postPreview\";\r\nimport LocationMenu from \"../../components/LocationMenu\";\r\nimport { withAuth } from \"../../utils/auth\";\r\n\r\n\r\n\r\nimport config from \"../config\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: \"space-between\",\r\n    overflowX: \"auto\"\r\n  },\r\n  toolbarLink: {\r\n    padding: theme.spacing(1),\r\n    flexShrink: 0\r\n  },\r\n  sitename: {\r\n    fontSize: \"46px\",\r\n    lineHeight: \"40px\",\r\n    marginBottom: \"0\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"30px\",\r\n      lineHeight: \"35px\"\r\n    }\r\n  },\r\n  mainFeaturedPost: {\r\n    position: \"relative\",\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    marginBottom: 0,\r\n    backgroundImage: \"url(https://source.unsplash.com/user/erondu)\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\"\r\n  },\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n    left: 0,\r\n    backgroundColor: \"rgba(0,0,0,.3)\"\r\n  },\r\n  mainFeaturedPostContent: {\r\n    position: \"relative\",\r\n    padding: theme.spacing(3),\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      padding: theme.spacing(6),\r\n      paddingRight: 0\r\n    }\r\n  },\r\n  mainGrid: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  card: {\r\n    display: \"flex\"\r\n  },\r\n  cardDetails: {\r\n    flex: 1\r\n  },\r\n  subtext: {\r\n    fontFamily: 'Lora, \"Times New Roman\", Times, Baskerville, Georgia, serif',\r\n    fontSize: \"18px\",\r\n    minHeight: \"25.6px\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      fontSize: \"12px\",\r\n    },\r\n    margin:0,\r\n    marginLeft: \"3px\"\r\n  },\r\n  cardMedia: {\r\n    width: 160\r\n  },\r\n  hot: {\r\n    color: \"#00ffe7\"\r\n  },\r\n  markdown: {\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(3, 0)\r\n  },\r\n  sidebarAboutBox: {\r\n    padding: theme.spacing(2),\r\n    backgroundColor: theme.palette.grey[200]\r\n  },\r\n  sidebarSection: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginTop: theme.spacing(8),\r\n    padding: theme.spacing(6, 0)\r\n  },\r\n  mainCat: {\r\nfontWeight: \"400\"\r\n  },\r\n  gitem: {\r\n    padding:\"2px !important\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      padding:\"16px !important\",\r\n    }\r\n\r\n  },\r\n  grid: {\r\n    paddingLeft:\"5px\",\r\n    paddingRight: \"5px\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingLeft:\"20px\",\r\n      paddingRight: \"20px\"\r\n    }\r\n  },\r\n  left: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\"\r\n    },\r\n    display: \"none\",\r\n    width: \"350px\",\r\n    flex: \"none\"\r\n    \r\n    \r\n  },\r\n  right: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n    width: 'calc(100% - 350px)'\r\n    },\r\n    width: '100%'\r\n  },\r\n  cont: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\" \r\n  },\r\n  city: {\r\n    textTransform: \"capitalize\"\r\n  },\r\n  pagination: {\r\n    marginTop: '30px',\r\n    marginBottom: '50px',\r\n    textAlign: 'right',\r\n    borderTop: '1px solid silver',\r\n    padding: '5px'\r\n  }\r\n}));\r\n\r\n\r\n\r\nfunction Posts(props) {\r\n  const {config} = useContext(ContextProvider);\r\n \r\n  const [data, setData] = useState({next: true, previous: true })\r\n\r\n  const classes = useStyles();\r\n\r\n  const acount = props.page * 100\r\n\r\n\r\n\r\n  const router = useRouter();\r\n  const { slug } = router.query;\r\n\r\n  const capitalize = (s) => {\r\n    if (typeof s !== 'string') return ''\r\n    return s.charAt(0).toUpperCase() + s.slice(1)\r\n  }\r\n\r\n  const catindex = slug[0]\r\n  const keyindex = slug[1]\r\n\r\n\r\n  const category = props.categories.find(\r\n    e => e.catindex === catindex\r\n  );\r\n\r\n  //  }\r\n  //if(props.query.keyindex){\r\n  const subcat = props.categories.find(\r\n    e => e.keyindex === keyindex\r\n  );\r\n\r\n  var pLock = router.pathname\r\n\r\n\r\n  if (catindex ){pLock += `/${catindex}` }\r\n      if(keyindex){ pLock +=  `/${keyindex}` } \r\n      if(props.city){ \r\n        \r\n        pLock += `?city=${props.city}` }\r\n  \r\n     \r\n\r\n\r\n  // if(keyindex){\r\n  //  pLock = `/${catindex}/${keyindex}`\r\n  // } else {\r\n  //    pLock = `/${catindex}`\r\n  // }\r\n\r\n  // var cty;\r\n\r\n  // if (props.city){\r\n  //   cty = `&city=${props.city}`\r\n  // }\r\n\r\n  if(category){\r\n  var cat = category.maincategory}\r\n  else { var cat = \"All Posts\"}\r\n\r\n  var sub = `All Posts in ${config.COUNTRYCODE}`\r\n\r\n\r\n  return (\r\n    <Layout user={props.user} categories={props.categories}>\r\n      {/* Main featured post */}\r\n      <Paper className={classes.mainFeaturedPost}>\r\n        <Container maxWidth=\"xl\">\r\n          {/* Increase the priority of the hero background image */}\r\n          {\r\n            <img\r\n              style={{ display: \"none\" }}\r\n              src=\"https://source.unsplash.com/user/erondu\"\r\n              alt=\"background\"\r\n            />\r\n          }\r\n          <div className={classes.overlay} />\r\n          <Grid container>\r\n            <Grid item md={6}>\r\n              <div className={classes.mainFeaturedPostContent}>\r\n\r\n                <h1 className={classes.sitename}>\r\n                  {\" \"}\r\n                  {subcat ? <span className={classes.hot}>{subcat.subcategory}</span> :\r\n                   <span className={classes.hot}>{cat}</span> }\r\n                   {props.city ? <span className={classes.city}> {\" \"} {capitalize(props.city)}</span> : ''  }\r\n                  \r\n                </h1>\r\n                {subcat ? <p className={classes.subtext}>{category.maincategory}</p> : <p className={classes.subtext}>{\" \"}</p> }\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Paper>\r\n      <Breadcrumbs\r\n          query={props.query}\r\n          categories={props.categories}\r\n        />\r\n      {/* End main featured post */}\r\n      {/* Sub featured posts */}\r\n      <Container maxWidth=\"xl\" className={classes.cont}>\r\n        <div className={classes.left}>\r\n\r\n<div className={classes.filter}>\r\n{/* <PostAccordian categories={props.categories} catindex={catindex} keyindex={keyindex}  /> */}\r\n<LocationMenu cities={props.cities} catindex={catindex} keyindex={keyindex} city={props.city} />\r\n</div>\r\n\r\n        </div>\r\n        <div className={classes.right}>\r\n\r\n        <Grid container spacing={4} className={classes.grid}>\r\n        <Grid item xs={12} md={12}>\r\n          {/* <h2>Latest Posts</h2> */}\r\n            <Divider />\r\n  \r\n          </Grid>\r\n          {props.posts.rows ? props.posts.rows.map(post => (\r\n            <Grid className={classes.gitem} item key={post.id} xs={12} sm={6} md={4} lg={3}>\r\n            <PostPreview post={post} /> \r\n\r\n            </Grid>\r\n          )) : '' }\r\n        </Grid>\r\n        {/* End sub featured posts */}\r\n        <div className={classes.pagination}>\r\n        {props.page > 1  ? <Link href={`/posts${pLock}`}>\r\n          <a>First page</a>\r\n        </Link>\r\n        : '' } \r\n        {props.page > 1 ? <button\r\n          onClick={() => router.push(`${pLock}&page=${props.page - 1}`)}\r\n          disabled={props.page <= 1}\r\n        >\r\n          PREV\r\n        </button> : '' }\r\n        {props.posts.count > acount ? <button onClick={() => router.push(`${pLock}&page=${props.page + 1}`)}>\r\n          NEXT\r\n        </button> : '' }\r\n</div>\r\n        </div>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nPosts.getInitialProps = async ({ query }) => {\r\n    // const res = await fetch('http://localhost:3000/api/posts/latest');\r\n\r\nconst {API, COUNTRYCODE} = config;\r\nconst {city, page = 1} = query\r\n\r\n\r\n  //   let page = 1\r\n  //  if(query.page){\r\n  //   page = query.page\r\n  //  } \r\n\r\n  \r\n \r\n    \r\n\r\n\r\n    let url = `${API}/getposts?countrycode=${COUNTRYCODE}`\r\n\r\n    if (query.catindex){\r\n      url += `&catindex=${query.catindex}`\r\n  }\r\n  if (query.keyindex){\r\n    url += `&keyindex=${query.keyindex}`\r\n}\r\n\r\nif(city) {\r\n  url += `&city=${city}`\r\n}\r\n\r\nif (page){\r\n  url += `&page=${page}`\r\n}\r\n    \r\n   \r\n    const res = await fetch(url);\r\n      let data = await res.json();\r\n\r\n      const urlb = `${API}/getcities/${COUNTRYCODE}`\r\n      const resb = await fetch(urlb);\r\n        let cities = await resb.json();\r\n  \r\n\r\n      return { posts: data, cities: cities, page: parseInt(page, 10), city: city, query: query }\r\n\r\n};\r\n\r\nexport default withAuth(Posts);\r\n\r\n\r\n// const Posts = () => {\r\n//   const router = useRouter();\r\n//   const { slug } = router.query;\r\n\r\n//   console.log(slug);\r\n\r\n//   return (\r\n//     <Layout>\r\n//       <p>\r\n//         {/* Category: {slug[0]}, Sub: {slug[1]} */}\r\n//       </p>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// export default Posts;\r\n"]},"metadata":{},"sourceType":"module"}