{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\src\\\\hottofindtest\\\\components\\\\dashboard\\\\profileForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Router from \"next/router\";\nimport SimpleSelect from \"./simpleSelect\";\nimport * as Queries from \"../../utils/queries\";\nimport dynamic from \"next/dynamic\";\nimport { COUNTRYCODE } from \"../../config\"; // const UploadComponent = dynamic(() => import(\"./uploadcomponent\"), {\n//   ssr: false\n// });\n\nconst ProfileFilePond = dynamic(() => import(\"./profileFilePond\"), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./profileFilePond\")],\n    modules: [\"./profileFilePond\"]\n  }\n});\n\nconst styles = theme => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass ProfileForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_handleChangeCountry\", e => {\n      this.setState({\n        cities: \"\"\n      });\n      this.setState({\n        country: e.target.value\n      });\n\n      const filter = (tag, arr) => arr.filter(ct => ct.countrycode === tag);\n\n      const filtered = filter(e.target.value, this.props.citydata);\n      var cts = [];\n      filtered.map(ct => {\n        cts.push({\n          label: ct.city,\n          value: ct.city.toLowerCase()\n        });\n      });\n      this.setState({\n        citydata: cts\n      });\n    });\n\n    _defineProperty(this, \"_handleChangeCity\", e => {\n      this.setState({\n        city: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        errors: \"\"\n      });\n      var fs = []; //var myJSON = JSON.stringify(this.ref1);\n      //console.log(`ref1: ${myJSON}`)\n\n      this.ref1.getFiles().map(fileItem => fileItem.file).forEach(file => {\n        var name = file.name.split('.')[0];\n        var fileName = `${name}.jpg`; //  formData.append(fieldName, file, file.name);\n        //  console.log(file.name);\n\n        fs.push({\n          name: fileName,\n          owner: this.props.user.username\n        });\n      }); // this.setState(\n      //   {\n      //     uploads: fs\n      //   },\n      //   this.handleSave\n      // );\n\n      this.handleSave;\n    });\n\n    _defineProperty(this, \"handleSave\", async event => {\n      event.preventDefault();\n      this.setState({\n        error: \"\"\n      });\n\n      try {\n        let response = await Queries.submitProfile(this.state);\n\n        if (response.status === 200) {\n          Router.push('/profile');\n        } else {\n          console.log('Edit failed.'); // https://github.com/developit/unfetch#caveats\n\n          let error = new Error(response.statusText);\n          error.response = response;\n          const json = await response.json();\n          const resperrors = json.errors[0].message;\n          this.setState({\n            error: resperrors || error.message\n          });\n          throw error;\n        }\n      } catch (error) {\n        console.error('You have an error in your code or there are Network issues.', error);\n        const {\n          response\n        } = error; //   this.setState({\n        //     error:  response ? response.statusText : error.message\n        //   })\n      }\n    });\n\n    const user = this.props.userdata;\n    var mca = [];\n    var countries = [];\n    this.props.citydata.map(c => {\n      if (mca.indexOf(c.countrycode) === -1) {\n        mca.push(c.countrycode);\n        countries.push({\n          label: c.country,\n          value: c.countrycode\n        });\n      }\n    });\n\n    if (user.city) {\n      var cities = [];\n      this.props.citydata.map(ct => {\n        cities.push({\n          label: ct.city,\n          value: ct.city.toLowerCase()\n        });\n      });\n    }\n\n    this.ref1 = React.createRef();\n    this.state = {\n      username: user.username,\n      name: user.name || '',\n      email: user.email || '',\n      address1: user.address1 || '',\n      address2: user.address2 || '',\n      city: user.city || '',\n      state: user.state || '',\n      country: user.country || '',\n      postcode: user.postcode || '',\n      avatar: user.avatar || '',\n      error: '',\n      citydata: cities || [],\n      countries: countries,\n      error: ''\n    };\n  } //};\n  // componentDidMount = () => {\n  // var mca = [];\n  // var countries = [];\n  // this.props.citydata.map(c => {\n  //   if (mca.indexOf(c.countrycode) === -1) {\n  //     mca.push(c.countrycode);\n  //     countries.push({ label: c.country, value: c.countrycode });\n  //   }\n  //   console.log(countries)\n  // this.setState({ countries: countries });\n  // })\n  // if (this.state.cities) {\n  // var cities = [];\n  // this.props.citydata.map(ct => {\n  //   cities.push({ label: ct.city, value: ct.city.toLowerCase() });\n  // });\n  // this.setState({ citydata: cities });\n  //}\n\n\n  onUpdateFiles(fileItems) {\n    console.log(fileItems); // this.setState({\n    //   files: fileItems.map(fileItem => fileItem.file)\n    // });\n  }\n\n  render() {\n    const user = this.props.user;\n    const post = this.props.post || [];\n    const {\n      classes\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Photo\", __jsx(\"div\", {\n      style: {\n        backgroundImage: `url('${user.avatar}')`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center top',\n        maxHeight: \"490px\",\n        minHeight: \"310px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, __jsx(ProfileFilePond, {\n      onupdatefiles: this.onUpdateFiles.bind(this),\n      setRef: ref => this.ref1 = ref //    files={this.props.post.files}\n      ,\n      handleUploadImages: this.handleUploadImages,\n      user: this.props.userdata,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Update Personal Details\")), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, __jsx(TextField, {\n      required: true,\n      id: \"name\",\n      name: \"name\",\n      label: \"Name\",\n      fullWidth: true,\n      autoComplete: \"name\",\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, __jsx(TextField, {\n      required: true,\n      id: \"email\",\n      name: \"email\",\n      label: \"Email Address\",\n      fullWidth: true,\n      autoComplete: \"email\",\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, __jsx(TextField, {\n      required: true,\n      id: \"address1\",\n      name: \"address1\",\n      label: \"Address line 1\",\n      fullWidth: true,\n      autoComplete: \"billing address-line1\",\n      value: this.state.address1,\n      onChange: event => this.setState({\n        address1: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"address2\",\n      name: \"address2\",\n      label: \"Address line 2\",\n      fullWidth: true,\n      autoComplete: \"address2\",\n      value: this.state.address2,\n      onChange: event => this.setState({\n        address2: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, __jsx(SimpleSelect, {\n      options: this.state.countries,\n      value: this.state.country,\n      placeholder: \"Country\",\n      name: \"country\",\n      onChange: this._handleChangeCountry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, __jsx(SimpleSelect, {\n      options: this.state.citydata,\n      value: this.state.city,\n      placeholder: \"City\",\n      name: \"city\",\n      onChange: event => this.setState({\n        city: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"state\",\n      name: \"state\",\n      label: \"State/Province/Region\",\n      fullWidth: true,\n      value: this.state.state,\n      onChange: event => this.setState({\n        state: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, __jsx(TextField, {\n      required: true,\n      id: \"postcode\",\n      name: \"postcode\",\n      label: \"Zip / Postal code\",\n      fullWidth: true,\n      autoComplete: \"postcode\",\n      value: this.state.postcode,\n      onChange: event => this.setState({\n        postcode: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }))), __jsx(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, __jsx(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Submit\")))), this.state.error ? __jsx(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Error: \", this.state.error) : ''));\n  }\n\n}\n\nexport default withStyles(styles)(ProfileForm);","map":{"version":3,"sources":["C:/src/hottofindtest/components/dashboard/profileForm.js"],"names":["React","useState","useEffect","Grid","Typography","TextField","Button","withStyles","Router","SimpleSelect","Queries","dynamic","COUNTRYCODE","ProfileFilePond","ssr","styles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","ProfileForm","Component","constructor","props","e","setState","cities","country","target","value","filter","tag","arr","ct","countrycode","filtered","citydata","cts","map","push","label","city","toLowerCase","event","preventDefault","errors","fs","ref1","getFiles","fileItem","file","forEach","name","split","fileName","owner","user","username","handleSave","error","response","submitProfile","state","status","console","log","Error","statusText","json","resperrors","message","userdata","mca","countries","c","indexOf","createRef","email","address1","address2","postcode","onUpdateFiles","fileItems","render","post","classes","backgroundImage","backgroundSize","backgroundPosition","maxHeight","minHeight","bind","ref","handleUploadImages","_handleChangeCountry"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Router from \"next/router\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport * as Queries from \"../../utils/queries\";\r\n\r\nimport dynamic from \"next/dynamic\";\r\nimport { COUNTRYCODE } from \"../../config\";\r\n\r\n// const UploadComponent = dynamic(() => import(\"./uploadcomponent\"), {\r\n//   ssr: false\r\n// });\r\n\r\nconst ProfileFilePond = dynamic(() => import(\"./profileFilePond\"), {\r\n  ssr: false\r\n});\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n});\r\n\r\nclass ProfileForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const user = this.props.userdata;\r\n\r\n    var mca = [];\r\n    var countries = [];\r\n    this.props.citydata.map(c => {\r\n      if (mca.indexOf(c.countrycode) === -1) {\r\n        mca.push(c.countrycode);\r\n        countries.push({ label: c.country, value: c.countrycode });\r\n      }\r\n\r\n    })\r\n\r\n    if (user.city) {\r\n    var cities = [];\r\n    this.props.citydata.map(ct => {\r\n      cities.push({ label: ct.city, value: ct.city.toLowerCase() });\r\n    });\r\n\r\n  \r\n    }\r\n\r\n    this.ref1 = React.createRef();\r\n\r\n    this.state = {\r\n        username: user.username, name: user.name || '', \r\n        email: user.email || '', \r\n        address1: user.address1 || '', \r\n        address2: user.address2 || '' , \r\n        city: user.city || '', \r\n        state: user.state || '', \r\n        country: user.country || '', \r\n        postcode: user.postcode || '', \r\n        avatar: user.avatar || '', error: '',\r\n        citydata: cities || [],\r\n        countries: countries,\r\n        error: ''\r\n    };\r\n  }\r\n\r\n//};\r\n // componentDidMount = () => {\r\n\r\n    // var mca = [];\r\n    // var countries = [];\r\n    // this.props.citydata.map(c => {\r\n    //   if (mca.indexOf(c.countrycode) === -1) {\r\n    //     mca.push(c.countrycode);\r\n    //     countries.push({ label: c.country, value: c.countrycode });\r\n    //   }\r\n    //   console.log(countries)\r\n    // this.setState({ countries: countries });\r\n    // })\r\n\r\n    // if (this.state.cities) {\r\n    // var cities = [];\r\n    // this.props.citydata.map(ct => {\r\n    //   cities.push({ label: ct.city, value: ct.city.toLowerCase() });\r\n    // });\r\n\r\n    // this.setState({ citydata: cities });\r\n//}\r\n \r\n  \r\n\r\n  _handleChangeCountry = e => {\r\n    this.setState({ cities: \"\" });\r\n    this.setState({ country: e.target.value });\r\n\r\n    const filter = (tag, arr) => arr.filter(ct => ct.countrycode === tag);\r\n    const filtered = filter(e.target.value, this.props.citydata);\r\n\r\n    var cts = [];\r\n    filtered.map(ct => {\r\n      cts.push({ label: ct.city, value: ct.city.toLowerCase() });\r\n    });\r\n\r\n    this.setState({ citydata: cts });\r\n  };\r\n\r\n\r\n  _handleChangeCity = e => {\r\n    this.setState({ city: e.target.value });\r\n  };\r\n\r\n\r\n  onUpdateFiles(fileItems) {\r\n    console.log(fileItems);\r\n    // this.setState({\r\n    //   files: fileItems.map(fileItem => fileItem.file)\r\n    // });\r\n  }\r\n\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ errors: \"\" });\r\n\r\n    var fs = [];\r\n\r\n    //var myJSON = JSON.stringify(this.ref1);\r\n\r\n    //console.log(`ref1: ${myJSON}`)\r\n\r\n    this.ref1\r\n      .getFiles()\r\n      .map(fileItem => fileItem.file)\r\n      .forEach(file => {\r\n        var name = file.name.split('.')[0]\r\n        var fileName = `${name}.jpg`\r\n        //  formData.append(fieldName, file, file.name);\r\n        //  console.log(file.name);\r\n        fs.push({ name: fileName, owner: this.props.user.username });\r\n      });\r\n\r\n    // this.setState(\r\n    //   {\r\n    //     uploads: fs\r\n    //   },\r\n    //   this.handleSave\r\n    // );\r\n    this.handleSave\r\n  };\r\n\r\n  handleSave = async event => {\r\n    event.preventDefault();\r\n    this.setState({ error: \"\" });\r\n\r\n\r\n    try {\r\n        let response = await Queries.submitProfile(this.state)\r\n        if (response.status === 200) {\r\n          Router.push('/profile')\r\n        } else {\r\n          console.log('Edit failed.')\r\n          // https://github.com/developit/unfetch#caveats\r\n          let error = new Error(response.statusText)\r\n          \r\n          error.response = response\r\n          const json = await response.json()\r\n          const resperrors =  json.errors[0].message\r\n     \r\n\r\n          \r\n       \r\n              this.setState({\r\n                error: resperrors || error.message\r\n              })\r\n\r\n          throw error\r\n        }\r\n      } catch (error) {\r\n        console.error(\r\n          'You have an error in your code or there are Network issues.',\r\n          error\r\n        )\r\n  \r\n        const { response } = error\r\n\r\n\r\n    \r\n        //   this.setState({\r\n        //     error:  response ? response.statusText : error.message\r\n        //   })\r\n      }\r\n\r\n\r\n\r\n  \r\n  };\r\n\r\n  render() {\r\n    const user = this.props.user;\r\n\r\n    const post = this.props.post || [];\r\n\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n<React.Fragment>\r\n\r\n<form noValidate\r\n   onSubmit={this.handleSave}\r\n  >\r\n<Grid container spacing={3}>\r\n<Grid item xs={12} sm={3}>\r\nPhoto\r\n<div style={{backgroundImage: `url('${user.avatar}')`, backgroundSize: 'cover', backgroundPosition: 'center top', maxHeight: \"490px\", minHeight: \"310px\" }}>\r\n<ProfileFilePond\r\n                  onupdatefiles={this.onUpdateFiles.bind(this) }\r\n                  setRef={ref => (this.ref1 = ref)}\r\n              //    files={this.props.post.files}\r\n                  handleUploadImages={this.handleUploadImages}\r\n                  user={this.props.userdata}\r\n                />\r\n</div>\r\n  </Grid>\r\n  <Grid item xs={12} sm={9}>\r\n  <Grid container spacing={3} >\r\n  <Grid item xs={12} sm={12}>\r\n  <Typography variant=\"h6\" gutterBottom>\r\n  Update Personal Details\r\n</Typography>\r\n</Grid>\r\n  \r\n  <Grid item xs={12} sm={6}>\r\n    <TextField\r\n      required\r\n      id=\"name\"\r\n      name=\"name\"\r\n      label=\"Name\"\r\n      fullWidth\r\n      autoComplete=\"name\"\r\n      value={this.state.name}\r\n      onChange={event =>\r\n        this.setState({ name: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n    <TextField\r\n      required\r\n      id=\"email\"\r\n      name=\"email\"\r\n      label=\"Email Address\"\r\n      fullWidth\r\n      autoComplete=\"email\"\r\n      value={this.state.email}\r\n      onChange={event =>\r\n        this.setState({ email: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n    <TextField\r\n      required\r\n      id=\"address1\"\r\n      name=\"address1\"\r\n      label=\"Address line 1\"\r\n      fullWidth\r\n      autoComplete=\"billing address-line1\"\r\n      value={this.state.address1}\r\n      onChange={event =>\r\n        this.setState({ address1: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n    <TextField\r\n      id=\"address2\"\r\n      name=\"address2\"\r\n      label=\"Address line 2\"\r\n      fullWidth\r\n      autoComplete=\"address2\"\r\n      value={this.state.address2}\r\n      onChange={event =>\r\n        this.setState({ address2: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n                  <SimpleSelect\r\n                    options={this.state.countries}\r\n                    value={this.state.country}\r\n                    placeholder=\"Country\"\r\n                    name=\"country\"\r\n                    onChange={this._handleChangeCountry}\r\n                  />\r\n                </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n                  <SimpleSelect\r\n                    options={this.state.citydata}\r\n                    value={this.state.city}\r\n                    placeholder=\"City\"\r\n                    name=\"city\"\r\n                    onChange={event =>\r\n                        this.setState({ city: event.target.value })\r\n                      }\r\n                  />\r\n                </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n    <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth\r\n      value={this.state.state}\r\n      onChange={event =>\r\n        this.setState({ state: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6}>\r\n    <TextField\r\n      required\r\n      id=\"postcode\"\r\n      name=\"postcode\"\r\n      label=\"Zip / Postal code\"\r\n      fullWidth\r\n      autoComplete=\"postcode\"\r\n      value={this.state.postcode}\r\n      onChange={event =>\r\n        this.setState({ postcode: event.target.value })\r\n      }\r\n    />\r\n  </Grid>\r\n\r\n  </Grid>\r\n  <Grid item xs={12}>\r\n  <Button\r\n      type=\"submit\"\r\n      fullWidth\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={classes.submit}\r\n    >\r\n      Submit\r\n    </Button>\r\n  </Grid>\r\n</Grid>\r\n</Grid>\r\n\r\n{this.state.error  ? \r\n    <p className=\"error\">Error: {this.state.error}</p>\r\n           : '' }\r\n  </form>\r\n</React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ProfileForm);\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}