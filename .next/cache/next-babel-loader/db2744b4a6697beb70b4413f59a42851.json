{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { API } from \"../config\";\nimport nextCookie from \"next-cookies\";\nimport fetch from \"isomorphic-unfetch\";\nexport const deletePost = async id => {\n  console.log(id);\n  const url = `/api/post/delete`;\n\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: _JSON$stringify({\n        id: id\n      })\n    });\n\n    if (response.status === 200) {\n      // Router.push('/dashboard')\n      window.location.reload();\n    } else {\n      console.log(\"Delete failed.\"); // https://github.com/developit/unfetch#caveats\n\n      let error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  } catch (error) {\n    console.error(\"You have an error in your code or there are Network issues.\", error);\n  }\n};\nexport const deleteFile = async name => {\n  console.log(name);\n  const url = `/api/dashboard/file/delete`;\n\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: _JSON$stringify({\n        name: name\n      })\n    });\n\n    if (response.status === 200) {\n      // Router.push('/dashboard')\n      return {\n        status: \"Sucess\"\n      };\n    } else {\n      console.log(\"Delete failed.\"); // https://github.com/developit/unfetch#caveats\n\n      let error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  } catch (error) {\n    console.error(\"You have an error in your code or there are Network issues.\", error);\n  }\n};\nexport const getUserPosts = async username => {\n  const res = await fetch(`${API}/posts/byuser/${username}`);\n  let posts = await res.json();\n  return posts;\n};\nexport const checkUserLogin = async ctx => {\n  const {\n    token\n  } = nextCookie(ctx); //console.log(token)\n  //   const apiUrl = getHost(ctx.req) + \"/api/profile\";\n\n  const apiUrl = `${API}/profile`;\n\n  const redirectOnError = () => false ? Router.push(\"/login\") : ctx.res.writeHead(302, {\n    Location: \"/login\"\n  }).end();\n\n  try {\n    const response = await fetch(apiUrl, {\n      credentials: \"include\",\n      headers: {\n        // Authorization: JSON.stringify({ token })\n        Authorization: token\n      }\n    });\n\n    if (response.ok) {\n      const js = await response.json();\n      const user = js.data;\n      return user;\n    } else {\n      return await redirectOnError();\n    }\n  } catch (error) {\n    // Implementation or Network error\n    return redirectOnError();\n  }\n};\nexport const getPost = async id => {\n  const url = `${API}/post/id/${id}`;\n  const data = await fetch(url);\n  const post = await data.json();\n  return post;\n};\nexport const getCities = async countrycode => {\n  const url = `${API}/city/get/${countrycode}`;\n  const data = await fetch(url);\n  let cities = await data.json();\n  return cities;\n};\nexport const getAllCities = async () => {\n  const url = `${API}/city/get`;\n  const data = await fetch(url);\n  let cities = await data.json();\n  return cities;\n};\nexport const getCategories = async () => {\n  const url = `${API}/category/get`;\n  const data = await fetch(url);\n  let categories = await data.json();\n  return categories;\n};\nexport const getlatest = async c => {\n  const url = `${API}/posts/latest?countrycode=${c}`;\n  const data = await fetch(url);\n  let posts = await data.json();\n  return posts;\n};\nexport const submitProfile = async e => {\n  const url = `${API}/dashboard/profile/edit`;\n  const data = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: _JSON$stringify(e)\n  });\n  let submit = await data.json();\n  return submit;\n};\nexport const uploadProfilePhoto = async e => {\n  const url = `${API}/dashboard/profile/changeavatar`;\n\n  try {\n    const data = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: _JSON$stringify(e)\n    });\n    let resp = await data;\n    return resp;\n  } catch (error) {\n    console.error(\"You have an error in your code or there are Network issues.\", error);\n    const {\n      resp\n    } = error.json();\n    return resp;\n  }\n};\nexport const deleteAvatar = async () => {\n  const url = `${API}/dashboard/profile/deleteavatar`;\n  const data = await fetch(url);\n  let categories = await data.json();\n  return categories;\n};","map":{"version":3,"sources":["C:/src/hottofindtest/utils/queries.js"],"names":["API","nextCookie","fetch","deletePost","id","console","log","url","response","method","headers","body","status","window","location","reload","error","Error","statusText","deleteFile","name","getUserPosts","username","res","posts","json","checkUserLogin","ctx","token","apiUrl","redirectOnError","Router","push","writeHead","Location","end","credentials","Authorization","ok","js","user","data","getPost","post","getCities","countrycode","cities","getAllCities","getCategories","categories","getlatest","c","submitProfile","e","submit","uploadProfilePhoto","resp","deleteAvatar"],"mappings":"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","sourcesContent":["import { API } from \"../config\";\r\nimport nextCookie from \"next-cookies\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nexport const deletePost = async id => {\r\n  console.log(id);\r\n\r\n  const url = `/api/post/delete`;\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id })\r\n    });\r\n    if (response.status === 200) {\r\n      // Router.push('/dashboard')\r\n      window.location.reload();\r\n    } else {\r\n      console.log(\"Delete failed.\");\r\n      // https://github.com/developit/unfetch#caveats\r\n      let error = new Error(response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      \"You have an error in your code or there are Network issues.\",\r\n      error\r\n    );\r\n  }\r\n};\r\n\r\nexport const deleteFile = async name => {\r\n  console.log(name);\r\n\r\n  const url = `/api/dashboard/file/delete`;\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ name: name })\r\n    });\r\n    if (response.status === 200) {\r\n      // Router.push('/dashboard')\r\n      return { status: \"Sucess\" };\r\n    } else {\r\n      console.log(\"Delete failed.\");\r\n      // https://github.com/developit/unfetch#caveats\r\n      let error = new Error(response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  } catch (error) {\r\n    console.error(\r\n      \"You have an error in your code or there are Network issues.\",\r\n      error\r\n    );\r\n  }\r\n};\r\n\r\nexport const getUserPosts = async username => {\r\n  const res = await fetch(`${API}/posts/byuser/${username}`);\r\n  let posts = await res.json();\r\n\r\n  return posts;\r\n};\r\n\r\nexport const checkUserLogin = async ctx => {\r\n  const { token } = nextCookie(ctx);\r\n\r\n  //console.log(token)\r\n  //   const apiUrl = getHost(ctx.req) + \"/api/profile\";\r\n\r\n  const apiUrl = `${API}/profile`;\r\n\r\n  const redirectOnError = () =>\r\n    typeof window !== \"undefined\"\r\n      ? Router.push(\"/login\")\r\n      : ctx.res.writeHead(302, { Location: \"/login\" }).end();\r\n\r\n  try {\r\n    const response = await fetch(apiUrl, {\r\n      credentials: \"include\",\r\n      headers: {\r\n        // Authorization: JSON.stringify({ token })\r\n        Authorization: token\r\n      }\r\n    });\r\n\r\n    if (response.ok) {\r\n      const js = await response.json();\r\n\r\n      const user = js.data;\r\n\r\n      return user;\r\n    } else {\r\n      return await redirectOnError();\r\n    }\r\n  } catch (error) {\r\n    // Implementation or Network error\r\n    return redirectOnError();\r\n  }\r\n};\r\n\r\nexport const getPost = async id => {\r\n  const url = `${API}/post/id/${id}`;\r\n  const data = await fetch(url);\r\n  const post = await data.json();\r\n  return post;\r\n};\r\n\r\nexport const getCities = async countrycode => {\r\n  const url = `${API}/city/get/${countrycode}`;\r\n  const data = await fetch(url);\r\n  let cities = await data.json();\r\n  return cities;\r\n};\r\n\r\nexport const getAllCities = async () => {\r\n  const url = `${API}/city/get`;\r\n  const data = await fetch(url);\r\n  let cities = await data.json();\r\n  return cities;\r\n};\r\n\r\nexport const getCategories = async () => {\r\n  const url = `${API}/category/get`;\r\n  const data = await fetch(url);\r\n  let categories = await data.json();\r\n  return categories;\r\n};\r\n\r\nexport const getlatest = async c => {\r\n  const url = `${API}/posts/latest?countrycode=${c}`;\r\n  const data = await fetch(url);\r\n  let posts = await data.json();\r\n\r\n  return posts;\r\n};\r\n\r\nexport const submitProfile = async e => {\r\n  const url = `${API}/dashboard/profile/edit`;\r\n\r\n  const data = await fetch(url, {\r\n    method: \"POST\",\r\n\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(e)\r\n  });\r\n\r\n  let submit = await data.json();\r\n  return submit;\r\n};\r\n\r\nexport const uploadProfilePhoto = async e => {\r\n  const url = `${API}/dashboard/profile/changeavatar`;\r\n\r\n  try {\r\n    const data = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(e)\r\n    });\r\n\r\n    let resp = await data;\r\n\r\n    return resp;\r\n  } catch (error) {\r\n    console.error(\r\n      \"You have an error in your code or there are Network issues.\",\r\n      error\r\n    );\r\n\r\n    const { resp } = error.json();\r\n\r\n    return resp;\r\n  }\r\n};\r\n\r\nexport const deleteAvatar = async () => {\r\n  const url = `${API}/dashboard/profile/deleteavatar`;\r\n  const data = await fetch(url);\r\n  let categories = await data.json();\r\n  return categories;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}