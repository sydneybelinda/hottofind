{"ast":null,"code":"import { Post, File } from '../../../../models';\nexport default (async (req, res) => {\n  const {\n    query: {\n      id\n    }\n  } = req;\n\n  try {\n    // const posts = await Post.findAll({\n    //   });\n    const posts = await Post.findOne({\n      where: {\n        id: id\n      },\n      include: [{\n        model: File,\n        as: 'files'\n      }],\n      order: [['createdAt', 'DESC']]\n    });\n    return res.status(200).send(posts);\n  } catch (err) {\n    return res.status(500).send(err);\n  } //   const getUser = async obj => {\n  //     return await User.findOne({\n  //       where: obj,\n  //     });\n  //   };\n  //   let user = await getUser({ id: id });\n  //   if (user) {\n  //     res.status(200).json({ user: user });\n  //     //  next(null, user);\n  //    } else {\n  //     res.status(401).json({ message: 'No such user found' });\n  //     //  next(null, false);\n  //    }\n\n});","map":{"version":3,"sources":["C:/src/hottofindtest/pages/api/post/id/[id].js"],"names":["Post","File","req","res","query","id","posts","findOne","where","include","model","as","order","status","send","err"],"mappings":"AAAA,SAASA,IAAT,EAAeC,IAAf,QAA0B,oBAA1B;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADH,MAEFH,GAFJ;;AAMA,MAAI;AACF;AACA;AACA,UAAMI,KAAK,GAAG,MAAMN,IAAI,CAACO,OAAL,CAAa;AAC/BC,MAAAA,KAAK,EAAE;AACLH,QAAAA,EAAE,EAAEA;AADC,OADwB;AAIhCI,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAET,IADT;AAECU,QAAAA,EAAE,EAAE;AAFL,OADO,CAJuB;AAU/BC,MAAAA,KAAK,EAAE,CAAC,CAAC,WAAD,EAAc,MAAd,CAAD;AAVwB,KAAb,CAApB;AAYA,WAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBR,KAArB,CAAP;AACD,GAhBD,CAgBE,OAAOS,GAAP,EAAY;AACZ,WAAOZ,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAArB,CAAP;AACD,GAzBgC,CA4BnC;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,CA3CD","sourcesContent":["import { Post, File} from '../../../../models';\r\n\r\nexport default async (req, res) => {\r\n  const {\r\n    query: { id },\r\n  } = req\r\n\r\n\r\n\r\n  try {\r\n    // const posts = await Post.findAll({\r\n    //   });\r\n    const posts = await Post.findOne({\r\n      where: {\r\n        id: id,\r\n      },\r\n     include: [\r\n       {\r\n         model: File,\r\n        as: 'files'\r\n      }\r\n     ],\r\n      order: [['createdAt', 'DESC']]\r\n    });\r\n    return res.status(200).send(posts);\r\n  } catch (err) {\r\n    return res.status(500).send(err);\r\n  }\r\n\r\n\r\n//   const getUser = async obj => {\r\n//     return await User.findOne({\r\n//       where: obj,\r\n//     });\r\n//   };\r\n\r\n//   let user = await getUser({ id: id });\r\n\r\n//   if (user) {\r\n//     res.status(200).json({ user: user });\r\n//     //  next(null, user);\r\n//    } else {\r\n//     res.status(401).json({ message: 'No such user found' });\r\n//     //  next(null, false);\r\n//    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}