{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { login } from '../utils/auth';\nimport fetch from 'isomorphic-unfetch';\n\nfunction Copyright() {\n  return __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\"\n  }, 'Copyright Â© ', __jsx(Link, {\n    color: \"inherit\",\n    href: \"https://material-ui.com/\"\n  }, \"Your Website\"), ' ', new Date().getFullYear(), '.');\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    '@global': {\n      body: {\n        backgroundColor: theme.palette.common.white\n      }\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n});\n\nfunction Login() {\n  var _jsx, _jsx2;\n\n  var classes = useStyles();\n\n  var _useState = useState({\n    username: '',\n    password: '',\n    error: ''\n  }),\n      userData = _useState[0],\n      setUserData = _useState[1];\n\n  function handleSubmit(event) {\n    var username, password, url, response, _ref, token, res, error;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            setUserData(_Object$assign({}, userData, {\n              error: ''\n            }));\n            username = userData.username;\n            password = userData.password; // const url = '/api/login'\n\n            url = '/api/auth/signin';\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: _JSON$stringify({\n                username: username,\n                password: password\n              })\n            }));\n\n          case 8:\n            response = _context.sent;\n\n            if (!(response.status === 200)) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 12:\n            _ref = _context.sent;\n            token = _ref.token;\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(login({\n              token: token\n            }));\n\n          case 16:\n            _context.next = 24;\n            break;\n\n          case 18:\n            console.log('Login failed.');\n            _context.next = 21;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 21:\n            res = _context.sent;\n            // https://github.com/developit/unfetch#caveats\n            // let error = new Error(response.statusText)\n            // let error = new Error(response.json())\n            error = res.response; //   error.response = res.response\n\n            throw error;\n\n          case 24:\n            _context.next = 30;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t0 = _context[\"catch\"](5);\n            console.error('You have an error in your code or there are Network issues.', _context.t0);\n            setUserData(_Object$assign({}, userData, {\n              error: _context.t0\n            }));\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 26]]);\n  }\n\n  return __jsx(Container, {\n    component: \"main\",\n    maxWidth: \"xs\"\n  }, __jsx(CssBaseline, null), __jsx(\"div\", {\n    className: classes.paper\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n    component: \"h1\",\n    variant: \"h5\"\n  }, \"Sign in\"), __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(TextField, (_jsx = {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"username\",\n    value: userData.username,\n    onChange: function onChange(event) {\n      return setUserData(_Object$assign({}, userData, {\n        username: event.target.value\n      }));\n    },\n    label: \"Username\"\n  }, _defineProperty(_jsx, \"name\", \"email\"), _defineProperty(_jsx, \"autoComplete\", \"username\"), _defineProperty(_jsx, \"autoFocus\", true), _jsx)), __jsx(TextField, (_jsx2 = {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"password\",\n    name: \"password\",\n    value: userData.password,\n    onChange: function onChange(event) {\n      return setUserData(_Object$assign({}, userData, {\n        password: event.target.value\n      }));\n    },\n    placeholder: \"Password\"\n  }, _defineProperty(_jsx2, \"required\", true), _defineProperty(_jsx2, \"label\", \"Password\"), _defineProperty(_jsx2, \"type\", \"password\"), _defineProperty(_jsx2, \"autoComplete\", \"current-password\"), _jsx2)), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      value: \"remember\",\n      color: \"primary\"\n    }),\n    label: \"Remember me\"\n  }), __jsx(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit\n  }, \"Sign In\"), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: true\n  }, __jsx(Link, {\n    href: \"#\",\n    variant: \"body2\"\n  }, \"Forgot password?\")), __jsx(Grid, {\n    item: true\n  }, __jsx(Link, {\n    href: \"/register\",\n    variant: \"body2\"\n  }, \"Don't have an account? Sign Up\"))), userData.error && __jsx(\"p\", {\n    className: \"error\"\n  }, \"Error: \", userData.error))), __jsx(Box, {\n    mt: 8\n  }, __jsx(Copyright, null)));\n}\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}