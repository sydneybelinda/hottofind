{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport fetch from \"isomorphic-unfetch\";\nimport nextCookie from \"next-cookies\";\nimport Router from \"next/router\";\nimport React from \"react\";\nimport PostForm from \"../../components/dashboard/postForm\";\nimport Footer from \"../../components/dashboard/footer\";\nimport Header from \"../../components/dashboard/header\";\nimport Layout from \"../../components/dashboard/layout\";\nimport { withAuthSync } from \"../../utils/auth\";\nimport getHost from \"../../utils/get-host\";\nimport * as Queries from \"../../utils/queries\";\nimport config from \"../../config\";\nvar drawerWidth = 240;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: \"flex\"\n    },\n    drawerPaper: {\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerPaperClose: _defineProperty({\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      width: theme.spacing(7)\n    }, theme.breakpoints.up(\"sm\"), {\n      width: theme.spacing(9)\n    }),\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: \"100vh\",\n      overflow: \"auto\"\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\"\n    },\n    paperCust: {\n      padding: \"24px\"\n    },\n    fixedHeight: {\n      height: 240\n    }\n  };\n});\n\nvar NewPost = function NewPost(props) {\n  var user = props.user;\n  var post = [];\n  var classes = useStyles();\n  var fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return __jsx(Layout, {\n    user: props.user,\n    categories: props.cat\n  }, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(CssBaseline, null), __jsx(Header, null), __jsx(\"main\", {\n    className: classes.content\n  }, __jsx(\"div\", {\n    className: classes.appBarSpacer\n  }), __jsx(Container, {\n    maxWidth: \"lg\",\n    className: classes.container\n  }, __jsx(\"h1\", null, \"New Post\"), __jsx(Grid, {\n    container: true,\n    spacing: 3\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    lg: 12\n  }, __jsx(Paper, {\n    className: classes.paperCust\n  }, __jsx(PostForm, {\n    user: props.user,\n    categories: props.categories,\n    citydata: props.citydata,\n    post: post\n  }), \"/>\")))), __jsx(Footer, null))));\n};\n\nNewPost.getInitialProps = function _callee(ctx) {\n  var COUNTRYCODE, citydata;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          COUNTRYCODE = config.COUNTRYCODE;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Queries.getCities(COUNTRYCODE));\n\n        case 3:\n          citydata = _context.sent;\n          return _context.abrupt(\"return\", {\n            citydata: citydata\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default withAuthSync(NewPost);","map":null,"metadata":{},"sourceType":"module"}